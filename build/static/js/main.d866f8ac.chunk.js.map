{"version":3,"sources":["functions/getMiniLexAfterSearch.js","functions/getSynchedSubtitle.js","functions/getWordType.js","functions/getPickedWord.js","functions/getPickedWordInPara.js","functions/checkMiniLex.js","services/subtitles.js","functions/buildYouTubeLinkArray.js","functions/contains.js","functions/submitWord.js","functions/getRandomWord.js","functions/getFailureMessage.js","functions/convertToMs.js","functions/getTimeDiffs.js","functions/synchSubtitles.js","functions/playPreviousVideo.js","functions/replayCurrentVideo.js","functions/playNextVideo.js","functions/nextMeaning.js","functions/previousMeaning.js","functions/secondsForward.js","functions/secondsBackward.js","functions/fetchData.js","functions/resetLinkAtStart.js","functions/updateYouTubeLinks.js","functions/getLexAfterSearch.js","functions/submitWordLex.js","functions/convertWholeText.js","functions/getSynchedSubtitleNotReady.js","functions/detectWindowSize.js","components/Header.js","components/SearchBar.js","components/Type.js","components/TypeAlone.js","components/Bojningar.js","components/Lexicon.js","components/MiniType.js","components/MiniTypeAlone.js","components/MiniBojningar.js","components/MiniLex.js","components/Subtitle.js","components/SubtitleMiniLex.js","components/Footer.js","components/About.js","components/PlayerBarControls.js","components/PrivacyPolicy.js","App.js","index.js"],"names":["findAWord","query","entries","wordlist","toLowerCase","includes","filter","entry","word","bojningar_all","console","log","isEqualArr","arr1","arr2","isEqual","length","i","getMiniLexAfterSearch","pickedWord","miniLexObj","result_arr","miniWordResults","endsWith","new_query","substring","meanings","forEach","result","meaning","engelska","push","meanings_pre_filtered","bojningar","meanings_filtered","findIndex","meaningFinal","miniWordMeanings","types","type_already_in","type","type_json","index_of_type","updated_type_json","n","splice","sort","miniWordTypes","miniWordType","meanings_shown","miniShownMeanings","getSynchedSubtitle","youTubeLinkList","synchedSubtitleObj","wholeText","unSubbedPart","wholeTextArr","arr","miliSecondsArr","arrOfarr","getUnsubbedPart","subtitleIndex","getWordType","pickedWordType","getPickedWord","pickedSpan","replace","getPickedWordInPara","lineIndex","split","char","Number","checkMiniLex","player","miniPickedWord","pauseVideo","playVideo","baseUrl","getAll","axios","get","then","response","data","getAbout","getCollection","collection","url","getOneSubtitle","videoId","a","getSubtitleResults","getWordResults","reportBug","subtitleToBeModified","put","deleteBuggyLines","id","shuffle","copyArr","pickedNumbers","number","Math","floor","random","indexOf","convertArrayTimeIntoSeconds","parseInt","buildYouTubeLinkArray","idArr","database","puncReg","regex","RegExp","source","theList","copyIdArr","index","convertedWholeText","newWholeText","l","newLine","timeStampAsText","timeStampArr","secondsArr","stamp","hour","minutes","seconds","miliSeconds","slice","subtitleBetweenTwoStamps","j","subtitle","Object","keys","convertWholeText","text","time","timeStamp","uTubeLink","wordArr","line","ord","test","shownSubtitles","join","videoID","buildLink","contains","filteredWholeText","submitWord","appReady","subtitles","setFetchReady","submissionObj","videoIDsThatContain","subtitleService","randomWords","getRandomWord","getFailureMessage","messageObj","shownText","shownSubtitlesArr","convertToMs","digitsAfterDot","toString","time_str","getTimeDiffs","unSubbedPartArr","ms","foundSubtitle","foundIndex","unSubbedIndex","part","subbedIndex","time_diff_1","time_diff_3","find","error","synchSubtitles","submitted","youTubeLinks","subTimeoutId_1","subTimeoutId_3","ref","setTimeDiff1","setTimeDiff3","setSubtitleIndex","setSubmitted","setShowSubtitle","setShownSubtitles","setShownSubtitlesArr","setSubTimeoutId_1","setSubTimeoutId_3","setMiniWordResults","window","clearTimeout","seeThis","current","getCurrentTime","timeDiffs","setTimeout","playPreviousVideo","videoIndex","setVideoIndex","setCurrentVideoId","setYouTubeLink","setPlayingVideoTime","currentVideoId","playingVideoTime","youTubeLink","setSynchedSubtitle","youtubeLink","replayCurrentVideo","playNextVideo","nextMeaning","shownMeaningIndex","shownMeanings","setShownMeanigIndex","previousMeaning","secondsForward","getInternalPlayer","duration","getDuration","seekTo","secondsBackward","fetchData","fetchReady","pathname","setEntries","setSubtitles","setWordlist","setAppReady","setPage","collections","words","resetLinkAtStart","linkAtStart","currentLink","updateYouTubeLinks","setYouTubeLinks","map","getLexAfterSearch","lexObj","wordResults","wordMeanings","wordTypes","wordType","submitWordLex","getSynchedSubtitleNotReady","detectWindowSize","size","setWidth","setHeight","innerWidth","Header","props","className","onClick","logo","about","SearchBar","hideShowLetters","display","lettersVisible","keyboardStyle","color","onSubmit","handleSubmit","autoFocus","value","placeholder","onChange","handleQueryChange","style","handleLetter","title","handleKeyboard","handleRandomWord","form","Type","typeBoxStyle","borderBottom","globalType","pick","pickId","TypeAlone","Bojningar","finns","bojning","pickBojning","Lexicon","meaningIndexes","length_arr","finnsBojningar","pickMe","pickedType","alignItems","countryCode","svg","pickMeaning","definition","synonymer","href","target","rel","MiniType","fontWeight","MiniTypeAlone","MiniBojningar","MiniLex","miniLexStyle","lexId","fontSize","Subtitle","showSubtitle","handleShow","handleHide","listLength","triggerSubmission","pickWord","miniLexVisible","showWhenVisible","background","cursor","textDecoration","SubtitleMiniLex","Footer","useState","policy","About","PlayerBarControls","showStats","showWhenNotVisible","handleTenSecondsBackward","handleBack","handleKÃ¶rOm","handleNext","handleTenSecondsForward","handleBug","PrivacyPolicy","App","React","createRef","history","useHistory","setShowWelcomeText","setHideVideo","lexReady","setLexReady","resultsReady","setResultsReady","updateReady","setUpdateReady","page","isRreset","setIsReset","setQuery","setShowStats","width","height","autoplay","setAutoplay","setWholeText","setUnSubbedPartArr","setWordResults","setWordTypes","setWordType","setWordMeanings","setShownMeanings","setMiniWordTypes","setMiniWordType","setMiniWordMeanings","setMiniShownMeanings","miniShownMeaningIndex","setMiniShownMeanigIndex","setMiniPickedWord","setLettersVisible","useEffect","ReactGA","initialize","pageview","location","addEventListener","event","preventDefault","reset","toPage","document","getElementById","focus","scrollTo","resetQuery","message","submission","setApp","submissionLex","setLex","setMiniLex","selectType","selectMiniType","selectMeaning","selectMiniMeaning","selectBojning","selectWord","handleNextMeaning","handlePreviousMeaning","opts","playerVars","cc_lang_pref","cc_load_policy","enablejsapi","onPlay","onPause","confirm","back","next","playing","controls","config","ReactDOM","render"],"mappings":"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","file":"static/js/main.d866f8ac.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nconst findAWord = (query, entries, wordlist) => {\r\n  query = query.toLowerCase()\r\n  if(wordlist.includes(query)){\r\n    let result_arr = entries\r\n      .filter(entry => entry.word === query || entry.bojningar_all.includes(query))\r\n\r\n    return result_arr\r\n  } else {\r\n    console.log('no such word in the database')\r\n    return []\r\n  }\r\n}\r\n\r\n/* eslint-disable eqeqeq */\r\nfunction isEqualArr(arr1, arr2){\r\n  let isEqual = true\r\n  if(arr1.length != arr2.length){\r\n    isEqual = false\r\n  } else {\r\n    for(let i = 0; i < arr1.length ; i++){\r\n      if(arr1[i] != arr2[i]){\r\n        isEqual = false\r\n        break\r\n      }\r\n    }\r\n  }\r\n  return isEqual\r\n}\r\n\r\n\r\n//S-setMiniLex\r\nconst getMiniLexAfterSearch = (pickedWord, entries, wordlist) => {\r\n  let miniLexObj = {}\r\n  //setMiniShownMeanigIndex(0)\r\n  miniLexObj.miniShownMeaningIndex = 0\r\n  let result_arr = findAWord(pickedWord, entries, wordlist)\r\n  //setMiniWordResults(result_arr)\r\n  miniLexObj.miniWordResults = result_arr\r\n\r\n  //\r\n  if(pickedWord.endsWith('s') && result_arr.length === 0){\r\n    let length = pickedWord.length\r\n    let new_query = pickedWord.substring(0, length-1)\r\n    pickedWord = new_query\r\n    result_arr = findAWord(pickedWord, entries, wordlist)\r\n    //setWordResults(result_arr)\r\n    miniLexObj.miniWordResults = result_arr\r\n  }\r\n  //\r\n\r\n  //build wordMeanings\r\n  let meanings = []\r\n  result_arr.forEach(result => {\r\n    result.meanings.forEach(meaning => {\r\n      if(meaning.engelska.length > 0){\r\n        meaning.word = result.word\r\n        meanings.push(meaning)\r\n      }\r\n    })\r\n  })\r\n\r\n  //break function if the meanings is empty tex: an\r\n  if(meanings.length === 0){\r\n    //setWordResults([])\r\n    miniLexObj.miniWordResults = []\r\n    return miniLexObj\r\n  }\r\n\r\n  //only the ones whose bojningar includes the query or the word is equal to the query\r\n  let meanings_pre_filtered = meanings.filter(meaning => meaning.bojningar.includes(pickedWord) || meaning.word === pickedWord)\r\n\r\n  //The followinng was needed because in the mini lex there was so many card with the same content\r\n  let meanings_filtered = []\r\n  meanings_pre_filtered.forEach(meaning => {\r\n    if(meanings_filtered.findIndex(meaningFinal => isEqualArr(meaning.bojningar, meaningFinal.bojningar) && isEqualArr(meaning.engelska, meaningFinal.engelska)) === -1){\r\n      meanings_filtered.push(meaning)\r\n    }\r\n  })\r\n\r\n  //setMiniWordMeanings(meanings_filtered)\r\n  miniLexObj.miniWordMeanings = meanings_filtered\r\n\r\n  //build wordTypes\r\n  let types = []\r\n  meanings_filtered.forEach(meaning => {\r\n    if(meaning.engelska.length > 0) {\r\n      if(types.findIndex(type_already_in => type_already_in.type === meaning.type) === -1){\r\n        let type_json = { 'type': meaning.type, 'n': 1 }\r\n        types.push(type_json)\r\n      } else {\r\n        let index_of_type = types.findIndex(type_already_in => type_already_in.type === meaning.type)\r\n        let updated_type_json = types[index_of_type]\r\n        let n = updated_type_json.n\r\n        updated_type_json.n = n+1\r\n        types.splice(index_of_type, 1, updated_type_json)\r\n      }\r\n    }\r\n  })\r\n\r\n  types.sort()\r\n  //setMiniWordTypes(types)\r\n  miniLexObj.miniWordTypes = types\r\n  //setMiniWordType(types[0].type)\r\n  miniLexObj.miniWordType = types[0].type\r\n\r\n  //build meanings_shown\r\n  let meanings_shown = meanings_filtered.filter(meaning => meaning.type === types[0].type)\r\n  //setMiniShownMeanigs(meanings_shown)\r\n  miniLexObj.miniShownMeanings = meanings_shown\r\n  return miniLexObj\r\n}\r\n//E-setMiniLex\r\n\r\nexport default getMiniLexAfterSearch","/* eslint-disable no-unused-vars */\r\nconst getUnsubbedPart = (youTubeLinkList, i) => {\r\n  let wholeTextArr = youTubeLinkList[i].wholeText\r\n  let arr = [[0, wholeTextArr[0].miliSecondsArr[0]]]\r\n  for(let i = 0 ; i < wholeTextArr.length - 1 ; i++){\r\n    let arrOfarr = [wholeTextArr[i].miliSecondsArr[1], wholeTextArr[i+1].miliSecondsArr[0]]\r\n    arr.push(arrOfarr)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst getSynchedSubtitle = (youTubeLinkList, i) => {\r\n  let synchedSubtitleObj = {}\r\n  synchedSubtitleObj.wholeText = youTubeLinkList[i].wholeText\r\n  synchedSubtitleObj.unSubbedPart = getUnsubbedPart(youTubeLinkList, i)\r\n  synchedSubtitleObj.subtitleIndex = youTubeLinkList[i].subtitleIndex\r\n  return synchedSubtitleObj\r\n}\r\n\r\nexport default getSynchedSubtitle","/* eslint-disable no-unused-vars */\r\nconst getWordType = (pickedWordType) => {\r\n  if(pickedWordType === ''){\r\n    //setWordType('empty')\r\n    return 'empty'\r\n  } else {\r\n    //setWordType(picked_wordType)\r\n    return pickedWordType\r\n  }\r\n}\r\n\r\nexport default getWordType","const getPickedWord = (pickedSpan) => {\r\n  const regex = /[â!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g\r\n  return pickedSpan.replace(regex, '')\r\n}\r\n\r\nexport default getPickedWord","const getPickedWordInPara = (pickedSpan) => {\r\n  let lineIndex = pickedSpan.split('').findIndex(char => char === '-')\r\n  let length = Number(pickedSpan.substring(0,lineIndex))\r\n  const regex = /[â!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g\r\n  return pickedSpan.substring(lineIndex+1 , lineIndex+length+1).replace(regex, '')\r\n}\r\n\r\nexport default getPickedWordInPara","const checkMiniLex = (player, pickedSpan, miniPickedWord) => {\r\n  if(miniPickedWord.toLowerCase() !== pickedSpan.toLowerCase()){\r\n    //setMiniPickedWord(pickedSpan)\r\n    player.pauseVideo()\r\n    return pickedSpan\r\n  } else {\r\n    //setMiniPickedWord('')\r\n    player.playVideo()\r\n    return ''\r\n  }\r\n}\r\n\r\nexport default checkMiniLex","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport axios from 'axios'\r\n//Enable 1. baseUrl if the frontend is connected to the backend\r\n//1.\r\n//const baseUrl = 'http://localhost:3011'\r\n//2.\r\nconst baseUrl = '/api'\r\n// eslint-disable-next-line linebreak-style\r\n//const aboutUrl = '/api/about'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getAbout = () => {\r\n  const url = '/api/about'\r\n  const request = axios.get(url)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getCollection = (collection) => {\r\n  const url = `${baseUrl}/${collection}`\r\n  const request = axios.get(url)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getOneSubtitle = async(videoId) => {\r\n  const url = `${baseUrl}/subtitles/${videoId}`\r\n  const response = await axios.get(url)\r\n  return response.data\r\n}\r\n\r\nconst getSubtitleResults = async(query) => {\r\n  const url = `${baseUrl}/subtitles/results/${query}`\r\n  console.log('First query subtitles')\r\n  const response = await axios.get(url)\r\n  return response.data\r\n}\r\n\r\nconst getWordResults = async(query) => {\r\n  const url = `${baseUrl}/words/results/${query}`\r\n  console.log('First query words')\r\n  const response = await axios.get(url)\r\n  return response.data\r\n}\r\n\r\nconst reportBug = async(subtitleToBeModified) => {\r\n  const url = `${baseUrl}/subtitles/${subtitleToBeModified.videoId}`\r\n  const response = await axios.put(url, subtitleToBeModified)\r\n  return response.data\r\n}\r\n\r\nconst deleteBuggyLines = async(subtitleToBeModified) => {\r\n  const url = `${baseUrl}/subtitles/${subtitleToBeModified.id}`\r\n  const response = await axios.put(url, subtitleToBeModified)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getAbout,\r\n  getCollection,\r\n  getOneSubtitle,\r\n  getSubtitleResults,\r\n  getWordResults,\r\n  reportBug,\r\n  deleteBuggyLines\r\n}","//shuffle an Array\r\nfunction shuffle(arr){\r\n  let copyArr = []\r\n  let pickedNumbers = []\r\n  let length = arr.length\r\n  let i = 0\r\n\r\n  while(i<length){\r\n    let number = Math.floor(Math.random()*length)\r\n    if(pickedNumbers.indexOf(number)===-1){\r\n      i++\r\n      pickedNumbers.push(number)\r\n      copyArr.push(arr[number])\r\n    }\r\n  }\r\n  return copyArr\r\n}\r\n//E-shuffle\r\n\r\n//S-onvertArrayTimeIntoSeconds\r\nfunction convertArrayTimeIntoSeconds(arr){\r\n  return parseInt(arr[0])*3600 + parseInt(arr[1])*60 + parseInt(arr[2])\r\n}\r\n//E-onvertArrayTimeIntoSeconds\r\n\r\n//S-convertArrayTimeIntoMiliSeconds\r\nfunction convertArrayTimeIntoMiliSeconds(arr){\r\n  return parseInt(convertArrayTimeIntoSeconds(arr.slice(0,3)))*1000 + parseInt(arr[3])\r\n}\r\n//E-convertArrayTimeIntoMiliSeconds\r\n\r\n//converts wholeText that is formatted as an array that consists of strings into another array where every piece of ubtitle is formatted as an object\r\n//{\r\n//  \"timeStampAsText\" : \"00:00:53.580 --> 00:00:55.940\",\r\n//  \"secondsArr\" : [53, 55],\r\n//  \"miliSecondsArr\" : [53580, 55940],\r\n//  \"subtitle\": ['ananÄ± sikerim', 'orospu bitch']\r\n//}\r\nfunction convertWholeText(wholeText){\r\n  let newWholeText = []\r\n  let l = wholeText.length\r\n\r\n  for(let i = 0 ; i < l ; i++){\r\n    let newLine = {}\r\n    if(wholeText[i].includes('-->')){\r\n      newLine.timeStampAsText = wholeText[i]\r\n      let timeStampArr = wholeText[i].split(' --> ')\r\n      let secondsArr = []\r\n      let miliSecondsArr = []\r\n      timeStampArr.forEach(stamp => {\r\n        let hour = stamp.substring(0,2)\r\n        let minutes = stamp.substring(3,5)\r\n        let seconds = stamp.substring(6,8)\r\n        let miliSeconds = stamp.substring(9,12)\r\n        secondsArr.push(convertArrayTimeIntoSeconds([hour, minutes, seconds]))\r\n        miliSecondsArr.push(convertArrayTimeIntoMiliSeconds([hour, minutes, seconds, miliSeconds]))\r\n      })\r\n      newLine.secondsArr = secondsArr\r\n      newLine.miliSecondsArr = miliSecondsArr\r\n      let subtitleBetweenTwoStamps = []\r\n      //let j = i+1\r\n      for(let j = i + 1 ; j < l ; j++){\r\n        if(wholeText[j].includes('-->')){\r\n          break\r\n        }\r\n        subtitleBetweenTwoStamps.push(wholeText[j])\r\n      }\r\n      newLine.subtitle = subtitleBetweenTwoStamps\r\n    }\r\n\r\n    if(Object.keys(newLine).length > 0){\r\n      newWholeText.push(newLine)\r\n    }\r\n  }\r\n  return newWholeText\r\n}\r\n//E-convertWholeText\r\n\r\n//S-buildLink\r\nfunction buildLink(videoID, time){\r\n  return `https://www.youtube.com/embed/${videoID}?start=${time}&autoplay=1&cc_load_policy=1&cc_lang_pref=sv`\r\n}\r\n//E-buildLink\r\n\r\n//S-buildYouTubeLinkArray\r\n//idArr the video that contains the query, database = object.subtitles\r\nfunction buildYouTubeLinkArray(query, idArr, database){\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n          puncReg.source +\r\n          word +\r\n          puncReg.source +\r\n          endReg.source , 'i' )\r\n\r\n  //copy this into the global youtube link array\r\n  let theList = []\r\n  let copyIdArr = shuffle(idArr)\r\n\r\n  //idArr.forEach(function(id){\r\n  for(let index = 0 ; index < idArr.length - 1 ; index++){\r\n    let id = copyIdArr[index]\r\n    let wholeText = database.filter( subtitle => subtitle.videoId === id )[0].text\r\n    let convertedWholeText = convertWholeText(wholeText)\r\n    let l = convertedWholeText.length\r\n\r\n    for(let i = 0; i < l - 1 ; i++){\r\n      let time\r\n      let timeStamp\r\n      let uTubeLink = ''\r\n      //let wordArr = wholeText[i].split(' ')\r\n      let wordArr = []\r\n\r\n      convertedWholeText[i].subtitle.forEach( line => {\r\n        line.split(' ').forEach(word => wordArr.push(word))\r\n      })\r\n\r\n      wordArr.forEach(function(ord){\r\n        if(regex.test(ord)){\r\n          time = convertedWholeText[i].secondsArr[0]\r\n          timeStamp = convertedWholeText[i].timeStampAsText\r\n          let secondsArr = convertedWholeText[i].secondsArr\r\n          let miliSecondsArr = convertedWholeText[i].miliSecondsArr\r\n          let shownSubtitles = convertedWholeText[i].subtitle.join('\\n')\r\n          //firstTimeIndex = findTimeInVideo(i, wholeText).firstTimeIndex\r\n          uTubeLink = buildLink(id,time)\r\n          theList.push({\r\n            'youtubeLink': uTubeLink,\r\n            'videoId': id,\r\n            'time': time,\r\n            'timeStamp': timeStamp,\r\n            'secondsArr': secondsArr,\r\n            'miliSecondsArr': miliSecondsArr,\r\n            //'firstTimeIndex': firstTimeIndex,\r\n            //'nextTimeStamp': findNextTime(firstTimeIndex, wholeText).nextTimeStamp,\r\n            //'secondTimeIndex': findNextTime(firstTimeIndex, wholeText).secondTimeIndex,\r\n            //'lineIndex': i,\r\n            'wholeText': convertedWholeText,\r\n            'shownSubtitles': shownSubtitles,\r\n            'subtitleIndex' : i\r\n            //'timeDifference': tillTheNextStamp(time, firstTimeIndex, wholeText).timeDifference,\r\n          })\r\n        }\r\n      })\r\n\r\n    }\r\n    if(theList.length > 1000){\r\n      break\r\n    }\r\n    //})\r\n  }\r\n\r\n  //console.log('results: ', theList.length)\r\n\r\n  return shuffle(theList)\r\n}\r\n//E-buildYouTubeLinkArray\r\n\r\nexport default buildYouTubeLinkArray\r\n","//S-contains\r\nfunction contains(query, wholeText){\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n          puncReg.source +\r\n          word +\r\n          puncReg.source +\r\n          endReg.source , 'i' )\r\n\r\n\r\n  //console.log(wholeText)\r\n  let filteredWholeText = wholeText.filter(line => !line.includes('-->'))\r\n  //console.log(filteredWholeText)\r\n  let l = filteredWholeText.length\r\n\r\n  let contains = false\r\n\r\n  for(let i = 0 ; i < l ; i++){\r\n    let line = filteredWholeText[i]\r\n\r\n    let lineArr = line.split(' ')\r\n\r\n    lineArr.forEach(function(ord){\r\n      if(regex.test(ord)){\r\n        //console.log('line is here!!!!', line)\r\n        //console.log('lineArr is here!!!!', lineArr)\r\n        //console.log( `OBS! \"${word}\" is found`)\r\n        contains = true\r\n      }\r\n    })\r\n    //I am not sure\r\n    if(contains){\r\n      break\r\n    }\r\n  }\r\n\r\n  return contains\r\n}\r\n//E-contains\r\n\r\nexport default contains\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-undef */\r\n//S-submissionWithLex\r\nimport subtitleService from '../services/subtitles'\r\nimport buildYouTubeLinkArray from './buildYouTubeLinkArray'\r\nimport contains from './contains'\r\n\r\nconst submitWord = async(query, appReady, subtitles, setFetchReady) => {\r\n  const submissionObj = {}\r\n  let youTubeLinkList = []\r\n  let videoIDsThatContain = []\r\n  if(query !== ''){\r\n    if(appReady){\r\n      subtitles.forEach(subtitle => {\r\n        if(contains(query, subtitle.text)){\r\n          videoIDsThatContain.push(subtitle.videoId)\r\n        }\r\n      })\r\n      youTubeLinkList = buildYouTubeLinkArray(query, videoIDsThatContain, subtitles)\r\n      submissionObj.youTubeLinkList = youTubeLinkList\r\n      submissionObj.query = query.toLowerCase()\r\n      return submissionObj\r\n    } else {\r\n      await subtitleService.getSubtitleResults(query.toLowerCase())\r\n        .then(response => {\r\n          youTubeLinkList = response.youTubeLinkList\r\n          //videoIDsThatContain = response.videoIDsThatContain\r\n          //console.log(youTubeLinkList)\r\n          submissionObj.youTubeLinkList = youTubeLinkList\r\n        })\r\n      setFetchReady(true)\r\n    }\r\n    return submissionObj\r\n  } else {\r\n    submissionObj.youTubeLinkList = []\r\n    return submissionObj\r\n  }\r\n}\r\n//E-submisstionWithLex\r\n\r\nexport default submitWord","/* eslint-disable no-unused-vars */\r\nconst randomWords = ['absolut','acceptera','aj','aktier','aktivitet','aktiviteter','aktÃ¶rer','all','alldeles','allmÃ¤nna','allra','alls','allting','allvar','alternativ','and','andas','aning','anledning','anledningen','annars','annorlunda','anpassa','anser','ansiktet','anstÃ¤llda','ansvar','antal','antalet','antingen','anvÃ¤nda','anvÃ¤nder','anvÃ¤nt','arbeta','arbetar','arbete','arbetet','arbetsfÃ¶rmedlingen','arbetsgivare','arbetsmarknaden','arg','avsluta','avsnitt','avstÃ¥nd','axel','bada','bak','bakom','banan','barnen','be','befinner','begrepp','begreppet','behov','behÃ¶va','behÃ¶vde','behÃ¶vs','ben','ber','beroende','beror','berÃ¤tta','berÃ¤ttade','berÃ¤ttar','beskriva','beskriver','beslut','bestÃ¤mma','bestÃ¤mmer','bestÃ¥r','besÃ¶k','betala','betalar','betydelse','betyder','betydligt','bidra','bidrar','bil','bild','bilden','bilder','bilen','biologisk','bit','bland','blanda','blivit','blÃ¥','bo','bodde','boende','bok','boken','bolag','bor','borde','borta','bostÃ¤der','botten','bredvid','brukar','bryr','budget','bussen','bygga','bygger','byggt','byta','byter','bÃ¤r','bÃ¤ra','bÃ¤st','bÃ¥da','bÃ¶cker','bÃ¶r','bÃ¶rja','bÃ¶rjade','bÃ¶rjan','bÃ¶rjat','chans','cirka','coolt','dagar','dagarna','dagen','dags','datorn','dela','delar','delarna','delen','dels','demokratiska','deras','dess','dessa','dessutom','desto','dialog','digital','dina','direkt','diskussion','diskutera','dit','ditt','djupt','djur','dock','dom','dra','drar','dricka','driva','driver','drog','duktig','dÃ¤refter','dÃ¤remot','dÃ¤rifrÃ¥n','dÃ¥lig','dÃ¥liga','dÃ¥ligt','dÃ¶','dÃ¶d','dÃ¶r','dÃ¶rren','eftersom','efterÃ¥t','egen','egentligen','eget','egna','ej','ekonomi','ekonomiska','elever','eleverna','emot','ena','enda','endast','energi','engelska','enkelt','enligt','ens','ensam','enskilda','entreprenÃ¶r','era','erbjuda','erfarenhet','erfarenheter','exakt','exempelvis','extra','extremt','faktum','faller','fallet','familj','familjen','fan','fanns','fantastisk','fantastiskt','farligt','fast','fatta','fattar','fel','fem','fett','film','filma','filmen','filmer','fimpen','fin','fina','finnas','fint','fixa','flesta','flytta','flyttar','fokus','fokusera','folket','fonder','for','form','forskning','fort','fortfarande','fortsatt','fortsÃ¤tta','fortsÃ¤tter','framfÃ¶r','framfÃ¶rallt','framme','framtiden','framÃ¥t','framÃ¶ver','fri','fria','frihet','fritt','frukost','frÃ¤mst','frÃ¥gade','frÃ¥gan','frÃ¥gar','frÃ¥gorna','full','fullt','fundera','funderar','fungera','fungerar','funkar','funnits','fy','fylla','fyller','fyra','fysiskt','fÃ¤rg','fÃ¤rre','fÃ¶lja','fÃ¶ljer','fÃ¶rbi','fÃ¶rbÃ¤ttra','fÃ¶rdomar','fÃ¶re','fÃ¶retag','fÃ¶retagen','fÃ¶retaget','fÃ¶rhoppningsvis','fÃ¶rklara','fÃ¶rlÃ¥t','fÃ¶rr','fÃ¶rra','fÃ¶rskolan','fÃ¶rslag','fÃ¶rslaget','fÃ¶rst','fÃ¶rstÃ¥','fÃ¶rstÃ¥r','fÃ¶rstÃ¥s','fÃ¶rsvara','fÃ¶rsÃ¶k','fÃ¶rsÃ¶ka','fÃ¶rsÃ¶ker','fÃ¶rsÃ¶kt','fÃ¶rsÃ¶kte','fÃ¶rtroende','fÃ¶rut','fÃ¶rutom','fÃ¶rutsÃ¤ttningar','fÃ¶rÃ¤ldrar','fÃ¶rÃ¤ndra','fÃ¶rÃ¤ndras','fÃ¶rÃ¤ndring','gamla','gammal','gav','ge','gemensamma','gemensamt','generellt','genomfÃ¶ra','gett','gillar','givetvis','glad','glada','glÃ¶m','god','goda','godis','golvet','gott','grabbar','grabbarna','grad','grader','grann','gratis','grej','grejen','grejer','grund','grunden','grupp','gruppen','grupper','grymt','grÃ¤nsen','grÃ¶n','grÃ¶na','gud','gymnasiet','gÃ¤llande','gÃ¤rna','gÃ¥ngen','gÃ¥nger','gÃ¥tt','hallÃ¥','halv','hamna','hamnar','hand','handen','handla','hans','hantera','hanterar','hat','hel','heller','helst','hem','hemma','hemsida','henne','hette','himla','hinner','historia','historien','hit','hitta','hittade','hittar','hittat','hittills','hjÃ¤lp','hjÃ¤lpa','hjÃ¤lper','hjÃ¤rnan','hjÃ¤rta','honom','hoppa','hoppas','hos','hot','hus','huset','huvud','huvudet','hÃ¤lsa','hÃ¤mta','hÃ¤nda','hÃ¤nde','hÃ¤nder','hÃ¤nderna','hÃ¤ng','hÃ¤nga','hÃ¤nger','hÃ¤nt','hÃ¤rifrÃ¥n','hÃ¤rligt','hÃ¥l','hÃ¥ll','hÃ¥lla','hÃ¥r','hÃ¥ret','hÃ¥rt','hÃ¶g','hÃ¶ga','hÃ¶ger','hÃ¶gre','hÃ¶gt','hÃ¶ll','hÃ¶r','hÃ¶ra','hÃ¶rde','hÃ¶rt','hÃ¶sten','ibland','ideologiska','idÃ©','idÃ©er','ifall','ifrÃ¥n','igenom','igÃ¥ng','igÃ¥r','ihop','ihÃ¥g','ikvÃ¤ll','illa','individer','information','informationen','infÃ¶r','inga','ingenting','inget','ingÃ¥r','inne','innebÃ¤r','innehÃ¥ll','innehÃ¥ller','insatser','insÃ¥g','intressant','intresse','intresserad','investera','invÃ¥nare','is','istÃ¤llet','ivÃ¤g','jaha','jo','jobb','jobba','jobbade','jobbat','jobbet','jobbigt','jorden','jul','jÃ¤kla','jÃ¤mfÃ¶ra','jÃ¤mfÃ¶rt','jÃ¤ttebra','jÃ¤ttekul','jÃ¤vla','kaffe','kalla','kallad','kallade','kallar','kallas','kallt','kameran','kanal','kasta','killar','kille','klar','klara','klarar','klart','klass','klicka','klippa','klockan','klÃ¤der','knappt','koll','kollade','kollar','kollegor','kommande','kommentar','kommentarer','kommentera','kommit','kommun','kommunen','kommuner','kommunikation','kompetens','kompis','kompisar','konsekvenser','konsekvenserna','konstigt','kontakt','kontroll','koppla','kort','korta','korv','kostar','kraft','krav','krig','kring','kritik','kronor','kropp','kroppen','krÃ¤ver','kultur','kulturen','kunder','kunnat','kunskap','kvar','kvinna','kvinnor','kvÃ¤ll','kvÃ¤llen','kÃ¤nde','kÃ¤ndes','kÃ¤nna','kÃ¤nnas','kÃ¤nsla','kÃ¤nslan','kÃ¤nslor','kÃ¤nt','kÃ¤rlek','kÃ¶pa','kÃ¶per','kÃ¶pt','kÃ¶pte','kÃ¶ra','kÃ¶rde','la','ladda','lag','lagen','lager','laget','lagt','land','landet','leda','leder','ledsen','leva','lever','ligga','lika','like','liknande','lilla','linje','linjen','lista','litet','liv','livet','ljus','ljuset','lokala','lugn','lugnt','luktar','lunch','lyckas','lyckats','lyfta','lyssna','lyssnar','lÃ¤ge','lÃ¤get','lÃ¤gg','lÃ¤gga','lÃ¤gger','lÃ¤gre','lÃ¤kare','lÃ¤mna','lÃ¤mnar','lÃ¤nder','lÃ¤net','lÃ¤nge','lÃ¤ngre','lÃ¤ngs','lÃ¤ngst','lÃ¤nk','lÃ¤r','lÃ¤ra','lÃ¤rare','lÃ¤rt','lÃ¤sa','lÃ¤ser','lÃ¤skigt','lÃ¤st','lÃ¤ste','lÃ¤tt','lÃ¥g','lÃ¥ng','lÃ¥nga','lÃ¥ngt','lÃ¥t','lÃ¥ta','lÃ¥ter','lÃ¶sa','lÃ¶sning','lÃ¶sningar','magen','makt','makten','mamma','marken','mars','massa','massor','mat','match','matchen','matcher','maten','material','medan','medarbetare','medborgare','media','medier','menar','mest','meter','middag','miljarder','miljoner','miljÃ¶','miljÃ¶n','mindre','minns','minska','minst','minuter','mitten','mm','mobilen','moderna','morgon','morgonen','munnen','musik','myndigheter','mysigt','mÃ¤n','mÃ¤nniska','mÃ¤nniskan','mÃ¤nskliga','mÃ¤rker','mÃ¥','mÃ¥l','mÃ¥la','mÃ¥let','mÃ¥nad','mÃ¥nader','mÃ¥ngfald','mÃ¥r','mÃ¶jlighet','mÃ¶jligheten','mÃ¶jligheter','mÃ¶jligt','mÃ¶rkt','mÃ¶ta','mÃ¶te','mÃ¶ten','mÃ¶ter','mÃ¶tet','namn','nationella','natt','natten','naturen','naturligtvis','ned','nedanfÃ¶r','negativa','nere','nervÃ¶s','nio','nivÃ¥','noll','normalt','nummer','ny','nyheter','nyligen','nytt','nytta','nÃ¤','nÃ¤men','nÃ¤mligen','nÃ¤mnde','nÃ¤ra','nÃ¤rmare','nÃ¤stan','nÃ¥','nÃ¥gonsin','nÃ¥gonstans','nÃ¥gonting','nÃ¥nstans','nÃ¥nting','nÃ¥r','nÃ¶jd','oavsett','oberoende','oerhÃ¶rt','offentliga','ofta','oftast','omfattande','omkring','omrÃ¥de','omrÃ¥den','omrÃ¥det','omÃ¶jligt','ont','ord','ordentligt','ordet','ordfÃ¶rande','ordning','organisation','organisationer','orkar','oro','orolig','otroligt','pappa','par','pass','passa','passar','patienten','patienter','paus','pengar','pengarna','per','perfekt','period','person','personal','personalen','personen','personer','perspektiv','plan','planen','planera','plats','platsen','platser','plocka','plugga','plus','plÃ¶tsligt','polisen','politik','politiken','politiker','politisk','politiska','politiskt','positiv','positiva','positivt','poÃ¤ng','pratade','pratar','pratat','prenumerera','princip','privata','problem','problemet','procent','process','produkter','program','programmet','projekt','projektet','prov','prova','pucken','puss','pÃ¥gÃ¥r','pÃ¥verka','pÃ¥verkar','rad','rakt','rasism','reda','redo','regeringen','region','regionen','regler','rent','resa','resan','resten','resultat','resultatet','resurser','riktig','riktiga','rimligt','ringa','ringer','risk','risken','riskerar','rolig','roliga','roligt','roll','rosa','rum','rummet','ryggen','rÃ¤cker','rÃ¤dd','rÃ¤dda','rÃ¤kna','rÃ¤knar','rÃ¤ttigheter','rÃ¥d','rÃ¶d','rÃ¶da','rÃ¶r','rÃ¶ra','rÃ¶st','rÃ¶sta','rÃ¶ster','sagt','sak','saknar','samarbete','samband','samhÃ¤lle','samhÃ¤llet','samman','sammanhang','samt','samtal','samtalet','samtidigt','samtliga','samverkan','sannolikt','sant','satt','satte','sekunder','senare','sent','service','sett','sex','sida','sidan','siffror','sikt','sist','sista','sitt','sitta','sitter','situation','situationen','situationer','sju','sjuk','sjuka','sjukhus','sjukt','sjukvÃ¥rden','sjÃ¤lva','sjÃ¤lvklart','skall','skapa','skapar','skapat','skatt','ske','sker','skicka','skickar','skillnad','skillnaden','skit','skjuta','skjuter','skogen','skola','skolan','skott','skrev','skriv','skriva','skriver','skrivit','skull','skydda','skÃ¶nt','slags','slipper','slut','sluta','slutar','slutet','slutligen','slÃ¤ppa','slÃ¤pper','slÃ¥','slÃ¥r','smaka','smakar','smart','smÃ¥','snabbare','snabbt','snacka','snackar','snarare','snart','snygg','snyggt','snÃ¤lla','social','sociala','socialdemokraterna','soffan','solen','sommar','sommaren','sov','sova','sover','spara','speciellt','spel','spela','spelade','spelar','spelare','spelat','sprida','springa','springer','sprÃ¥k','sprÃ¥ket','spÃ¤nnande','spÃ¥r','stad','staden','stan','stanna','stannar','stark','starka','starkt','starta','startade','startar','staten','station','stationen','steg','stod','stolt','stopp','stoppa','stort','strategi','strax','stress','stund','stycken','styr','styra','stÃ¤ll','stÃ¤lla','stÃ¤lle','stÃ¤llen','stÃ¤ller','stÃ¤llet','stÃ¤mmer','stÃ¤ndigt','stÃ¤nga','stÃ¥','stÃ¶d','stÃ¶rre','stÃ¶rsta','stÃ¶tta','stÃ¶ttar','suttit','svar','svara','svarar','svart','svarta','svensk','svenskar','svÃ¥r','syfte','syftet','syns','system','systemet','sÃ¤g','sÃ¤ker','sÃ¤kert','sÃ¤lja','sÃ¤ljer','sÃ¤llan','sÃ¤mre','sÃ¤ng','sÃ¤ngen','sÃ¤rskilt','sÃ¤tta','sÃ¤tter','sÃ¤ttet','sÃ¥dan','sÃ¥dana','sÃ¥dant','sÃ¥dÃ¤r','sÃ¥g','sÃ¥klart','sÃ¥n','sÃ¥na','sÃ¥nt','sÃ¶der','sÃ¶dra','sÃ¶ka','sÃ¶ker','sÃ¶nder','tacka','tackar','tag','taget','tagit','taket','tala','talar','tankar','tanke','tanken','te','teknik','telefon','testa','testar','text','texten','tider','tidigare','tidigt','tillgÃ¥ng','tillhÃ¶r','tillrÃ¤ckligt','tills','tillstÃ¥nd','timmar','timme','tio','tips','titta','tittade','tittar','tittare','tittat','tja','tjej','tjejer','tjena','tjÃ¤na','tjÃ¤nster','tog','toppen','totalt','trafik','tredje','trevligt','tro','trodde','trots','tryck','trycka','trycker','trygg','trÃ¤ffa','trÃ¤ffar','trÃ¤ffas','trÃ¤na','trÃ¥kigt','trÃ¶tt','tufft','tumme','tunnelbanan','tur','tusen','tvungen','tvÃ¤tta','tycka','tyckte','tydlig','tydligen','tydligt','typen','typer','tyst','tyvÃ¤rr','tÃ¤nk','tÃ¤nka','tÃ¤nkt','tÃ¥g','tÃ¥get','undrar','undvika','ung','unga','ungdomar','ungefÃ¤r','uppdrag','uppe','uppgift','uppgifter','upplever','uppskattar','ur','utanfÃ¶r','utav','utbildning','utbildningen','utgÃ¶r','utifrÃ¥n','utmaning','utmaningar','utmaningen','utrymme','utveckla','utvecklas','utveckling','utvecklingen','vadÃ¥','val','valde','valet','valt','vanlig','vanliga','vanligt','vann','varandra','vare','varenda','varken','varmt','varor','varsÃ¥god','vart','vatten','vattnet','vecka','veckan','veckor','velat','vem','verkar','verkligheten','verksamhet','verksamheten','verksamheter','verktyg','veta','via','vidare','video','videon','viktig','viktiga','vila','vilja','ville','vinna','vinner','visa','visade','visar','visat','viss','vissa','visst','visste','vit','vita','vore','vunnit','vuxna','vÃ¤g','vÃ¤gar','vÃ¤gen','vÃ¤lja','vÃ¤ljer','vÃ¤lkommen','vÃ¤lkomna','vÃ¤n','vÃ¤nda','vÃ¤nner','vÃ¤nster','vÃ¤nta','vÃ¤ntar','vÃ¤rld','vÃ¤rlden','vÃ¤rre','vÃ¤rsta','vÃ¤rt','vÃ¤xa','vÃ¤xer','vÃ¥ga','vÃ¥gar','vÃ¥ld','vÃ¥rd','vÃ¥rden','vÃ¥rt','yngre','ytterligare','ytterst','Ã','Ã¤ldre','Ã¤lskar','Ã¤nda','Ã¤ndra','Ã¤nnu','Ã¤ntligen','Ã¤ta','Ã¤ter','Ã¤tit','Ã¥','Ã¥ka','Ã¥ker','Ã¥kte','Ã¥lder','Ã¥ngest','Ã¥ren','Ã¥ret','Ã¥rs','Ã¥sikter','Ã¥t','Ã¥tgÃ¤rder','Ã¥tta','Ã¶gon','Ã¶gonen','Ã¶ka','Ã¶kad','Ã¶kar','Ã¶kat','Ã¶nskar','Ã¶ppen','Ã¶ppet','Ã¶ppna','Ã¶ppnar','Ã¶verallt','Ã¶verens','Ã¶vriga']\r\n\r\nconst getRandomWord = () => {\r\n  let word\r\n  let length = randomWords.length\r\n  word = randomWords[[Math.floor(Math.random()*length)]]\r\n  return word\r\n}\r\n\r\nexport default getRandomWord","import getRandomWord from './getRandomWord'\r\n\r\nconst getFailureMessage = (query, text) => {\r\n  let messageObj = {}\r\n  let word = getRandomWord()\r\n  let shownText = `${text}${query}, try '${word}'`\r\n  //setShownSubtitles(shownText)\r\n  messageObj.shownText = shownText\r\n  let shownSubtitlesArr = shownText.split(/[\\s\\n]+/)\r\n  //setShownSubtitlesArr(shownSubtitlesArr)\r\n  messageObj.shownSubtitlesArr = shownSubtitlesArr\r\n  return messageObj\r\n}\r\n\r\nexport default getFailureMessage\r\n","/* eslint-disable no-unused-vars */\r\n//time : ref.current.getCurrentTime()\r\nconst convertToMs = (time) => {\r\n  let digitsAfterDot = time.toString().split('.')[1]\r\n  let time_str = time.toString().split('.').join('')\r\n  let l = time_str.length\r\n  return time_str.substring(0, l-(digitsAfterDot.length-3))\r\n}\r\n\r\nexport default convertToMs\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-undef */\r\nconst getTimeDiffs = (wholeText, unSubbedPartArr, ms) => {\r\n  let foundSubtitle\r\n  let foundIndex\r\n  let unSubbedIndex = unSubbedPartArr.findIndex(part => part[0] <= ms && ms <= part[1])\r\n  let subbedIndex = wholeText.findIndex(subtitle => subtitle.miliSecondsArr[0] <= ms && ms <= subtitle.miliSecondsArr[1])\r\n  try {\r\n    if(unSubbedIndex !== -1){\r\n      foundIndex = unSubbedIndex\r\n      foundSubtitle = wholeText[foundIndex]\r\n      let time_diff_1 = foundSubtitle.miliSecondsArr[0] - ms\r\n      let time_diff_3 = foundSubtitle.miliSecondsArr[1] - ms\r\n      return { foundIndex, time_diff_1, time_diff_3 }\r\n    } else {\r\n      if(subbedIndex === -1) {\r\n        let foundIndex = null\r\n        let time_diff_1 = null\r\n        let time_diff_3 = null\r\n        return { foundIndex, time_diff_1, time_diff_3 }\r\n      }\r\n      foundSubtitle = wholeText.find(subtitle => subtitle.miliSecondsArr[0] <= ms && ms <= subtitle.miliSecondsArr[1])\r\n      foundIndex = wholeText.findIndex(subtitle => subtitle.timeStampAsText === foundSubtitle.timeStampAsText )\r\n      let time_diff_3 = foundSubtitle.miliSecondsArr[1] - ms\r\n      let time_diff_1 = 0\r\n      return { foundIndex, time_diff_1, time_diff_3 }\r\n    }\r\n  } catch (error) {\r\n    console.log('something went wrong')\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport default getTimeDiffs","/* eslint-disable no-unused-vars */\r\nimport convertToMs from './convertToMs'\r\nimport getTimeDiffs from './getTimeDiffs'\r\n\r\nconst synchSubtitles = (\r\n  submitted,\r\n  youTubeLinks,\r\n  subTimeoutId_1,\r\n  subTimeoutId_3,\r\n  ref,\r\n  wholeText,\r\n  unSubbedPartArr,\r\n  setTimeDiff1,\r\n  setTimeDiff3,\r\n  setSubtitleIndex,\r\n  setSubmitted,\r\n  setShowSubtitle,\r\n  setShownSubtitles,\r\n  setShownSubtitlesArr,\r\n  setSubTimeoutId_1,\r\n  setSubTimeoutId_3,\r\n  setMiniWordResults,\r\n) => {\r\n  if(submitted && youTubeLinks.length > 0){\r\n    window.clearTimeout(subTimeoutId_1)\r\n    //window.clearTimeout(subTimeoutId_2)\r\n    window.clearTimeout(subTimeoutId_3)\r\n    setMiniWordResults([])\r\n    let seeThis = ref.current.getCurrentTime()\r\n    let ms = convertToMs(seeThis)\r\n    let timeDiffs = getTimeDiffs(wholeText, unSubbedPartArr, ms)\r\n    setTimeDiff1(timeDiffs.time_diff_1)\r\n    setTimeDiff3(timeDiffs.time_diff_3)\r\n    setSubtitleIndex(timeDiffs.foundIndex)\r\n    let index = timeDiffs.foundIndex\r\n    if(index >= wholeText.length || timeDiffs.foundIndex === null){\r\n      setSubmitted(false)\r\n      setShowSubtitle(false)\r\n      setTimeDiff1(null)\r\n      setTimeDiff3(null)\r\n    } else {\r\n      setShowSubtitle(true)\r\n\r\n      let timeout_1 = setTimeout(() => {\r\n        setShownSubtitles(wholeText[index].subtitle.join('\\n'))\r\n        setShownSubtitlesArr(wholeText[index].subtitle.join('\\n').split(/[\\s\\n]+/))\r\n      }, timeDiffs.time_diff_1)\r\n      setSubTimeoutId_1(timeout_1)\r\n\r\n      if(timeDiffs.time_diff_1 > 500) {\r\n        setShownSubtitles('...')\r\n        setShownSubtitlesArr(['...'])\r\n      }\r\n\r\n      let timeout_3 = setTimeout(() => {\r\n        setSubtitleIndex(index+1)\r\n      }, timeDiffs.time_diff_3)\r\n      setSubTimeoutId_3(timeout_3)\r\n\r\n    }\r\n  } else {\r\n    //console.log('no submission')\r\n    return null\r\n  }\r\n}\r\n\r\nexport default synchSubtitles","const playPreviousVideo = (\r\n  videoIndex,\r\n  setVideoIndex,\r\n  youTubeLinks,\r\n  setCurrentVideoId,\r\n  setYouTubeLink,\r\n  setPlayingVideoTime,\r\n  currentVideoId,\r\n  playingVideoTime,\r\n  youTubeLink,\r\n  setShowSubtitle,\r\n  setSynchedSubtitle\r\n) => {\r\n  if(videoIndex >= 1){\r\n    setVideoIndex(videoIndex-1)\r\n    let videoId = youTubeLinks[videoIndex-1].videoId\r\n    setCurrentVideoId(videoId)\r\n\r\n    let url = youTubeLinks[videoIndex-1].youtubeLink\r\n    setYouTubeLink(url)\r\n\r\n    let time = youTubeLinks[videoIndex-1].time\r\n    setPlayingVideoTime(time)\r\n\r\n    if(videoId === currentVideoId && time === playingVideoTime){\r\n      if(youTubeLink === youTubeLinks[videoIndex-1].youtubeLink + ' '){\r\n        setYouTubeLink(youTubeLinks[videoIndex-1].youtubeLink)\r\n      } else {\r\n        setYouTubeLink(youTubeLinks[videoIndex-1].youtubeLink + ' ')\r\n      }\r\n    }\r\n    setShowSubtitle(false)\r\n    setSynchedSubtitle(youTubeLinks, videoIndex-1)\r\n  }\r\n}\r\n\r\nexport default playPreviousVideo","const replayCurrentVideo = (\r\n  youTubeLinks,\r\n  setSubmitted,\r\n  setShowSubtitle,\r\n  youTubeLink,\r\n  videoIndex,\r\n  setYouTubeLink,\r\n  setSynchedSubtitle\r\n) => {\r\n  if(youTubeLinks.length > 0){\r\n    setSubmitted(false)\r\n    setShowSubtitle(true)\r\n    //updateWidth()\r\n    if(youTubeLink === youTubeLinks[videoIndex].youtubeLink + ' '){\r\n      setYouTubeLink(youTubeLinks[videoIndex].youtubeLink)\r\n    } else {\r\n      setYouTubeLink(youTubeLinks[videoIndex].youtubeLink + ' ')\r\n    }\r\n    setSynchedSubtitle(youTubeLinks, videoIndex)\r\n  }\r\n}\r\n\r\nexport default replayCurrentVideo","const playNextVideo = (\r\n  videoIndex,\r\n  youTubeLinks,\r\n  setVideoIndex,\r\n  setCurrentVideoId,\r\n  setYouTubeLink,\r\n  setPlayingVideoTime,\r\n  setShowSubtitle,\r\n  setSynchedSubtitle\r\n) => {\r\n  if(videoIndex < (youTubeLinks.length-1)){\r\n    setVideoIndex(videoIndex+1)\r\n    let videoId = youTubeLinks[videoIndex+1].videoId\r\n    setCurrentVideoId(videoId)\r\n\r\n    let url = youTubeLinks[videoIndex+1].youtubeLink\r\n    if(youTubeLinks[videoIndex].youtubeLink === url){\r\n      setYouTubeLink(url + ' ')\r\n    }\r\n    setYouTubeLink(url)\r\n\r\n    let time = youTubeLinks[videoIndex+1].time\r\n    setPlayingVideoTime(time)\r\n\r\n\r\n    setShowSubtitle(false)\r\n    setSynchedSubtitle(youTubeLinks, videoIndex+1)\r\n  }\r\n}\r\n\r\nexport default playNextVideo","const nextMeaning = (\r\n  shownMeaningIndex,\r\n  shownMeanings,\r\n  setShownMeanigIndex\r\n) => {\r\n  let index = shownMeaningIndex\r\n  let numberOfMeanings = shownMeanings.length\r\n  if(shownMeaningIndex < numberOfMeanings-1){\r\n    setShownMeanigIndex(index + 1)\r\n  }\r\n}\r\n\r\nexport default nextMeaning","const previousMeaning = (\r\n  shownMeaningIndex,\r\n  setShownMeanigIndex\r\n) => {\r\n  let index = shownMeaningIndex\r\n  if(shownMeaningIndex > 0){\r\n    setShownMeanigIndex(index - 1)\r\n  }\r\n}\r\n\r\nexport default previousMeaning","const secondsForward = (ref, seconds) => {\r\n  let time = ref.current.getInternalPlayer().getCurrentTime()\r\n  let duration = ref.current.getInternalPlayer().getDuration()\r\n  ref.current.getInternalPlayer().pauseVideo()\r\n  if(duration - time > seconds){\r\n    ref.current.getInternalPlayer().seekTo(time + seconds)\r\n  } else {\r\n    ref.current.getInternalPlayer().seekTo(duration-1)\r\n  }\r\n  ref.current.getInternalPlayer().playVideo()\r\n}\r\n\r\nexport default secondsForward","const secondsBackward = (ref, seconds) => {\r\n  let time = ref.current.getInternalPlayer().getCurrentTime()\r\n  ref.current.getInternalPlayer().pauseVideo()\r\n  ref.current.getInternalPlayer().seekTo(time - seconds)\r\n  ref.current.getInternalPlayer().playVideo()\r\n}\r\n\r\nexport default secondsBackward","import subtitleService from '../services/subtitles'\r\n\r\nconst fetchData = (\r\n  fetchReady,\r\n  pathname,\r\n  setEntries,\r\n  setSubtitles,\r\n  setWordlist,\r\n  setAppReady,\r\n  //setAbout,\r\n  setPage\r\n) => {\r\n\r\n  subtitleService\r\n    .getCollection('wordlist')\r\n    .then(collection => {\r\n      //console.log(collection)\r\n      setWordlist(collection)\r\n    })\r\n\r\n  subtitleService\r\n    .getCollection('words')\r\n    .then(collection => {\r\n      //console.log(collection)\r\n      setEntries(collection)\r\n    })\r\n\r\n  if(fetchReady){\r\n    if(pathname === '/'){\r\n      //setPage('/')\r\n      subtitleService\r\n        .getAll()\r\n        .then(collections => {\r\n          //setEntries(collections.words)\r\n          setSubtitles(collections.subtitles)\r\n          //setWordlist(collections.wordlist)\r\n          setAppReady(true)\r\n        })\r\n    } else if(pathname === '/about' ){\r\n      //setPage('about')\r\n      subtitleService\r\n        .getAbout()\r\n        .then(collections => {\r\n          setEntries(collections.words)\r\n          setSubtitles(collections.subtitles)\r\n          setWordlist(collections.wordlist)\r\n          setAppReady(true)\r\n        })\r\n    } else if(pathname === '/policy'){\r\n      subtitleService\r\n        .getAll()\r\n        .then(collections => {\r\n          setEntries(collections.words)\r\n          setSubtitles(collections.subtitles)\r\n          setWordlist(collections.wordlist)\r\n          setAppReady(true)\r\n        })\r\n    }\r\n  } else {\r\n    console.log('waiting for the first query...')\r\n    if(pathname === '/'){\r\n      //setAbout(false)\r\n      setPage('')\r\n    } else if(pathname === '/about' ){\r\n      //setAbout(true)\r\n      setPage('about')\r\n    } else if(pathname === '/privacypolicy'){\r\n      setPage('privacypolicy')\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default fetchData","const resetLinkAtStart = (linkAtStart, currentLink) => {\r\n  if(linkAtStart === currentLink) {\r\n    return linkAtStart + ''\r\n  } else {\r\n    return linkAtStart\r\n  }\r\n}\r\n\r\nexport default resetLinkAtStart","/* eslint-disable no-unused-vars */\r\n/*\r\nIf the app is not ready which means the data is not fetched yet, when the user submit a query\r\nthe query is channeled to the backend, the results one get from the backend will have onlt the first ten links convertedWholeText\r\nBecause the size of convertedWholeText is too big and it causes some sort of lag when transfering the data from backend server to the browser\r\nThis function will update the youTubeLinks as soon as the appReady becomes true, and fetch all the convertedWholeText in the background\r\n*/\r\n\r\n//S-onvertArrayTimeIntoSeconds\r\nfunction convertArrayTimeIntoSeconds(arr){\r\n  return parseInt(arr[0])*3600 + parseInt(arr[1])*60 + parseInt(arr[2])\r\n}\r\n//E-onvertArrayTimeIntoSeconds\r\n\r\n//S-convertArrayTimeIntoMiliSeconds\r\nfunction convertArrayTimeIntoMiliSeconds(arr){\r\n  return parseInt(convertArrayTimeIntoSeconds(arr.slice(0,3)))*1000 + parseInt(arr[3])\r\n}\r\n//E-convertArrayTimeIntoMiliSeconds\r\n\r\nfunction shuffle(arr){\r\n  let copyArr = []\r\n  let pickedNumbers = []\r\n  let length = arr.length\r\n  let i = 0\r\n\r\n  while(i<length){\r\n    let number = Math.floor(Math.random()*length)\r\n    if(pickedNumbers.indexOf(number)===-1){\r\n      i++\r\n      pickedNumbers.push(number)\r\n      copyArr.push(arr[number])\r\n    }\r\n  }\r\n  return copyArr\r\n}\r\n\r\n//converts wholeText that is formatted as an array that consists of strings into another array where every piece of ubtitle is formatted as an object\r\n//{\r\n//  \"timeStampAsText\" : \"00:00:53.580 --> 00:00:55.940\",\r\n//  \"secondsArr\" : [53, 55],\r\n//  \"miliSecondsArr\" : [53580, 55940],\r\n//  \"subtitle\": ['ananÄ± sikerim', 'orospu bitch']\r\n//}\r\nfunction convertWholeText(wholeText){\r\n  let newWholeText = []\r\n  let l = wholeText.length\r\n\r\n  for(let i = 0 ; i < l ; i++){\r\n    let newLine = {}\r\n    if(wholeText[i].includes('-->')){\r\n      newLine.timeStampAsText = wholeText[i]\r\n      let timeStampArr = wholeText[i].split(' --> ')\r\n      let secondsArr = []\r\n      let miliSecondsArr = []\r\n      timeStampArr.forEach(stamp => {\r\n        let hour = stamp.substring(0,2)\r\n        let minutes = stamp.substring(3,5)\r\n        let seconds = stamp.substring(6,8)\r\n        let miliSeconds = stamp.substring(9,12)\r\n        secondsArr.push(convertArrayTimeIntoSeconds([hour, minutes, seconds]))\r\n        miliSecondsArr.push(convertArrayTimeIntoMiliSeconds([hour, minutes, seconds, miliSeconds]))\r\n      })\r\n      newLine.secondsArr = secondsArr\r\n      newLine.miliSecondsArr = miliSecondsArr\r\n      let subtitleBetweenTwoStamps = []\r\n      //let j = i+1\r\n      for(let j = i + 1 ; j < l ; j++){\r\n        if(wholeText[j].includes('-->')){\r\n          break\r\n        }\r\n        subtitleBetweenTwoStamps.push(wholeText[j])\r\n      }\r\n      newLine.subtitle = subtitleBetweenTwoStamps\r\n    }\r\n\r\n    if(Object.keys(newLine).length > 0){\r\n      newWholeText.push(newLine)\r\n    }\r\n  }\r\n  return newWholeText\r\n}\r\n//E-convertWholeText\r\n\r\n/*\r\n{\r\n    'youtubeLink': uTubeLink,\r\n    'videoId': id,\r\n    'time': time,\r\n    'wholeText': convertedWholeText,\r\n    'subtitleIndex' : i\r\n}\r\n*/\r\n\r\nconst updateYouTubeLinks = (subtitles, youTubeLinkList, setYouTubeLinks) => {\r\n  youTubeLinkList.map(youTubeLink => {\r\n    youTubeLink.wholeText = convertWholeText(subtitles.find(subtitle => subtitle.videoId === youTubeLink.videoId).text)\r\n  })\r\n  setYouTubeLinks(youTubeLinkList)\r\n  console.log('youTubeLinks updated')\r\n}\r\n\r\nexport default updateYouTubeLinks","/* eslint-disable no-unused-vars */\r\nconst findAWord = (query, entries, wordlist) => {\r\n  query = query.toLowerCase()\r\n  if(wordlist.includes(query)){\r\n    let result_arr = entries\r\n      .filter(entry => entry.word === query || entry.bojningar_all.includes(query))\r\n\r\n    return result_arr\r\n  } else {\r\n    console.log('no such word in the database')\r\n    return []\r\n  }\r\n}\r\n\r\n//S-setLexAfterSearc\r\nconst getLexAfterSearch = (query, entries, wordlist) => {\r\n  let lexObj = {}\r\n  //setShownMeanigIndex(0)\r\n  lexObj.shownMeaningIndex = 0\r\n\r\n  //console.log(query)\r\n\r\n  let result_arr = findAWord(query, entries, wordlist)\r\n  //setWordResults(result_arr)\r\n  lexObj.wordResults = result_arr\r\n\r\n  //\r\n  if(query.endsWith('s') && result_arr.length === 0){\r\n    let length = query.length\r\n    let new_query = query.substring(0, length-1)\r\n    query = new_query\r\n    result_arr = findAWord(query, entries, wordlist)\r\n    //setWordResults(result_arr)\r\n    lexObj.wordResults = result_arr\r\n  }\r\n  //\r\n\r\n  //build wordMeanings\r\n  let meanings = []\r\n  result_arr.forEach(result => {\r\n    result.meanings.forEach(meaning => {\r\n      if(meaning.engelska.length > 0){\r\n        meaning.word = result.word\r\n        meanings.push(meaning)\r\n      }\r\n    })\r\n  })\r\n\r\n\r\n  //break function if the meanings is empty tex: an\r\n  if(meanings.length === 0){\r\n    lexObj.wordResults = []\r\n    return lexObj\r\n  }\r\n\r\n  //only the ones whose bojningar includes the query or the word is equal to the query\r\n  let meanings_filtered = meanings.filter(meaning => meaning.bojningar.includes(query) || meaning.word === query)\r\n  //setWordMeanings(meanings_filtered)\r\n  lexObj.wordMeanings = meanings_filtered\r\n\r\n  //build wordTypes\r\n  let types = []\r\n  meanings_filtered.forEach(meaning => {\r\n    if(meaning.engelska.length > 0) {\r\n      if(types.findIndex(type_already_in => type_already_in.type === meaning.type) === -1){\r\n        let type_json = { 'type': meaning.type, 'n': 1 }\r\n        types.push(type_json)\r\n      } else {\r\n        let index_of_type = types.findIndex(type_already_in => type_already_in.type === meaning.type)\r\n        let updated_type_json = types[index_of_type]\r\n        let n = updated_type_json.n\r\n        updated_type_json.n = n+1\r\n        types.splice(index_of_type, 1, updated_type_json)\r\n      }\r\n    }\r\n  })\r\n\r\n  types.sort()\r\n  //setWordTypes(types)\r\n  lexObj.wordTypes = types\r\n  //setWordType(types[0].type)\r\n  lexObj.wordType = types[0].type\r\n\r\n  //build meanings_shown\r\n  let meanings_shown = meanings_filtered.filter(meaning => meaning.type === types[0].type)\r\n  //setShownMeanigs(meanings_shown)\r\n  lexObj.shownMeanings = meanings_shown\r\n  return lexObj\r\n}\r\n//E-setLexAfterSearch\r\n\r\nexport default getLexAfterSearch","/* eslint-disable no-unused-vars */\r\nimport subtitleService from '../services/subtitles'\r\nimport getLexAfterSearch from './getLexAfterSearch'\r\n\r\nconst submitWordLex = async(query, appReady, entries, wordlist) => {\r\n  let submissionObj = {}\r\n  if(query !== ''){\r\n    if(appReady){\r\n      let lexObj = getLexAfterSearch(query.toLowerCase(), entries, wordlist)\r\n      submissionObj = lexObj\r\n      //console.log(submissionObj)\r\n      return submissionObj\r\n    } else {\r\n      await subtitleService.getWordResults(query.toLowerCase())\r\n        .then( response => {\r\n          submissionObj = response\r\n        }\r\n        )\r\n      return submissionObj\r\n    }\r\n  } else {\r\n    return { wordResults: [] }\r\n  }\r\n}\r\n\r\nexport default submitWordLex","//S-onvertArrayTimeIntoSeconds\r\nfunction convertArrayTimeIntoSeconds(arr){\r\n  return parseInt(arr[0])*3600 + parseInt(arr[1])*60 + parseInt(arr[2])\r\n}\r\n//E-onvertArrayTimeIntoSeconds\r\n\r\n//S-convertArrayTimeIntoMiliSeconds\r\nfunction convertArrayTimeIntoMiliSeconds(arr){\r\n  return parseInt(convertArrayTimeIntoSeconds(arr.slice(0,3)))*1000 + parseInt(arr[3])\r\n}\r\n//E-convertArrayTimeIntoMiliSeconds\r\n\r\nconst convertWholeText = (wholeText) => {\r\n  let newWholeText = []\r\n  let l = wholeText.length\r\n\r\n  for(let i = 0 ; i < l ; i++){\r\n    let newLine = {}\r\n    if(wholeText[i].includes('-->')){\r\n      newLine.timeStampAsText = wholeText[i]\r\n      let timeStampArr = wholeText[i].split(' --> ')\r\n      let secondsArr = []\r\n      let miliSecondsArr = []\r\n      timeStampArr.forEach(stamp => {\r\n        let hour = stamp.substring(0,2)\r\n        let minutes = stamp.substring(3,5)\r\n        let seconds = stamp.substring(6,8)\r\n        let miliSeconds = stamp.substring(9,12)\r\n        secondsArr.push(convertArrayTimeIntoSeconds([hour, minutes, seconds]))\r\n        miliSecondsArr.push(convertArrayTimeIntoMiliSeconds([hour, minutes, seconds, miliSeconds]))\r\n      })\r\n      newLine.secondsArr = secondsArr\r\n      newLine.miliSecondsArr = miliSecondsArr\r\n      let subtitleBetweenTwoStamps = []\r\n      //let j = i+1\r\n      for(let j = i + 1 ; j < l ; j++){\r\n        if(wholeText[j].includes('-->')){\r\n          break\r\n        }\r\n        subtitleBetweenTwoStamps.push(wholeText[j])\r\n      }\r\n      newLine.subtitle = subtitleBetweenTwoStamps\r\n    }\r\n\r\n    if(Object.keys(newLine).length > 0){\r\n      newWholeText.push(newLine)\r\n    }\r\n  }\r\n  return newWholeText\r\n}\r\n//\r\n\r\nexport default convertWholeText","/* eslint-disable no-unused-vars */\r\nimport convertWholeText from './convertWholeText'\r\n\r\nconst getUnsubbedPart = (convertedWholeText) => {\r\n  let wholeTextArr = convertedWholeText\r\n  let arr = [[0, wholeTextArr[0].miliSecondsArr[0]]]\r\n  for(let i = 0 ; i < wholeTextArr.length - 1 ; i++){\r\n    let arrOfarr = [wholeTextArr[i].miliSecondsArr[1], wholeTextArr[i+1].miliSecondsArr[0]]\r\n    arr.push(arrOfarr)\r\n  }\r\n  return arr\r\n}\r\n\r\n//\"timeStampAsText\"\r\n\r\nconst getSynchedSubtitleNotReady = (youTubeLinkList, i) => {\r\n  let synchedSubtitleObj = {}\r\n  let convertedWholeText = convertWholeText(youTubeLinkList[i].text)\r\n  let subtitleIndex = convertedWholeText.findIndex(subtitle => subtitle.timeStampAsText === youTubeLinkList[i].timeStamp)\r\n  synchedSubtitleObj.wholeText = convertedWholeText\r\n  synchedSubtitleObj.unSubbedPart = getUnsubbedPart(convertedWholeText)\r\n  synchedSubtitleObj.subtitleIndex = subtitleIndex\r\n  return synchedSubtitleObj\r\n}\r\n\r\nexport default getSynchedSubtitleNotReady","const detectWindowSize = (size, setWidth, setHeight) => {\r\n  if(window.innerWidth < 370) {\r\n    //iPhone 5\r\n    setWidth('310px')\r\n    setHeight('200px')\r\n  } else if(window.innerWidth < 415) {\r\n    //iPhone 6/7/8\r\n    setWidth('368px')\r\n    setHeight('207px')\r\n  } else if(window.innerWidth < 500) {\r\n    //smaller screen and iPhone Plus\r\n    setWidth('368px')\r\n    setHeight('207px')\r\n  } else {\r\n    //usual PC screen, iPad\r\n    setWidth('480px')\r\n    setHeight('270px')\r\n  }\r\n}\r\n\r\nexport default detectWindowSize","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\nconst Header = (props) => {\r\n  /*\r\n  return (\r\n    <div className=\"main-header\">\r\n      <div className=\"brand-logo\">\r\n        <span onClick={props.logo} className=\"brand-logo-name\" title='go to the home page'>youttala</span>\r\n      </div>\r\n      <div className=\"main-nav\">\r\n        <ul>\r\n          <li><a className='header-button' onClick={props.home} title='go to the home page'>home</a></li>\r\n          <li><a className='header-button' onClick={props.about} title='go to the about page'>about</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n  */\r\n\r\n  return (\r\n    <div id='main-header-container'>\r\n      <div id='header-link-container'>\r\n        <span className='header-link' onClick={props.logo}>home</span>\r\n        <span className='header-link' onClick={props.about}>about</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","/* eslint-disable linebreak-style */\r\n// eslint-disable-next-line linebreak-style\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { FaKeyboard } from 'react-icons/fa'\r\nimport { MdShuffle } from 'react-icons/md'\r\n\r\nconst SearchBar = (props) => {\r\n\r\n  const hideShowLetters = { display: props.lettersVisible ? '' : 'none' }\r\n  const keyboardStyle = { color: props.lettersVisible ? 'black' : 'gray' }\r\n\r\n  return (\r\n    <div id='brand-bar-container'>\r\n      <div id='brand-container' className='just-button' onClick={props.logo}>\r\n        <span id='brand-span'>youttala</span>\r\n      </div>\r\n      <div id='form-wrapper'>\r\n        <form id='input-wrapper' onSubmit={props.handleSubmit}>\r\n          <input\r\n            autoFocus\r\n            id='input-field'\r\n            value={props.query}\r\n            type='text'\r\n            placeholder='how to pronounce'\r\n            onChange={props.handleQueryChange}>\r\n          </input>\r\n          <div id='swedish-letters-container' style={hideShowLetters}>\r\n            <span className='swedish-letter-span' id='Ã¥' onClick={props.handleLetter}>Ã¥</span>\r\n            <span className='swedish-letter-span' id='Ã¤' onClick={props.handleLetter}>Ã¤</span>\r\n            <span className='swedish-letter-span' id='Ã¶' onClick={props.handleLetter}>Ã¶</span>\r\n          </div>\r\n          <div id='input-buttons-wrapper'>\r\n            <div id='keyboard-wrapper'>\r\n              <span title='Swedish letters' className='just-button' id='keyboard-button' onClick={props.handleKeyboard} style={keyboardStyle}><FaKeyboard id='keyboard-button-icon'/></span>\r\n\r\n            </div>\r\n            <span title='Bring me a word' className='just-button' id='shuffle-button' onClick={props.handleRandomWord}><MdShuffle id='shuffle-button-icon'/></span>\r\n          </div>\r\n        </form>\r\n        <div id='search-button-wrapper'>\r\n          <button id='search-button' form='input-wrapper' type='submit'>search</button>\r\n        </div>\r\n      </div>\r\n      <div id='welcome-description-container'>\r\n        <p id='welcome-description'>\r\n          type a Swedish word and search to watch YouTube clips in which the word is used!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\nconst Type = (props) => {\r\n\r\n  const typeBoxStyle = {\r\n    borderBottom : props.globalType === props.type ? '3px solid lightblue' : '1px solid lightgray',\r\n    //fontWeight: props.globalType === props.type ? 'bold' : 'normal'\r\n  }\r\n\r\n  //border-bottom: 1px solid lightgray;\r\n  //'background': props.globalType === props.type ? 'red' : 'orange',\r\n\r\n  return (\r\n    <div onClick={props.pick} id={props.pickId} className=\"lex-type-container\" style={typeBoxStyle}>\r\n      <span className='lex-type-span' onClick={props.pick} id={props.pickId}>\r\n        {props.type === 'empty' ? '.    .    .' : props.type}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Type","import React from 'react'\r\n\r\nconst TypeAlone = (props) => {\r\n\r\n  const typeBoxStyle = {\r\n    borderBottom : '1px solid lightgray'\r\n  }\r\n\r\n  //border-bottom: 1px solid lightgray;\r\n  //'background': props.globalType === props.type ? 'red' : 'orange',\r\n\r\n  return (\r\n    <div className=\"lex-type-alone\" style={typeBoxStyle}>\r\n      <span className='lex-type-span'>\r\n        {props.type === 'empty' ? '.    .    .' : props.type}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TypeAlone","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { FaMarsDouble } from 'react-icons/fa'\r\n\r\nconst Bojningar = (props) => {\r\n\r\n  const style = { display: props.finns ? '' : 'none' }\r\n  const l = props.bojningar.length\r\n\r\n  return (\r\n    <div id='lex-bojnings-container' style={style}>\r\n      { props.finns ?\r\n        props.bojningar.map((bojning,i = 0) =>\r\n          <span\r\n            key={i+1}\r\n            id={bojning}\r\n            className='lex-bojning'\r\n            onClick={props.pickBojning}\r\n          >{i === l-1 ? `${bojning}` : `${bojning}, `}</span>) :\r\n        props.bojningar\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bojningar","/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport ReactCountryFlag from 'react-country-flag'\r\nimport Type from './Type'\r\nimport TypeAlone from './TypeAlone'\r\nimport { FaCircle } from 'react-icons/fa'\r\nimport { FaRegCircle } from 'react-icons/fa'\r\nimport { FaCreativeCommons, FaCreativeCommonsBy } from 'react-icons/fa'\r\nimport Bojningar from './Bojningar'\r\nimport { GrArchive, GrClone, GrDocument, GrPin } from 'react-icons/gr'\r\n\r\nconst Lexicon = (props) => {\r\n\r\n  let meaningIndexes = []\r\n  //console.log(props)\r\n\r\n  for(let i = 0 ; i < props.length_arr ; i++){\r\n    meaningIndexes.push(i)\r\n  }\r\n\r\n  let finnsBojningar = Object.keys(props.meaning).includes('bojningar')\r\n\r\n  return (\r\n    <div id='lex-container'>\r\n      <div id='lex-types-container'>\r\n        {props.types.length > 1 ?\r\n          props.types.map( (type, i=0) =>\r\n            <Type\r\n              key={type.type + i+1}\r\n              pickId={type.type}\r\n              pick={props.pickMe}\r\n              type={type.type === '' ? 'empty' : type.type}\r\n              n={type.n}\r\n              globalType={props.pickedType}/>\r\n          ):\r\n          <TypeAlone\r\n            type={props.types[0].type === '' ? 'empty' : props.types[0].type}\r\n            n={props.types[0].n}\r\n          />}\r\n      </div>\r\n      <div id='lex-header-container'>\r\n        <span\r\n          style={{ display: 'inline-flex', alignItems: 'center' }}>\r\n          <ReactCountryFlag countryCode=\"SE\" svg id='swe-flag-icon'/> &nbsp;{props.meaning.word}\r\n        </span>\r\n        <div id='lex-circles-container'>\r\n          {\r\n            meaningIndexes.length > 1 ?\r\n              meaningIndexes.map(index =>\r\n                <span key={index}>\r\n                  {props.index === Number(index) ?\r\n                    <span className='lex-circle' ><FaCircle  color='lightgray' size='9px'/></span> :\r\n                    <span className='lex-circle' onClick={props.pickMeaning} id={index}><FaRegCircle  color='lightgray' id={index} size='9px'/></span>}\r\n                </span>\r\n              ) :\r\n              <span></span>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div id='lex-meaning-container'>\r\n        <Bojningar\r\n          finns={finnsBojningar}\r\n          bojningar={finnsBojningar ? props.meaning.bojningar : ''}\r\n          pickBojning={props.pickBojning}/>\r\n        <span\r\n          style={{ display: 'inline-flex', alignItems: 'center' }}>\r\n          <ReactCountryFlag countryCode=\"GB\" svg/> &nbsp;{Object.keys(props.meaning).includes('engelska')\r\n            ? props.meaning.engelska.join(', ')\r\n            : ''} </span>\r\n        <br></br>\r\n        {Object.keys(props.meaning).includes('definition') && props.meaning.definition !== ''\r\n          ? <div id='lex-definition-container' title={`the definition of '${props.meaning.word}'`}><GrPin id='lex-pin-icon'/><span id='lex-definition-span'>{props.meaning.definition}</span><br/></div>\r\n          : null}\r\n        {Object.keys(props.meaning).includes('synonymer') && props.meaning.synonymer.length > 0\r\n          ? <div id='lex-synonyms-container' title={`synonyms of '${props.meaning.word}'`}><GrClone id='lex-clone-icon'/><span id='lex-synonyms-span'>{props.meaning.synonymer.join(', ')}</span></div>\r\n          : null}\r\n      </div>\r\n      <div id='lex-license-container'>\r\n        <a className='lex-content-owner-name' title=\"Visit The People's Dictionary, the content owner's website\" href='http://folkets-lexikon.csc.kth.se/folkets/folkets.en.html' target='_blank' rel=\"noreferrer\">The People's Dictionary</a>\r\n        <div id='lex-license-icons'>\r\n          <a className='lex-creative-commons' title='Visit Creative Commons to access the license' href='https://creativecommons.org/licenses/by/2.0/' target='_blank' rel=\"noreferrer\"><FaCreativeCommons size='14px'/></a>\r\n          <a className='lex-content-owner' title=\"Visit The People's Dictionary, the content owner's website\" href='http://folkets-lexikon.csc.kth.se/folkets/folkets.en.html' target='_blank' rel=\"noreferrer\"><FaCreativeCommonsBy size='14px'/></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Lexicon\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\nconst MiniType = (props) => {\r\n\r\n  const typeBoxStyle = {\r\n    borderBottom : props.globalType === props.type ? '2px solid lightblue' : '1px solid lightgray',\r\n    fontWeight: props.globalType === props.type ? 'bold' : 'normal'\r\n  }\r\n\r\n  //border-bottom: 1px solid lightgray;\r\n  //'background': props.globalType === props.type ? 'red' : 'orange',\r\n\r\n  return (\r\n    <div onClick={props.pick} id={props.pickId} className=\"mini-lex-type-container\" style={typeBoxStyle}>\r\n      <span className='mini-lex-type-span' onClick={props.pick} id={props.pickId}>\r\n        {props.type === 'empty' ? '. . .' : props.type}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiniType","import React from 'react'\r\n\r\nconst MiniTypeAlone = (props) => {\r\n\r\n  const typeBoxStyle = {\r\n    borderBottom : '1px solid lightgray'\r\n  }\r\n\r\n  //border-bottom: 1px solid lightgray;\r\n  //'background': props.globalType === props.type ? 'red' : 'orange',\r\n\r\n  return (\r\n    <div className=\"mini-lex-type-alone\" style={typeBoxStyle}>\r\n      <span className='mini-lex-type-span'>\r\n        {props.type === 'empty' ? '. . .' : props.type}{props.n > 1 ? `(${props.n})` : ''}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiniTypeAlone","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { FaMarsDouble } from 'react-icons/fa'\r\n\r\nconst MiniBojningar = (props) => {\r\n\r\n  const style = { display: props.finns ? '' : 'none' }\r\n  const l = props.bojningar.length\r\n\r\n  return (\r\n    <div id='mini-lex-bojnings-container' style={style}>\r\n      { props.finns ?\r\n        props.bojningar.map((bojning,i = 0) =>\r\n          <span\r\n            key={i+1}\r\n            id={bojning}\r\n            className='mini-lex-bojning'\r\n            onClick={props.pickBojning}\r\n          >{i === l-1 ? `${bojning}` : `${bojning}, `}</span>) :\r\n        props.bojningar\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiniBojningar","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport ReactCountryFlag from 'react-country-flag'\r\nimport MiniType from './MiniType'\r\nimport MiniTypeAlone from './MiniTypeAlone'\r\nimport { FaCircle } from 'react-icons/fa'\r\nimport { FaRegCircle } from 'react-icons/fa'\r\nimport Bojningar from './Bojningar'\r\nimport MiniBojningar from './MiniBojningar'\r\nimport { FaCreativeCommons, FaCreativeCommonsBy } from 'react-icons/fa'\r\n\r\nconst MiniLex = (props) => {\r\n  let meaningIndexes = []\r\n\r\n  for(let i = 0 ; i < props.length_arr ; i++){\r\n    meaningIndexes.push(i)\r\n  }\r\n\r\n  let finnsBojningar = Object.keys(props.meaning).includes('bojningar')\r\n  let miniLexStyle = {\r\n    display: props.lexId === props.pickedWord ? '' : 'none'\r\n  }\r\n\r\n  return (\r\n    <div style={miniLexStyle} className='subtitle-mini-box'>\r\n      <div className='mini-lexicon-container'>\r\n        <div id='mini-lex-types-container'>\r\n          {props.types.length > 1 ?\r\n            props.types.map( (type, i=0) =>\r\n              <MiniType\r\n                key={type.type + i+1}\r\n                pickId={type.type}\r\n                pick={props.pickMe}\r\n                type={type.type === '' ? 'empty' : type.type}\r\n                n={type.n}\r\n                globalType={props.pickedType}/>\r\n            ):\r\n            <MiniTypeAlone\r\n              type={props.types[0].type === '' ? 'empty' : props.types[0].type}\r\n              n={props.types[0].n}\r\n            />}\r\n        </div>\r\n        <div id='mini-lex-header-container'>\r\n          <span\r\n            style={{ display: 'inline-flex', alignItems: 'center' }}>\r\n            <ReactCountryFlag countryCode=\"SE\" svg style={{ fontSize: '9px' }} /> &nbsp;{props.meaning.word}\r\n          </span>\r\n          <div id='mini-lex-circles-container'>\r\n            {\r\n              meaningIndexes.length > 1 ?\r\n                meaningIndexes.map(index =>\r\n                  <span key={index}>\r\n                    {props.index === Number(index) ?\r\n                      <span className='lex-circle' ><FaCircle  color='lightgray' size='8px'/></span> :\r\n                      <span className='lex-circle' onClick={props.pickMeaning} id={index}><FaRegCircle  color='lightgray' id={index} size='8px'/></span>}\r\n                  </span>\r\n                ) :\r\n                <span></span>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div id='mini-lex-meaning-container'>\r\n          <MiniBojningar\r\n            finns={finnsBojningar}\r\n            bojningar={finnsBojningar ? props.meaning.bojningar : ''}/>\r\n          <div id='mini-lex-translation-container'>\r\n            <ReactCountryFlag countryCode=\"GB\" svg style={{ fontSize: '9px' }} id='mini-lex-gb-flag-icon'/>\r\n            <span id='mini-lex-definition-span'\r\n              style={{ display: 'inline-flex', alignItems: 'center' }}>\r\n               &nbsp;{Object.keys(props.meaning).includes('engelska')\r\n                ? props.meaning.engelska.join(', ')\r\n                : ''} </span>\r\n\r\n          </div>\r\n        </div>\r\n        <div id='mini-lex-license-container'>\r\n          <a className='lex-creative-commons' title='Visit Creative Commons to access the license' href='https://creativecommons.org/licenses/by/2.0/' target='_blank' rel=\"noreferrer\"><FaCreativeCommons size='12px'/></a>\r\n          <a className='lex-content-owner' title=\"Visit The People's Dictionary, the content owner's website\" href='http://folkets-lexikon.csc.kth.se/folkets/folkets.en.html' target='_blank' rel=\"noreferrer\"><FaCreativeCommonsBy size='12px'/></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MiniLex\r\n","/* eslint-disable quotes */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { propTypes } from 'react-country-flag'\r\nimport { FaCopy } from 'react-icons/fa'\r\nimport { FaEye } from 'react-icons/fa'\r\nimport MiniLex from './MiniLex'\r\n\r\nconst Subtitle = ({\r\n  shownSubtitles,\r\n  shownSubtitlesArr,\r\n  showSubtitle,\r\n  handleShow,\r\n  handleHide,\r\n  query,\r\n  listLength,\r\n  triggerSubmission,\r\n  pickWord,\r\n  types,\r\n  length_arr,\r\n  meaning,\r\n  pickedType,\r\n  index,\r\n  miniLexVisible,\r\n  pickedWord\r\n}) => {\r\n\r\n  const showWhenVisible = { display: showSubtitle ? '' : 'none' }\r\n\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n        puncReg.source +\r\n        word +\r\n        puncReg.source +\r\n        endReg.source , 'i' )\r\n\r\n  /*\r\n  const afterSearchXd = () => (\r\n    <div>\r\n      <div className=\"subtitle\" style={showWhenVisible}>\r\n        <div id=\"subtitle-empty\">\r\n        </div>\r\n        <div className=\"subtitle-subtitle\">\r\n          { listLength > 0 ?\r\n            <div className=\"paragraph\">\r\n              {shownSubtitlesArr.map( (word, i=0) =>\r\n                <div key={word + i+1}>\r\n                  <span\r\n                    style={{\r\n                      color: regex.test(word) ? 'red' : 'black' ,\r\n                      background: word.length + '-' + word + i+1  === pickedWord ? '#FFB6C1' : ''\r\n                    }}\r\n                    key={word + i+1}\r\n                    id={word.length + '-' + word + i+1}\r\n                    onClick={pickWord}\r\n                    className='subtitle-word'>{`${word}`}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div> :\r\n            <div className=\"paragraph\">\r\n              {shownSubtitlesArr.map( (word, i=0) =>\r\n                <div key={word + i+1}>\r\n                  <span\r\n                    style={{\r\n                      color: regex.test(word) ? 'red' : 'black',\r\n                      cursor: word.includes(\"'\") ? 'pointer' : '',\r\n                      textDecoration: word.includes(\"'\") ? 'underline' : ''\r\n                    }}\r\n                    key={word + i+1}\r\n                    id={word}\r\n                    onClick={ word.includes(\"'\") ? triggerSubmission : () => {}}\r\n                    className='subtitle-unlinked-word'>{`${word}`}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          }\r\n        </div>\r\n        <div id=\"subtitle-empty\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n  */\r\n\r\n  const subtitleContent = () => (\r\n    <div id=\"main-subtitle-container\" style={showWhenVisible}>\r\n      <div className=\"subtitle-empty\">\r\n      </div>\r\n      <div id=\"subtitle-wrapper\">\r\n        { listLength > 0 ?\r\n          <div id=\"subtitle-paragraph\">\r\n            {shownSubtitlesArr.map( (word, i=0) =>\r\n              <div key={word + i+1}>\r\n                <span\r\n                  style={{\r\n                    fontWeight: regex.test(word) ? 'bold' : 'normal' ,\r\n                    background: word.length + '-' + word + i+1  === pickedWord ? '#FFB6C1' : ''\r\n                  }}\r\n                  key={word + i+1}\r\n                  id={word.length + '-' + word + i+1}\r\n                  onClick={pickWord}\r\n                  className='subtitle-word'>{`${word}`}\r\n                </span>\r\n                <span key={'whitespace-'+i+1} className='subtitle-unlinked-word'>{' '}</span>\r\n              </div>\r\n            )}\r\n          </div> :\r\n          <div id=\"subtitle-paragraph\">\r\n            {shownSubtitlesArr.map( (word, i=0) =>\r\n              <div key={word + i+1}>\r\n                <span\r\n                  style={{\r\n                    fontWeight: regex.test(word) ? 'bold' : 'normal' ,\r\n                    cursor: word.includes(\"'\") ? 'pointer' : '',\r\n                    textDecoration: word.includes(\"'\") ? 'underline' : ''\r\n                  }}\r\n                  key={word + i+1}\r\n                  id={word}\r\n                  onClick={ word.includes(\"'\") ? triggerSubmission : () => {}}\r\n                  className='subtitle-unlinked-word'>{`${word}`}\r\n                </span>\r\n                <span key={'whitespace-'+i+1} className='subtitle-unlinked-word'>{' '}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className=\"subtitle-empty\">\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n\r\n  return (\r\n    <div>\r\n      {shownSubtitles === null ? null : subtitleContent() }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Subtitle\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { propTypes } from 'react-country-flag'\r\nimport { FaCopy } from 'react-icons/fa'\r\nimport { FaEye } from 'react-icons/fa'\r\nimport MiniLex from './MiniLex'\r\n\r\nconst SubtitleMiniLex = ({\r\n  shownSubtitles,\r\n  shownSubtitlesArr,\r\n  showSubtitle,\r\n  handleShow,\r\n  handleHide,\r\n  query,\r\n  pickWord,\r\n  types,\r\n  length_arr,\r\n  meaning,\r\n  pickedType,\r\n  index,\r\n  miniLexVisible,\r\n  pickedWord,\r\n  pickMe,\r\n  pickMeaning\r\n}) => {\r\n\r\n  const showWhenVisible = { display: showSubtitle ? '' : 'none' }\r\n\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n        puncReg.source +\r\n        word +\r\n        puncReg.source +\r\n        endReg.source , 'i' )\r\n\r\n  /*\r\n  const afterSearchXd = () => (\r\n    <div>\r\n      <div className=\"subtitle\" style={showWhenVisible}>\r\n        <div id=\"subtitle-empty\">\r\n\r\n        </div>\r\n        <div className=\"subtitle-subtitle\">\r\n          <div className=\"paragraph\">\r\n            {shownSubtitlesArr.map( (word, i=0) =>\r\n              <div key={word + i+1}>\r\n                <span\r\n                  style={{\r\n                    color: regex.test(word) ? 'red' : 'black' ,\r\n                    background: word.length + '-' + word + i+1  === pickedWord ? 'rgb(224, 241, 247)' : ''\r\n                  }}\r\n                  key={word + i+1}\r\n                  value={word+i+1}\r\n                  id={word.length + '-' + word + i+1}\r\n                  onClick={pickWord}\r\n                  className='subtitle-word'>{`${word}`}\r\n                </span>\r\n                {\r\n                  length_arr > 0 ?\r\n                    <MiniLex\r\n                      word={word}\r\n                      pickedWord={pickedWord}\r\n                      lexId={word.length + '-' + word + i+1}\r\n                      types={types}\r\n                      length_arr={length_arr}\r\n                      meaning={meaning}\r\n                      pickedType={pickedType}\r\n                      index={index}\r\n                      pickMe={pickMe}\r\n                      pickMeaning={pickMeaning}\r\n                    /> :\r\n                    <span style={{ display: 'none' }}></span>\r\n                }\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div id=\"subtitle-empty\">\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n  */\r\n\r\n  const subtitleContent = () => (\r\n    <div id=\"main-subtitle-container\" style={showWhenVisible}>\r\n      <div className=\"subtitle-empty\">\r\n\r\n      </div>\r\n      <div id=\"subtitle-wrapper-minilex\">\r\n        <div id=\"subtitle-paragraph-minilex\">\r\n          {shownSubtitlesArr.map( (word, i=0) =>\r\n            <div key={word + i+1}>\r\n              <span\r\n                style={{\r\n                  fontWeight: regex.test(word) ? 'bold' : 'normal' ,\r\n                  background: word.length + '-' + word + i+1  === pickedWord ? 'rgb(224, 241, 247)' : ''\r\n                }}\r\n                key={word + i+1}\r\n                value={word+i+1}\r\n                id={word.length + '-' + word + i+1}\r\n                onClick={pickWord}\r\n                className='subtitle-word'>{`${word}`}\r\n              </span>\r\n              {\r\n                length_arr > 0 ?\r\n                  <MiniLex\r\n                    word={word}\r\n                    pickedWord={pickedWord}\r\n                    lexId={word.length + '-' + word + i+1}\r\n                    types={types}\r\n                    length_arr={length_arr}\r\n                    meaning={meaning}\r\n                    pickedType={pickedType}\r\n                    index={index}\r\n                    pickMe={pickMe}\r\n                    pickMeaning={pickMeaning}\r\n                  /> :\r\n                  <span style={{ display: 'none' }}></span>\r\n              }\r\n              <span key={'whitespace-'+i+1} className='subtitle-unlinked-word'>{' '}</span>\r\n\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"subtitle-empty\">\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n\r\n  return (\r\n    <div>\r\n      {shownSubtitles === null ? null : subtitleContent() }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubtitleMiniLex\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { FaRegPaperPlane } from 'react-icons/fa'\r\n\r\nconst Footer = (props) => {\r\n  const [showMail, setShowMail] = useState(false)\r\n\r\n  /*\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <nav className=\"footer-nav\">\r\n        <ul>\r\n          <li><a href=\"#\">&#169;2020 youttala.</a></li>\r\n          <li><a href=\"#\">e-mail</a></li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n  */\r\n\r\n  /*\r\n  return (\r\n    <div id=\"main-footer-container\">\r\n      <span id='privacy-policy-footer' onClick={props.policy} className='footer-button' title='go to the privacy policy page'>privacy policy</span>\r\n      <span id='copyright'>&#169; 2021, youttala. all rights reserved.</span>\r\n      <span title='contact' id='contact'>info@youttala.com <a title='send an e-mail to us' id='e-mail-a' href=\"mailto:info@youttala.com\"><FaRegPaperPlane/></a></span>\r\n      <span title='send an e-mail to us' id='contact-small'><a id='e-mail-a' href=\"mailto:info@youttala.com\"><FaRegPaperPlane/></a></span>\r\n    </div>\r\n  )\r\n  */\r\n  return (\r\n    <div id=\"main-footer-container\">\r\n      <div id='footer-upper-container'>\r\n        <div id='footer-pages-container'>\r\n          <span className='footer-link' onClick={props.about}>about</span>\r\n          <span className='footer-link' onClick={props.policy}>privacy policy</span>\r\n        </div>\r\n        <div id='contact-container'>\r\n          <span><strong>contact:</strong></span>\r\n          <span>info@youttala.com</span>\r\n        </div>\r\n      </div>\r\n      <div id='footer-copyright'>\r\n        <span id='copyright'>&#169; 2021, youttala. all rights reserved.</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { FaHeadphones } from 'react-icons/fa'\r\nimport { FaExclamationCircle, FaAngleDown, FaAngleUp, FaSpinner } from 'react-icons/fa'\r\n\r\nconst About = (props) => {\r\n  const [showGuide, setShowGuide] = useState(false)\r\n\r\n  const handleShow = async(event) => {\r\n    event.preventDefault()\r\n    setShowGuide(!showGuide)\r\n  }\r\n\r\n\r\n  return (\r\n    <div id='main-container'>\r\n      <div className='brand-wrapper-in-other-pages'>\r\n        <div id='brand-container' className='just-button' onClick={props.logo}>\r\n          <span id='brand-span'>youttala</span>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <div id='about-description'>\r\n        Welcome to youttala!\r\n        <br></br>\r\n        <br></br>\r\n        - youttala is a web application where you can instantly learn how\r\n        Swedish words are pronounced and used in the context by watching YouTube.\r\n        Just type the word you want to hear and search!\r\n        <br></br>\r\n        <br></br>\r\n        - There is also an embedded lexicon in the app that will show the English translations, the forms, the definition and the synonyms of the word you searched for!\r\n        <br></br>\r\n        <br></br>\r\n        - Moreover, you can click on a word in the subtitle to get the same type of information in a tiny format! The video will be paused when you click on a word. Click again on the word to play the video!\r\n        <br></br>\r\n        <br></br>\r\n        - The lexicon is downloaded from <a href='http://folkets-lexikon.csc.kth.se/folkets/folkets.en.html' target='_blank' rel=\"noreferrer\" title=\"Visit The People's Dictionary\">The People's Dictionary/Folkets lexikon</a> and used under the <a href='https://creativecommons.org/licenses/by/2.0/' target='_blank' rel=\"noreferrer\" title='Visit Creative Commons to access the license'>Distributed Creative Commons Attribution-Share Alike 2.5 Generic license.</a>\r\n        <br></br>\r\n        <br></br>\r\n      </div>\r\n      <div id='fill-container'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { FaBackward, FaStepBackward } from 'react-icons/fa'\r\nimport { FaForward, FaStepForward } from 'react-icons/fa'\r\nimport { FaRedo } from 'react-icons/fa'\r\nimport { FaExclamationCircle } from 'react-icons/fa'\r\nimport { GrUndo, GrRedo } from 'react-icons/gr'\r\n\r\nconst PlayerBarControls = (props) => {\r\n\r\n  const showWhenVisible = { display: props.showStats ? '' : 'none' }\r\n  const showWhenNotVisible = { display: props.showStats ? 'none' : '' }\r\n\r\n  return (\r\n    <div id=\"player-bar\" style={showWhenVisible}>\r\n      <div id=\"empty-player-bar-top\">\r\n\r\n      </div>\r\n      <div id=\"player-control-button-set\">\r\n        <div className='seek-button-wrapper' onClick={props.handleTenSecondsBackward} title='5s backward'>\r\n          <span className=\"just-button\" title='5s backward' id='seek-backward-button' ><GrUndo id='undo-icon'/></span>\r\n        </div>\r\n        <span className=\"just-button\" title='Previous video' id='previous-video-button' onClick={props.handleBack}><FaBackward id='previous-video-icon'/></span>\r\n        <span className=\"just-button\" title='replay' id='replay-button' onClick={props.handleKÃ¶rOm}><FaRedo id='replay-icon'/></span>\r\n        <span className=\"just-button\" title='next video' id='next-button' onClick={props.handleNext}><FaForward id='next-video-icon'/></span>\r\n        <div className='seek-button-wrapper' onClick={props.handleTenSecondsForward} title='5s forward'>\r\n          <span className=\"just-button\" title='5s forward' id='seek-backward-button' ><GrRedo id='redo-icon'/></span>\r\n        </div>\r\n      </div>\r\n      <div id=\"extras-player-bar\">\r\n        <span id='stats-text' style={showWhenVisible}><strong>{props.query}</strong> / {props.videoIndex} of {props.length} </span>\r\n        <span style={showWhenNotVisible}></span>\r\n        <span className=\"just-button\" id='bug-button' style={showWhenVisible} title='report a bug' onClick={props.handleBug}><FaExclamationCircle id='bug-icon' /></span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerBarControls\r\n","/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { propTypes } from 'react-country-flag'\r\nimport { FaRocket } from 'react-icons/fa'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\n\r\nconst PrivacyPolicy = (props) => {\r\n  return (\r\n    <div>\r\n      <div id='main-container'>\r\n        <div className='brand-wrapper-in-other-pages'>\r\n          <div id='brand-container' className='just-button' onClick={props.logo}>\r\n            <span id='brand-span'>youttala</span>\r\n          </div>\r\n        </div>\r\n        <div id='privacy-policy-container'>\r\n          <h1 className='title-policy'>Privacy Policy</h1>\r\n          <p><strong>Last updated: </strong>March 24, 2021</p>\r\n          <p>- This Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your information when You use the Service and tells You about Your privacy rights and how the law protects You.</p>\r\n          <p>- We use Your Personal data to provide and improve the Service. By using the Service, You agree to the collection and use of information in accordance with this Privacy Policy. This Privacy Policy has been created with the help of the <a href=\"https://www.privacypolicies.com/privacy-policy-generator/\" target=\"_blank\" rel='noreferrer'>Privacy Policy Generator</a>.</p>\r\n          <h1 className='title-policy'>Interpretation and Definitions</h1>\r\n          <h2>Interpretation</h2>\r\n          <p>- The words of which the initial letter is capitalized have meanings defined under the following conditions. The following definitions shall have the same meaning regardless of whether they appear in singular or in plural.</p>\r\n          <h2>Definitions</h2>\r\n          <p>- For the purposes of this Privacy Policy:</p>\r\n          <ul>\r\n            <li className='li-policy'>\r\n              <strong>Country</strong> refers to:  Sweden\r\n            </li>\r\n            <li className='li-policy'>\r\n              <strong>Device</strong> means any device that can access the Service such as a computer, a cellphone or a digital tablet.\r\n            </li>\r\n            <li className='li-policy'>\r\n              <strong>Personal Data</strong> is any information that relates to an identified or identifiable individual.\r\n            </li>\r\n            <li className='li-policy'>\r\n              <strong>Service</strong> refers to the Website.\r\n            </li>\r\n            <li className='li-policy'>\r\n              <strong>Service Provider</strong> means any natural or legal person who processes the data on behalf of Youttala. It refers to third-party companies or individuals employed by Youttala to facilitate the Service, to provide the Service on behalf of Youttala, to perform services related to the Service or to assist the Company in analyzing how the Service is used.\r\n            </li>\r\n            <li className='li-policy'>\r\n              <strong>Third-party Social Media Service</strong> refers to any website or any social network website through which a User can log in or create an account to use the Service.\r\n            </li>\r\n            <li className='li-policy'>\r\n              <strong>Usage Data</strong> refers to data collected automatically, either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit).\r\n            </li>\r\n            <li className='li-policy'>\r\n              <strong>Website</strong> refers to youttala, accessible from <a href=\"https://www.youttala.com\" target=\"_blank\" rel='noreferrer'>youttala.com</a>\r\n            </li>\r\n            <li className='li-policy'>\r\n              <strong>You</strong> means the individual accessing or using the Service, or the company, or other legal entity on behalf of which such individual is accessing or using the Service, as applicable.\r\n            </li>\r\n          </ul>\r\n          <h1 className='title-policy'>Collecting and Using Your Data</h1>\r\n          <h2>Types of Data Collected</h2>\r\n          <h3>Usage Data</h3>\r\n          <p>- Usage Data may include information such as Your Device's Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that You visit, the time and date of Your visit, the time spent on those pages, unique device identifiers and other diagnostic data.</p>\r\n          <p>- When You access the Service by or through a mobile device, We may collect certain information automatically, including, but not limited to, the type of mobile device You use, Your mobile device unique ID, the IP address of Your mobile device, Your mobile operating system, the type of mobile Internet browser You use, unique device identifiers and other diagnostic data.</p>\r\n          <p>- We may also collect information that Your browser sends whenever You visit our Service or when You access the Service by or through a mobile device.</p>\r\n          <h3>Tracking Technologies</h3>\r\n          <p>- We use tracking technologies to track the activity on Our Service and store certain information. Tracking technologies used are beacons, tags, and scripts to collect and track information and to improve and analyze Our Service. The technologies We use may include:</p>\r\n          <ul>\r\n            <li className='li-policy'><strong>Web Beacons.</strong> Certain sections of our Service may contain small electronic files known as web beacons (also referred to as tracking bugs) that permit Youttala, for example, to count users who have visited those pages and for other related website statistics (for example, recording the popularity of a certain section and verifying system and server integrity).</li>\r\n          </ul>\r\n          <h1 className='title-policy'>Links to Other Websites</h1>\r\n          <p>- Our Service may contain links to other websites that are not operated by Us. If You click on a third party link, You will be directed to that third party's site. We strongly advise You to review the Privacy Policy of every site You visit.</p>\r\n          <p>- We have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.</p>\r\n          <h1 className='title-policy'>YouTube API</h1>\r\n          <p>- This website uses YouTube API to let you watch YouTube videos in an embedded format. Thus, by using this service, You agree to the <a href='https://policies.google.com/privacy'>Google Privacy Policy</a>.</p>\r\n          <h1 className='title-policy'>Changes to this Privacy Policy</h1>\r\n          <p>- We may update Our Privacy Policy from time to time. We will notify You of any changes by posting the new Privacy Policy on this page.</p>\r\n          <p>- We will let You know via email and/or a prominent notice on Our Service, prior to the change becoming effective and update the &quot;Last updated&quot; date at the top of this Privacy Policy.</p>\r\n          <p>- You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.</p>\r\n          <h1 className='title-policy'>Contact Us</h1>\r\n          <p>- If you have any questions about this Privacy Policy, You can contact us:</p>\r\n          <ul>\r\n            <li className='li-policy'><strong>info@youttala.com</strong></li>\r\n          </ul>\r\n          <div id='fill-container'>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrivacyPolicy\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ReactGA, { set } from 'react-ga'\r\n//functions\r\nimport getMiniLexAfterSearch from './functions/getMiniLexAfterSearch'\r\nimport getSynchedSubtitle from './functions/getSynchedSubtitle'\r\nimport getWordType from './functions/getWordType'\r\nimport getPickedWord from './functions/getPickedWord' //for picking a bojning or a suggested word after a failed search\r\nimport getPickedWordInPara from './functions/getPickedWordInPara' //for picking a word from the subtitle paragraph\r\nimport checkMiniLex from './functions/checkMiniLex'\r\nimport submitWord from './functions/submitWord'\r\nimport getFailureMessage from './functions/getFailureMessage'\r\nimport synchSubtitles from './functions/synchSubtitles'\r\nimport getRandomWord from './functions/getRandomWord'\r\nimport playPreviousVideo from './functions/playPreviousVideo'\r\nimport replayCurrentVideo from './functions/replayCurrentVideo'\r\nimport playNextVideo from './functions/playNextVideo'\r\nimport nextMeaning from './functions/nextMeaning'\r\nimport previousMeaning from './functions/previousMeaning'\r\nimport secondsForward from './functions/secondsForward'\r\nimport secondsBackward from './functions/secondsBackward'\r\nimport fetchData from './functions/fetchData'\r\nimport resetLinkAtStart from './functions/resetLinkAtStart'\r\nimport updateYouTubeLinks from './functions/updateYouTubeLinks'\r\nimport submitWordLex from './functions/submitWordLex'\r\nimport getSynchedSubtitleNotReady from './functions/getSynchedSubtitleNotReady'\r\nimport detectWindowSize from './functions/detectWindowSize'\r\n//components\r\nimport Header from './components/Header'\r\nimport SearchBar from './components/SearchBar'\r\nimport Lexicon from './components/Lexicon'\r\nimport ReactPlayer from 'react-player'\r\nimport Subtitle from './components/Subtitle'\r\nimport SubtitleMiniLex from './components/SubtitleMiniLex'\r\nimport Footer from './components/Footer'\r\nimport About from './components/About'\r\nimport PlayerBarControls from './components/PlayerBarControls'\r\nimport PrivacyPolicy from './components/PrivacyPolicy'\r\nimport WelcomeText from './components/WelcomeText'\r\nimport Features from './components/Features'\r\n\r\nconst App = () => {\r\n  const linkAtStart = 'https://www.youtube.com/watch?v=G_O0N3R-Lv8'\r\n  const ref = React.createRef() //ref to the player\r\n  const history = useHistory()\r\n  //app\r\n  const [fetchReady, setFetchReady] = useState(false)\r\n  const [appReady, setAppReady] = useState(false)\r\n  const [showWelcomeText, setShowWelcomeText] = useState(true)\r\n  const [hideVideo, setHideVideo] = useState(true)\r\n  const [lexReady, setLexReady] = useState(false)\r\n  const [resultsReady, setResultsReady] = useState(false)\r\n  const [updateReady, setUpdateReady] = useState(false)\r\n  const [page, setPage] = useState('policy')\r\n  const [isRreset, setIsReset] = useState(true)\r\n  const [subtitles, setSubtitles] = useState([])\r\n  const [entries, setEntries] = useState([])\r\n  const [wordlist, setWordlist] = useState([])\r\n  const [query, setQuery] = useState('')\r\n  const [youTubeLinks, setYouTubeLinks] = useState([])\r\n  const [youTubeLink, setYouTubeLink] = useState('https://www.youtube.com/watch?v=G_O0N3R-Lv8')\r\n  const [videoIndex, setVideoIndex] = useState(0)\r\n  const [currentVideoId, setCurrentVideoId] = useState('G_O0N3R-Lv8')\r\n  const [shownSubtitles, setShownSubtitles] = useState(null)\r\n  const [shownSubtitlesArr, setShownSubtitlesArr] = useState([])\r\n  const [showSubtitle ,setShowSubtitle] = useState(false)\r\n  const [showStats, setShowStats] = useState(false)\r\n  //player\r\n  const [playingVideoTime, setPlayingVideoTime] = useState(0)\r\n  const [width, setWidth] = useState('480px')\r\n  const [height, setHeight] = useState('270px')\r\n  const [autoplay, setAutoplay] = useState(false)\r\n  //synched subtitles\r\n  const [wholeText, setWholeText] = useState([])  // {timeStampAsText, secondsArr, miliSecondsArr, subtitle: [arr]}\r\n  const [unSubbedPartArr, setUnSubbedPartArr] = useState([]) //only miliSeconds [arr]\r\n  const [subtitleIndex, setSubtitleIndex] = useState(null) // theList[i].substitleIndex\r\n  const [submitted, setSubmitted] = useState(false) //to trigger associated useEffect\r\n  const [subTimeoutId_1, setSubTimeoutId_1] = useState(null) //video onPlay miliseconds to the very next subtitle's miliSecondsArr[0]\r\n  const [subTimeoutId_3, setSubTimeoutId_3] = useState(null) //video onPlay milisecons to the the very next subtitle's miliSecondsArr[1]\r\n  const [timeDiff1, setTimeDiff1] = useState(null) //video onPlay miliseconds to the very next subtitle's miliSecondsArr[0]\r\n  const [timeDiff3, setTimeDiff3] = useState(null) //video onPlay milisecons to the the very next subtitle's miliSecondsArr[1]\r\n  //main lex\r\n  const [wordResults, setWordResults] = useState([])\r\n  const [wordTypes, setWordTypes] = useState([])\r\n  const [wordType, setWordType] = useState('')\r\n  const [wordMeanings, setWordMeanings] = useState([])\r\n  const [shownMeanings, setShownMeanings] = useState([])\r\n  const [shownMeaningIndex, setShownMeanigIndex] = useState(0)\r\n  //mini lex\r\n  const [miniWordResults, setMiniWordResults] = useState([])\r\n  const [miniWordTypes, setMiniWordTypes] = useState([])\r\n  const [miniWordType, setMiniWordType] = useState('')\r\n  const [miniWordMeanings, setMiniWordMeanings] = useState([])\r\n  const [miniShownMeanings, setMiniShownMeanings] = useState([])\r\n  const [miniShownMeaningIndex, setMiniShownMeanigIndex] = useState(0)\r\n  const [miniPickedWord, setMiniPickedWord] = useState('')\r\n  //searchbar letters\r\n  const [lettersVisible, setLettersVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    ReactGA.initialize('UA-186348116-1')\r\n    ReactGA.pageview('/')\r\n    ReactGA.pageview('/about')\r\n    ReactGA.pageview('/privacypolicy')\r\n  },[])\r\n\r\n  //Fetch data\r\n  useEffect(() => {\r\n    fetchData(\r\n      fetchReady,\r\n      history.location.pathname,\r\n      setEntries,\r\n      setSubtitles,\r\n      setWordlist,\r\n      setAppReady,\r\n      setPage,\r\n    )\r\n  },[fetchReady])\r\n\r\n  //set video dimensions at start\r\n  useEffect(() => {\r\n    detectWindowSize(window.innerWidth, setWidth, setHeight)\r\n    //document.getElementById('input-field').focus()\r\n  },[])\r\n\r\n  //Simulate laggy fetch\r\n  /*\r\n  useEffect(() => {\r\n    window.setTimeout(() => {\r\n      setAppReady(true)\r\n    }, 10000)\r\n  },[])\r\n  */\r\n\r\n  //\r\n  useEffect(() => {\r\n    updateYouTubeLinks(subtitles, youTubeLinks, setYouTubeLinks)\r\n    console.log('Is the update ready? ', updateReady)\r\n  }, [updateReady])\r\n\r\n  //update the list as soon as the data is fetched\r\n  useEffect(() => {\r\n    console.log('Is the app ready? ', appReady)\r\n    console.log('Is the results ready? ', resultsReady)\r\n    if(youTubeLinks.length > 0 && appReady){\r\n      setUpdateReady(true)\r\n    }\r\n  },[appReady, resultsReady])\r\n\r\n  //useEffect that is used to synch the subtitles\r\n  useEffect(() => {\r\n    synchSubtitles(\r\n      submitted,\r\n      youTubeLinks,\r\n      subTimeoutId_1,\r\n      subTimeoutId_3,\r\n      ref,\r\n      wholeText,\r\n      unSubbedPartArr,\r\n      setTimeDiff1,\r\n      setTimeDiff3,\r\n      setSubtitleIndex,\r\n      setSubmitted,\r\n      setShowSubtitle,\r\n      setShownSubtitles,\r\n      setShownSubtitlesArr,\r\n      setSubTimeoutId_1,\r\n      setSubTimeoutId_3,\r\n      setMiniWordResults,\r\n    )\r\n  }, [subtitleIndex, submitted])\r\n\r\n  //iPhone 5/SE 320x568\r\n  //iPhone 6/7/8 375x667\r\n  //iPhone 6/7/8 Plus 414x736\r\n  //iPhone X 375x812\r\n  //iPad 768x1024\r\n  //iPad Pro 1024x1366\r\n\r\n  //S-window resizing\r\n  window.addEventListener('resize', (event) => {\r\n    event.preventDefault()\r\n    if(window.innerWidth < 370) {\r\n      //iPhone 5\r\n      setWidth('310px')\r\n      setHeight('200px')\r\n    } else if(window.innerWidth < 415 && window.innerWidth > 370) {\r\n      //iPhone 6/7/8\r\n      setWidth('368px')\r\n      setHeight('207px')\r\n    } else if(window.innerWidth < 500 && window.innerWidth > 415) {\r\n      //smaller screen and iPhone Plus\r\n      setWidth('368px')\r\n      setHeight('207px')\r\n    } else {\r\n      //usual PC screen, iPad\r\n      setWidth('480px')\r\n      setHeight('270px')\r\n    }\r\n  })\r\n  //E-window resizing\r\n\r\n  //handle goBack in the browser\r\n  window.addEventListener('popstate',(event) => {\r\n    event.preventDefault()\r\n    let page = history.location.pathname\r\n    let length = page.length\r\n    if(!isRreset){\r\n      reset()\r\n    }\r\n    setPage(page.substring(1,length))\r\n  })\r\n  //\r\n\r\n  //S-toPage\r\n  const toPage = (page) => (event) => {\r\n    event.preventDefault()\r\n    reset()\r\n    if(history.location.pathname === '/' && page === ''){\r\n      document.getElementById('input-field').focus()\r\n    }\r\n    setPage(page)\r\n    history.push(`/${page}`)\r\n    window.scrollTo(0, 0)\r\n  }\r\n  //E-toPage\r\n\r\n  //S-reset\r\n  const reset = () => {\r\n    setHideVideo(true)\r\n    setQuery('')\r\n    setIsReset(true)\r\n    setCurrentVideoId('G_O0N3R-Lv8')\r\n    setYouTubeLink(resetLinkAtStart(linkAtStart, youTubeLink))\r\n    setPlayingVideoTime(0)\r\n    setAutoplay(false)\r\n    setShowStats(false)\r\n    setYouTubeLinks([])\r\n    setShownSubtitles(null)\r\n    setShownSubtitlesArr([])\r\n    setShowSubtitle(false)\r\n    setWordResults([])\r\n    setMiniWordResults([])\r\n    setSubmitted(false)\r\n    setShowWelcomeText(true)\r\n  }\r\n  //E-reset\r\n\r\n  //s-resetQuery\r\n  const resetQuery = ( query, text ) => {\r\n    setHideVideo(true)\r\n    setCurrentVideoId('G_O0N3R-Lv8')\r\n    setYouTubeLink(linkAtStart)\r\n    setPlayingVideoTime(0)\r\n    setAutoplay(false)\r\n    setShowStats(false)\r\n    setYouTubeLinks([])\r\n    let message = getFailureMessage(query, text)\r\n    setShownSubtitles(message.shownText)\r\n    setShownSubtitlesArr(message.shownSubtitlesArr)\r\n    setShowSubtitle(true)\r\n    setMiniWordResults([])\r\n  }\r\n  //e-resetQuery\r\n\r\n  //handleQueryChange starts\r\n  const handleQueryChange = (event) => setQuery(event.target.value)\r\n  //handleQueryChange starts\r\n\r\n  //S-handleKeyboard\r\n  const handleKeyboard = () => {\r\n    document.getElementById('input-field').focus()\r\n    setLettersVisible(!lettersVisible)\r\n  }\r\n  //E-handleKeyboard\r\n\r\n  //S-handleLetter\r\n  const handleLetter = (event) => {\r\n    event.preventDefault()\r\n    setQuery(query+event.target.id)\r\n    document.getElementById('input-field').focus()\r\n  }\r\n  //E-handleLetter\r\n\r\n  //S-handleRandomWord\r\n  const handleRandomWord = (event) => {\r\n    event.preventDefault()\r\n    setQuery(getRandomWord())\r\n    document.getElementById('input-field').focus()\r\n  }\r\n  //E-handleRandomWord\r\n\r\n  //S-submission\r\n  const submission = (query) => {\r\n    submitWord(query, appReady, subtitles, setFetchReady)\r\n      .then(response => {\r\n        //console.log(response)\r\n        try {\r\n          setApp(response.youTubeLinkList)\r\n          setResultsReady(true)\r\n        } catch (error) {\r\n          switch (query) {\r\n          case '':\r\n            resetQuery(query, 'please type something')\r\n            break\r\n          default:\r\n            resetQuery( query, 'nothing found for ' )\r\n            break\r\n          }\r\n          setSubmitted(false)\r\n        }\r\n      })\r\n  }\r\n  //E-submission\r\n\r\n  //S-submissionLex\r\n  const submissionLex = (query) => {\r\n    submitWordLex(query, appReady, entries, wordlist)\r\n      .then(response => {\r\n        try {\r\n          setLex(response)\r\n          { response.wordResults.length === 0 ? setLexReady(false) : setLexReady(true) }\r\n        } catch (error) {\r\n          setLexReady(false)\r\n        }\r\n      })\r\n  }\r\n  //E-submissionLex\r\n\r\n  //S-handleSubmit\r\n  const handleSubmit = async(event) => {\r\n    event.preventDefault()\r\n    setHideVideo(false)\r\n    setShowWelcomeText(false)\r\n    submission(query)\r\n    submissionLex(query)\r\n  }\r\n  //E-handleSubmit\r\n\r\n  //S-setApp\r\n  const setApp = (youTubeLinkList) => {\r\n    setHideVideo(false)\r\n    setIsReset(false)\r\n    setYouTubeLinks(youTubeLinkList)\r\n    setSynchedSubtitle(youTubeLinkList, 0)\r\n    setVideoIndex(0)\r\n    //setCurrentVideoId(youTubeLinkList[0].videoId)\r\n    setYouTubeLink(youTubeLinkList[0].youtubeLink)\r\n    setPlayingVideoTime(youTubeLinkList[0].time)\r\n    setAutoplay(true)\r\n    setShowSubtitle(false)\r\n    setShowStats(true)\r\n    setShowWelcomeText(false)\r\n  }\r\n  //E-setApp\r\n\r\n  //S-setLex\r\n  const setLex = (lexObj) => {\r\n    setWordResults(lexObj.wordResults)\r\n    setShownMeanigIndex(lexObj.shownMeaningIndex)\r\n    setWordMeanings(lexObj.wordMeanings)\r\n    setWordTypes(lexObj.wordTypes)\r\n    setWordType(lexObj.wordType)\r\n    setShownMeanings(lexObj.shownMeanings)\r\n  }\r\n  //E-setLex\r\n\r\n  //S-setMiniLex\r\n  const setMiniLex = (pickedWord) => {\r\n    let miniLexObj = getMiniLexAfterSearch(pickedWord, entries, wordlist)\r\n    setMiniShownMeanigIndex(miniLexObj.miniShownMeaningIndex)\r\n    setMiniWordResults(miniLexObj.miniWordResults)\r\n    setMiniWordMeanings(miniLexObj.miniWordMeanings)\r\n    setMiniWordTypes(miniLexObj.miniWordTypes)\r\n    setMiniWordType(miniLexObj.miniWordType)\r\n    setMiniShownMeanings(miniLexObj.miniShownMeanings)\r\n  }\r\n  //E-setMiniLex\r\n\r\n  //S-setSynchedSubtitle\r\n  const setSynchedSubtitle = (youTubeLinkList, i) => {\r\n    let synchedSubtitleObj = {}\r\n    if(appReady){\r\n      synchedSubtitleObj = getSynchedSubtitle(youTubeLinkList, i)\r\n    } else {\r\n      synchedSubtitleObj = getSynchedSubtitleNotReady(youTubeLinkList,i)\r\n    }\r\n    //console.log(synchedSubtitleObj)\r\n    setWholeText(synchedSubtitleObj.wholeText)\r\n    setUnSubbedPartArr(synchedSubtitleObj.unSubbedPart)\r\n    setSubtitleIndex(synchedSubtitleObj.subtitleIndex)\r\n    setSubmitted(false)\r\n  }\r\n  //E-setSynchedSubtitle\r\n\r\n  //S-selectType\r\n  const selectType = (event) => {\r\n    event.preventDefault()\r\n    setShownMeanigIndex(0)\r\n    setWordType(getWordType(event.target.id))\r\n    setShownMeanings(wordMeanings.filter(meaning => meaning.type === event.target.id))\r\n  }\r\n  //E-selectType\r\n\r\n  //S-selectMiniType\r\n  const selectMiniType = (event) => {\r\n    event.preventDefault()\r\n    setMiniShownMeanigIndex(0)\r\n    setMiniWordType(getWordType(event.target.id))\r\n    setMiniShownMeanings(miniWordMeanings.filter(meaning => meaning.type === event.target.id))\r\n  }\r\n  //E-selectMiniType\r\n\r\n  //S-selectMeaning\r\n  const selectMeaning = (event) => {\r\n    event.preventDefault()\r\n    setShownMeanigIndex(Number(event.target.id))\r\n  }\r\n  //E-selectMeaning\r\n\r\n  //S-selectMeaning\r\n  const selectMiniMeaning = async(event) => {\r\n    event.preventDefault()\r\n    setMiniShownMeanigIndex(Number(event.target.id))\r\n  }\r\n  //E-selectMeaning\r\n\r\n  //S-selectBojning\r\n  const selectBojning = (event) => {\r\n    event.preventDefault()\r\n    setQuery(event.target.id)\r\n    submission(event.target.id)\r\n  }\r\n  //E-selectBojning\r\n\r\n  //S-triggerSubmission, after clicking on a word after a failed search\r\n  const triggerSubmission = async(event) => {\r\n    event.preventDefault()\r\n    let pickedWord = getPickedWord(event.target.id)\r\n    setQuery(pickedWord)\r\n    submission(pickedWord)\r\n    submissionLex(pickedWord)\r\n  }\r\n  //E-triggerSubmission\r\n\r\n  //S-selectWord\r\n  const selectWord = async(event) => {\r\n    event.preventDefault()\r\n    let pickedSpan = event.target.id\r\n    let pickedWord = getPickedWordInPara(pickedSpan).toLowerCase()\r\n    let player = ref.current.getInternalPlayer()\r\n    setMiniPickedWord(checkMiniLex(player, pickedSpan, miniPickedWord))\r\n    setMiniLex(pickedWord)\r\n  }\r\n  //E-selectWord\r\n\r\n  //S-nextMeaning\r\n  const handleNextMeaning = async(event) => {\r\n    event.preventDefault()\r\n    nextMeaning(\r\n      shownMeaningIndex,\r\n      shownMeanings,\r\n      setShownMeanigIndex\r\n    )\r\n  }\r\n  //E-nextMeaning\r\n\r\n  //S-previousMeaning\r\n  const handlePreviousMeaning = async(event) => {\r\n    event.preventDefault()\r\n    previousMeaning(\r\n      shownMeaningIndex,\r\n      setShownMeanigIndex\r\n    )\r\n  }\r\n  //E-previousMeaning\r\n\r\n  //S-opts\r\n  const opts = {\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      cc_lang_pref: 'sv',\r\n      autoplay: autoplay,\r\n      cc_load_policy: 1,\r\n      enablejsapi: 1,\r\n    },\r\n  }\r\n  //E-opts\r\n\r\n  //S-onPlay\r\n  const onPlay = async(event) => {\r\n    setSubmitted(true)\r\n  }\r\n  //E-onPlay\r\n\r\n  //S-onPause\r\n  const onPause = async(event) => {\r\n    setSubmitted(false)\r\n  }\r\n  //E-onPause\r\n\r\n  //S-handleBack\r\n  const handleBack = async(event) => {\r\n    event.preventDefault()\r\n    playPreviousVideo(\r\n      videoIndex,\r\n      setVideoIndex,\r\n      youTubeLinks,\r\n      setCurrentVideoId,\r\n      setYouTubeLink,\r\n      setPlayingVideoTime,\r\n      currentVideoId,\r\n      playingVideoTime,\r\n      youTubeLink,\r\n      setShowSubtitle,\r\n      setSynchedSubtitle\r\n    )\r\n  }\r\n  //E-handleBack\r\n\r\n  //S-handleKÃ¶rOm\r\n  const handleKÃ¶rOm = async(event) => {\r\n    event.preventDefault()\r\n    replayCurrentVideo(\r\n      youTubeLinks,\r\n      setSubmitted,\r\n      setShowSubtitle,\r\n      youTubeLink,\r\n      videoIndex,\r\n      setYouTubeLink,\r\n      setSynchedSubtitle\r\n    )\r\n  }\r\n  //E-handleKÃ¶rOm\r\n\r\n  //S-handleNext\r\n  const handleNext = async(event) => {\r\n    event.preventDefault()\r\n    playNextVideo(\r\n      videoIndex,\r\n      youTubeLinks,\r\n      setVideoIndex,\r\n      setCurrentVideoId,\r\n      setYouTubeLink,\r\n      setPlayingVideoTime,\r\n      setShowSubtitle,\r\n      setSynchedSubtitle\r\n    )\r\n  }\r\n  //E-handleNext\r\n\r\n  //S-handleBug\r\n  const handleBug = async(videoId) => {\r\n    console.log(videoId)\r\n    window.confirm('You found and reported a bug! Thank you for helping us and other learners!')\r\n  }\r\n  //E-handleBug\r\n\r\n  //S-hide/show\r\n  const handleShow = () => setShowSubtitle(true)\r\n  const handleHide = () => setShowSubtitle(false)\r\n  //E-hide/show\r\n\r\n  //S-handleTenSecondsForward\r\n  const handleTenSecondsForward = () => {\r\n    secondsForward(ref, 5)\r\n  }\r\n  //S-handleTenSecondsForward\r\n\r\n  //S-handleTenSecondsBackward\r\n  const handleTenSecondsBackward = () => {\r\n    secondsBackward(ref, 5)\r\n  }\r\n  //E-handleTenSecondsBackward\r\n\r\n  //S-aboutPage\r\n  const AboutPage = () => (\r\n    <div>\r\n      <div id='main-container-about' className='container'>\r\n        <About logo={toPage('')}/>\r\n      </div>\r\n    </div>\r\n  )\r\n  //E-aboutPage\r\n\r\n  //S-PrivacyPolicy\r\n  const PrivacyPolicyPage = () => (\r\n    <div>\r\n      <PrivacyPolicy\r\n        logo={toPage('')}/>\r\n    </div>\r\n  )\r\n\r\n  //S-appItself\r\n  const AppItself = () => (\r\n    <div id='main-container'>\r\n      <Header\r\n        logo = {toPage('')}\r\n        about = {toPage('about')}/>\r\n      <SearchBar\r\n        logo={toPage('')}\r\n        query={query}\r\n        handleQueryChange={handleQueryChange}\r\n        handleSubmit={handleSubmit}\r\n        handleKeyboard={handleKeyboard}\r\n        lettersVisible={lettersVisible}\r\n        handleLetter={handleLetter}\r\n        handleRandomWord={handleRandomWord}/>\r\n      {lexReady && wordResults.length > 0 ?\r\n        <Lexicon\r\n          types={wordTypes}\r\n          pickMe={selectType}\r\n          meaning={shownMeanings[shownMeaningIndex]}\r\n          index={shownMeaningIndex}\r\n          length_arr={shownMeanings.length}\r\n          back={handlePreviousMeaning}\r\n          next={handleNextMeaning}\r\n          pickedType={wordType}\r\n          pickMeaning={selectMeaning}\r\n          pickBojning={selectBojning}\r\n        /> :\r\n        null }\r\n      <div id='player-container'>\r\n        <div id='youTube-player-container'>\r\n          <ReactPlayer\r\n            ref={ref}\r\n            onPlay={onPlay}\r\n            onPause={onPause}\r\n            url={youTubeLink}\r\n            height={height}\r\n            width={width}\r\n            playing={autoplay}\r\n            controls={true}\r\n            config={opts}/>\r\n        </div>\r\n        <PlayerBarControls\r\n          handleBack={handleBack}\r\n          handleKÃ¶rOm={handleKÃ¶rOm}\r\n          handleNext={handleNext}\r\n          handleTenSecondsForward={handleTenSecondsForward}\r\n          handleTenSecondsBackward={handleTenSecondsBackward}\r\n          showStats={showStats}\r\n          query={query}\r\n          videoIndex={videoIndex+1}\r\n          length={youTubeLinks.length}\r\n          handleBug={() => handleBug(currentVideoId)}\r\n        />\r\n      </div>\r\n      {\r\n        miniWordResults.length > 0 ?\r\n          <SubtitleMiniLex\r\n            showSubtitle={showSubtitle}\r\n            shownSubtitles={shownSubtitles}\r\n            shownSubtitlesArr={shownSubtitlesArr}\r\n            handleShow={handleShow}\r\n            handleHide={handleHide}\r\n            query={query}\r\n            types={miniWordTypes}\r\n            pickMe={selectMiniType}\r\n            pickMeaning={selectMiniMeaning}\r\n            pickWord={selectWord}\r\n            meaning={miniShownMeanings[miniShownMeaningIndex]}\r\n            index={miniShownMeaningIndex}\r\n            length_arr={miniShownMeanings.length}\r\n            pickedType={miniWordType}\r\n            pickedWord={miniPickedWord}\r\n          /> :\r\n          <Subtitle\r\n            showSubtitle={showSubtitle}\r\n            shownSubtitles={shownSubtitles}\r\n            shownSubtitlesArr={shownSubtitlesArr}\r\n            handleShow={handleShow}\r\n            handleHide={handleHide}\r\n            query={query}\r\n            pickWord={selectWord}\r\n            listLength={youTubeLinks.length}\r\n            triggerSubmission={triggerSubmission}\r\n            pickedWord={miniPickedWord}\r\n          />\r\n      }\r\n      <div id='fill-container'></div>\r\n    </div>\r\n  )\r\n  //E-appItself\r\n\r\n  const content = () => {\r\n    if(page === ''){\r\n      return AppItself()\r\n    } else if(page === 'about'){\r\n      return AboutPage()\r\n    } else if(page === 'privacypolicy'){\r\n      return PrivacyPolicyPage()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='page-container'>\r\n      <Header\r\n        logo = {toPage('')}\r\n        about = {toPage('about')}/>\r\n      {content()}\r\n      <Footer\r\n        logo = {toPage('')}\r\n        about = {toPage('about')}\r\n        policy = {toPage('privacypolicy')}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport ComingSoon from './ComingSoon'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>\r\n  ,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}