{"version":3,"sources":["services/subtitles.js","functions/contains.js","functions/buildYouTubeLinkArray.js","functions/tillTheNextStamp.js","components/Header.js","components/SearchBar.js","components/Player.js","components/Subtitle.js","components/Footer.js","components/AdminBar.js","AppCopy.js","index.js"],"names":["baseUrl","getAll","axios","get","then","response","data","reportBug","subtitleToBeModified","a","url","videoId","put","deleteBuggyLines","id","contains","query","wholeText","puncReg","regex","RegExp","source","returnThis","forEach","line","split","ord","test","push","length","findTimeInVideo","lineIndex","timeStamp","index","arr","hour","minutes","seconds","i","includes","substring","parseInt","findNextTime","firstTimeIndex","nextTimeStamp","secondTimeIndex","buildYouTubeLinkArray","idArr","database","theList","filter","subtitle","text","l","time","uTubeLink","videoID","buildLink","copyArr","pickedNumbers","number","Math","floor","random","indexOf","shuffle","tillTheNextStamp","firstTime","subtitleEndHour","subtitleEndMinutes","subtitleEndSeconds","slice","reduce","sub","join","getSubtitleBetweenTwoStamps","Header","className","href","SearchBar","props","onSubmit","handleSubmit","autoFocus","value","type","onChange","handleQueryChange","Player","showWhenVisible","display","showStats","showWhenNotVisible","opts","onPlay","title","onClick","handleBack","size","handleKÃ¶rOm","handleNext","style","videoIndex","handleBug","Subtitle","shownSubtitles","shownSubtitlesArr","showSubtitle","handleShow","handleHide","hideWhenVisible","map","word","color","Footer","AdminBar","border","borderWidth","searchVideoById","queryVideoId","handleQueryVideoIdChange","adminMessage1","searchBugById","queryBugId","handleQueryBugIdChange","adminMessage2","handleCorrect","adminMessage3","AppCopy","useState","subtitles","setSubtitles","setQuery","youTubeLinks","setYouTubeLinks","setVideoIndex","currentVideoId","setCurrentVideoId","setWholeText","setShownSubtitles","setShownSubtitlesArr","setShowSubtitle","setShowStats","playingVideoTime","setPlayingVideoTime","width","setWidth","height","autoplay","setAutoplay","setFirstTimeIndex","setQueryVideoId","bugId","setBugId","adminMesssage1","setAdminMessage1","currentSubtitle","setCurrentSubtitle","setAdminMessage2","setAdminMessage3","useEffect","subtitleService","event","preventDefault","console","log","youTubeLinkList","videoIDsThatContain","currentWholeText","error","window","addEventListener","innerWidth","playerVars","cc_lang_pref","start","cc_load_policy","enablejsapi","subtitleObject","buggyLines","youTubeLink","mseconds","find","bug","buggyText","lineText","link","youtubeLink","buggyLine","confirm","deleteFrom","deleteUpTo","deleteCount","correctedBuggyLines","correctedText","splice","target","theTextBetweenTwoStamps","timeOut","timeDifference","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a02ebe5a.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/subtitles'\r\nconst baseUrl = '/api/subtitles'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst reportBug = async(subtitleToBeModified) => {\r\n  const url = `${baseUrl}/${subtitleToBeModified.videoId}`\r\n  const response = await axios.put(url, subtitleToBeModified)\r\n  return response.data\r\n}\r\n\r\nconst deleteBuggyLines = async(subtitleToBeModified) => {\r\n  const url = `${baseUrl}/${subtitleToBeModified.id}`\r\n  const response = await axios.put(url, subtitleToBeModified)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  reportBug,\r\n  deleteBuggyLines\r\n}","function contains(query, wholeText){\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n        puncReg.source +\r\n        word +\r\n        puncReg.source +\r\n        endReg.source , 'i' )\r\n\r\n  let returnThis = []\r\n  wholeText.forEach( function(line){\r\n    let lineArr = line.split(' ')\r\n    lineArr.forEach(function(ord){\r\n      if(regex.test(ord)){\r\n        //console.log( `\"${word}\" is found`);\r\n        returnThis.push(line)\r\n      }\r\n    })\r\n  })\r\n  return returnThis.length !== 0\r\n}\r\n\r\nexport default contains","/* eslint-disable no-unused-vars */\r\nfunction convertArrayTimeIntoSeconds(arr){\r\n  return parseInt(arr[0])*3600 + parseInt(arr[1])*60 + parseInt(arr[2])\r\n}\r\n\r\nfunction findTimeInVideo(lineIndex, wholeText){\r\n  let timeStamp\r\n  let hour = ''\r\n  let minutes = ''\r\n  let seconds = ''\r\n  let index\r\n\r\n  for(let i = lineIndex ; i > 0 ; i--){\r\n    if(wholeText[i].includes('-->')){\r\n      timeStamp = wholeText[i]\r\n      hour = wholeText[i].substring(0,2)\r\n      //console.log(hour);\r\n      minutes = wholeText[i].substring(3,5)\r\n      //console.log(minutes);\r\n      seconds = wholeText[i].substring(6,8)\r\n      //console.log(seconds);\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n\r\n  return { 'timeStamp': timeStamp, 'time': convertArrayTimeIntoSeconds([hour, minutes, seconds]), 'firstTimeIndex': index }\r\n}\r\n\r\nfunction findNextTime(firstTimeIndex, wholeText){\r\n  let nextTimeStamp\r\n  let secondTimeIndex\r\n\r\n  for(let i = firstTimeIndex + 1 ; i < wholeText.length - 1 ; i++){\r\n    if(wholeText[i].includes('-->')){\r\n      nextTimeStamp = wholeText[i]\r\n      //console.log(seconds);\r\n      secondTimeIndex = i\r\n      //console.log('secondTimeIndex:', secondTimeIndex)\r\n      break\r\n    }\r\n  }\r\n\r\n  return { 'nextTimeStamp': nextTimeStamp, 'secondTimeIndex': secondTimeIndex }\r\n}\r\n\r\n//shuffle an Array\r\nfunction shuffle(arr){\r\n  let copyArr = []\r\n  let pickedNumbers = []\r\n  let length = arr.length\r\n  let i = 0\r\n\r\n  while(i<length){\r\n    let number = Math.floor(Math.random()*length)\r\n    if(pickedNumbers.indexOf(number)===-1){\r\n      i++\r\n      pickedNumbers.push(number)\r\n      copyArr.push(arr[number])\r\n    }\r\n  }\r\n  return copyArr\r\n}\r\n\r\nfunction buildLink(videoID, time){\r\n  return `https://www.youtube.com/embed/${videoID}?start=${time}&autoplay=1&cc_load_policy=1&cc_lang_pref=sv`\r\n}\r\n\r\n\r\nfunction buildYouTubeLinkArray(query, idArr, database){\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n        puncReg.source +\r\n        word +\r\n        puncReg.source +\r\n        endReg.source , 'i' )\r\n\r\n  //copy this into the global youtube link array\r\n  let theList = []\r\n\r\n  idArr.forEach(function(id){\r\n    let wholeText = database.filter( subtitle => subtitle.videoId === id )[0].text\r\n    let l = wholeText.length\r\n\r\n    for(let i = 0; i < l - 1 ; i++){\r\n      let time\r\n      let timeStamp\r\n      let firstTimeIndex\r\n      let uTubeLink = ''\r\n      let wordArr = wholeText[i].split(' ')\r\n      wordArr.forEach(function(ord){\r\n        if(regex.test(ord)){\r\n          time = findTimeInVideo(i,wholeText).time\r\n          timeStamp = findTimeInVideo(i, wholeText).timeStamp\r\n          firstTimeIndex = findTimeInVideo(i, wholeText).firstTimeIndex\r\n          uTubeLink = buildLink(id,time)\r\n          theList.push({\r\n            'youtubeLink': uTubeLink,\r\n            'id': id,\r\n            'time': time,\r\n            'timeStamp': timeStamp,\r\n            'firstTimeIndex': firstTimeIndex,\r\n            'nextTimeStamp': findNextTime(firstTimeIndex, wholeText).nextTimeStamp,\r\n            'secondTimeIndex': findNextTime(firstTimeIndex, wholeText).secondTimeIndex,\r\n            'lineIndex': i,\r\n            'wholeText': wholeText,\r\n            'lineText': wholeText[i]\r\n          })\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n  return shuffle(theList)\r\n}\r\n\r\n\r\nexport default buildYouTubeLinkArray\r\n\r\n","/* eslint-disable no-unused-vars */\r\nfunction convertArrayTimeIntoSeconds(arr){\r\n  return parseInt(arr[0])*3600 + parseInt(arr[1])*60 + parseInt(arr[2])\r\n}\r\n\r\n//Must return the text between two time stamps ( which includes -->) and the time difference between the two\r\nfunction tillTheNextStamp(firstTime, firstTimeIndex, wholeText) {\r\n  var hour = ''\r\n  var minutes = ''\r\n  var seconds = ''\r\n  var nextTimeStamp\r\n  var secondTimeIndex\r\n  var textBetweenTwoStamps\r\n\r\n  //console.log('firstTime:', firstTime)\r\n  //console.log('firstTimeIndex:', firstTimeIndex)\r\n\r\n  for(let i = firstTimeIndex + 1 ; i < wholeText.length - 1 ; i++){\r\n    if(wholeText[i].includes('-->')){\r\n      nextTimeStamp = wholeText[i]\r\n      //console.log(seconds);\r\n      secondTimeIndex = i\r\n      //console.log('secondTimeIndex:', secondTimeIndex)\r\n      break\r\n    }\r\n  }\r\n\r\n  //For the time difference\r\n  let timeStamp = nextTimeStamp.split(' --> ')\r\n  let subtitleEndHour = timeStamp[0].substring(0,2)\r\n  let subtitleEndMinutes = timeStamp[0].substring(3,5)\r\n  let subtitleEndSeconds = timeStamp[0].substring(6,8)\r\n  let secondTime = convertArrayTimeIntoSeconds([subtitleEndHour, subtitleEndMinutes, subtitleEndSeconds])\r\n\r\n  let difference = secondTime - firstTime\r\n\r\n  textBetweenTwoStamps = getSubtitleBetweenTwoStamps(wholeText, firstTimeIndex, secondTimeIndex)\r\n  return { 'timeDifference': difference, 'text': textBetweenTwoStamps, 'nextTimeStamp': nextTimeStamp }\r\n}\r\n\r\nfunction getSubtitleBetweenTwoStamps(wholeText, firstTimeIndex, secondTimeIndex) {\r\n  let subtitleBetweenTwoStamps = wholeText.slice(firstTimeIndex + 1 , secondTimeIndex)\r\n  //console.log(subtitleBetweenTwoStamps)\r\n  let returnThis = subtitleBetweenTwoStamps.reduce(function( sub, line) {\r\n    return sub + line + '\\n'\r\n  }, '' )\r\n  return returnThis.split('\\n').slice(0, -1).join('\\n')\r\n}\r\n\r\nexport default tillTheNextStamp","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"main-header\">\r\n      <a href=\"/\" className=\"brand-logo\">\r\n        <div className=\"brand-logo-name\">youttala</div>\r\n      </a>\r\n      <div className=\"main-nav\">\r\n        <ul>\r\n          <li><a href=\"#\">om</a></li>\r\n          <li><a href=\"#\">kontakt</a></li>\r\n          <li><a href=\"#\">nyheter</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\n\r\nconst SearchBar = (props) => {\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit = {props.handleSubmit}>\r\n        <input autoFocus className=\"searchbar\" value={props.query} type='text' onChange={props.handleQueryChange}></input>\r\n        <button className=\"search-button\" type='submit'>Search</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport YouTube from 'react-youtube'\r\nimport { FaBackward } from 'react-icons/fa'\r\nimport { FaForward } from 'react-icons/fa'\r\nimport { FaRedo } from 'react-icons/fa'\r\nimport { FaExclamationCircle } from 'react-icons/fa'\r\n\r\nconst Player = (props) => {\r\n\r\n  const showWhenVisible = { display: props.showStats ? '' : 'none' }\r\n  const showWhenNotVisible = { display: props.showStats ? 'none' : '' }\r\n\r\n  return (\r\n    <div className='player'>\r\n      <div className=\"video\">\r\n        <YouTube videoId={props.videoId} opts={props.opts} onPlay={props.onPlay}></YouTube>\r\n      </div>\r\n      <div className=\"player-bar\">\r\n        <div className=\"empty\">\r\n\r\n        </div>\r\n        <div className=\"button-set\">\r\n          <div>\r\n            <button className=\"button\" title='Previous video' id='back-button' onClick={props.handleBack}><FaBackward size= {23}/></button>\r\n          </div>\r\n          <div>\r\n            <button className=\"button\" id='restart-button' title='replay' onClick={props.handleKÃ¶rOm}><FaRedo size= {23}/></button>\r\n          </div>\r\n          <div>\r\n            <button className=\"button\" id='next-button' title='next video' onClick={props.handleNext}><FaForward size= {23}/></button>\r\n          </div>\r\n        </div>\r\n        <div className=\"extras\">\r\n          <span style={showWhenVisible}> {props.videoIndex} av {props.length}</span>\r\n          <span style={showWhenNotVisible}></span>\r\n          <button className=\"button\" title='report a bug' onClick={props.handleBug}><FaExclamationCircle size= {13}/></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { FaCopy } from 'react-icons/fa'\r\nimport { FaEye } from 'react-icons/fa'\r\n\r\nconst Subtitle = ({ shownSubtitles, shownSubtitlesArr, showSubtitle, handleShow, handleHide, query }) => {\r\n\r\n  const hideWhenVisible = { display: showSubtitle ? 'none' : '' }\r\n  const showWhenVisible = { display: showSubtitle ? '' : 'none' }\r\n\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n        puncReg.source +\r\n        word +\r\n        puncReg.source +\r\n        endReg.source , 'i' )\r\n\r\n  const beforeSearch = () => (\r\n    <div className=\"first-subtitle\">\r\n      <div className=\"yarrak\">\r\n        You may find your search result here!\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const afterSearch = () => (\r\n    <div>\r\n      <div style={showWhenVisible}>\r\n        <span>{shownSubtitles}</span>\r\n        <button>copy</button>\r\n        <button onClick={handleHide}>hide</button>\r\n      </div>\r\n      <div style={hideWhenVisible}>\r\n        <span>See your search result!</span>\r\n        <button onClick={handleShow}>show</button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const afterSearchXd = () => (\r\n    <div>\r\n      <div className=\"subtitle\" style={showWhenVisible}>\r\n        <div className=\"subtitle-buttons\">\r\n          <button style ={{ display: 'none' }} className=\"button\"><FaCopy size= {13}/></button>\r\n          <button className=\"button\" title='hide the search result' onClick={handleHide}><FaEye size={13}/></button>\r\n        </div>\r\n        <div className=\"subtitle-subtitle\">\r\n          <p className=\"paragraph\">\r\n            {shownSubtitlesArr.map( (word, i=0) =>\r\n              <span\r\n                style={{ color: regex.test(word) ? 'red' : 'black' }}\r\n                key={word + i+1}>{word}&nbsp;</span>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"hidden-subtitle\" style={hideWhenVisible}>\r\n        <div id=\"three-dots\">\r\n          <span></span>\r\n        </div>\r\n        <div id=\"show-button-bar\">\r\n          <button className=\"button\" title='show the search result' onClick={handleShow}><FaEye size={13}/></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n  /*\r\n  const afterSearchXd = () => (\r\n    <div>\r\n      <div style={showWhenVisible}>\r\n        {shownSubtitlesArr.map( (word, i=0) =>\r\n          <span\r\n            style={{ color: regex.test(word) ? 'red' : 'black' }}\r\n            key={word + i+1}>{word}&nbsp;</span>\r\n        )}\r\n        <button>copy</button>\r\n        <button onClick={handleHide}>hide</button>\r\n      </div>\r\n      <div style={hideWhenVisible}>\r\n        <span>See your search result!</span>\r\n        <button onClick={handleShow}>show</button>\r\n      </div>\r\n    </div>\r\n  )\r\n  */\r\n\r\n\r\n  return (\r\n    <div>\r\n      {shownSubtitles === null ? beforeSearch() : afterSearchXd() }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Subtitle\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <nav className=\"footer-nav\">\r\n        <ul>\r\n          <li><a href=\"#\">license</a></li>\r\n          <li><a href=\"#\">e-mail</a></li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n/*\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <ul>\r\n          <li>license</li>\r\n          <li>e-mail</li>\r\n        </ul>\r\n      </footer>\r\n    </div>\r\n  )\r\n*/\r\n}\r\n\r\nexport default Footer","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\n//Will be hidden with CSS style, be used to correct buggy lines.\r\nconst AdminBar = (props) => {\r\n\r\n  //Change display to '' to be be eligible to correct the buggyLines\r\n  const style = {\r\n    display: 'none' ,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n  }\r\n\r\n  /*\r\n  <span>{props.adminMessage}</span>\r\n  <br></br>\r\n  Query bugId:\r\n  <input value={props.queryBugId} type='text' onChange={props.handleQueryBugIdChange}></input>\r\n  <button onClick={props.handleCorrect}>correct</button>\r\n  <span>{props.adminMessage}</span>\r\n  */\r\n\r\n  return (\r\n    <div style={style}>\r\n        admin bar, correct buggy lines!\r\n      <br></br>\r\n        OBS! dont forget to enable the correct put route and disable the other one in backend!\r\n      <br></br>\r\n        Search by videoId, once found search by bugId, once found remove it\r\n      <form onSubmit = {props.searchVideoById}>\r\n        Query videoId:\r\n        <input value={props.queryVideoId} type='text' onChange={props.handleQueryVideoIdChange}></input>\r\n        <button type='submit'>search by id</button>\r\n      </form>\r\n      <span>{props.adminMessage1}</span>\r\n      <br></br>\r\n      <form onSubmit={props.searchBugById}>\r\n        Query bugId:\r\n        <input value={props.queryBugId} type='text' onChange={props.handleQueryBugIdChange}></input>\r\n        <button type='submit'>search bug</button>\r\n      </form>\r\n      <span>{props.adminMessage2}</span>\r\n      <br></br>\r\n      <button onClick={props.handleCorrect}>remove the buggy part</button>\r\n      <br></br>\r\n      <span>{props.adminMessage3}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminBar\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport subtitleService from './services/subtitles'\r\nimport contains from './functions/contains'\r\nimport buildYouTubeLinkArray from './functions/buildYouTubeLinkArray'\r\nimport tillTheNextStamp from './functions/tillTheNextStamp'\r\nimport Header from './components/Header'\r\nimport SearchBar from './components/SearchBar'\r\nimport Player from './components/Player'\r\nimport Subtitle from './components/Subtitle'\r\nimport Footer from './components/Footer'\r\nimport AdminBar from './components/AdminBar'\r\nimport Media from 'react-media'\r\n\r\nconst AppCopy = () => {\r\n  const [subtitles, setSubtitles] = useState([])\r\n  const [query, setQuery] = useState('')\r\n  const [youTubeLinks, setYouTubeLinks] = useState([])\r\n  const [videoIndex, setVideoIndex] = useState(0)\r\n  const [currentVideoId, setCurrentVideoId] = useState('5bfx6BNufdE')\r\n  const [wholeText, setWholeText] = useState([]) //the text part of the playing subtitle\r\n  const [shownSubtitles, setShownSubtitles] = useState(null)\r\n  const [shownSubtitlesArr, setShownSubtitlesArr] = useState([])\r\n  const [showSubtitle ,setShowSubtitle] = useState(false)\r\n  const [showStats, setShowStats] = useState(false)\r\n  const [playingVideoTime, setPlayingVideoTime] = useState(0)\r\n  const [width, setWidth] = useState('640')\r\n  const [height, setHeight] = useState('360')\r\n  const [autoplay, setAutoplay] = useState(0)\r\n  const [firstTimeIndex, setFirstTimeIndex] = useState(0)\r\n  //for admin to manage removing buggy lines\r\n  const [queryVideoId, setQueryVideoId] = useState('')\r\n  const [bugId, setBugId] = useState('')\r\n  const [adminMesssage1, setAdminMessage1] = useState('')\r\n  const [currentSubtitle, setCurrentSubtitle] = useState(null)\r\n  const [adminMessage2, setAdminMessage2] = useState('')\r\n  const [adminMessage3, setAdminMessage3] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    subtitleService\r\n      .getAll()\r\n      .then(subtitles => {\r\n        setSubtitles(subtitles)\r\n      })\r\n  },[])\r\n\r\n\r\n  /*\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:3001/subtitles')\r\n      .then(response => {\r\n        setSubtitles(response.data)\r\n      })\r\n  }, [])\r\n  */\r\n\r\n  //hide/show starts\r\n\r\n  const showWhenVisible = { display: showSubtitle ? '' : 'none' }\r\n  const showStatsWhenVisible = { display: showStats ? '' : 'none' }\r\n\r\n  //hide/shoe ends\r\n\r\n  //handleQueryChange starts\r\n  const handleQueryChange = (event) => setQuery(event.target.value)\r\n\r\n  //handleSubmit starts\r\n  const handleSubmit = async(event) => {\r\n    event.preventDefault()\r\n    console.log(query)\r\n    let youTubeLinkList = []\r\n    let videoIDsThatContain = []\r\n    try {\r\n      console.log('inside try', query)\r\n      subtitles.forEach(subtitle => {\r\n        if(contains(query, subtitle.text)){\r\n          console.log('inside subtitles')\r\n          console.log(true)\r\n          console.log(subtitle.id)\r\n          videoIDsThatContain.push(subtitle.videoId)\r\n          console.log(videoIDsThatContain)\r\n        }\r\n      })\r\n      youTubeLinkList = buildYouTubeLinkArray(query, videoIDsThatContain, subtitles)\r\n      setYouTubeLinks(youTubeLinkList)\r\n      setVideoIndex(0)\r\n      let videoId = youTubeLinkList[0].id\r\n      setCurrentVideoId(videoId)\r\n      let time = youTubeLinkList[0].time\r\n      setPlayingVideoTime(time)\r\n\r\n      if(videoId === currentVideoId && time === playingVideoTime){\r\n        if(width === '640'){\r\n          setWidth('640.1')\r\n        } else {\r\n          setWidth('640')\r\n        }\r\n      }\r\n\r\n      let currentWholeText = youTubeLinkList[0].wholeText\r\n      setWholeText(currentWholeText)\r\n      let firstTimeIndex = youTubeLinkList[0].firstTimeIndex\r\n      setFirstTimeIndex(firstTimeIndex)\r\n      setAutoplay(1)\r\n      setShowSubtitle(false)\r\n      setShowStats(true)\r\n    } catch (error) {\r\n      if(videoIDsThatContain.length === 0) {\r\n        setCurrentVideoId('5bfx6BNufdE')\r\n        setWholeText([])\r\n        setFirstTimeIndex(0)\r\n        setPlayingVideoTime(0)\r\n        setAutoplay(0)\r\n        setShowStats(false)\r\n        setYouTubeLinks([])\r\n        let text = `nothing found for ${query}, try 'skillnad'`\r\n        setShownSubtitles(text)\r\n        let shownSubtitlesArr = text.split(/[\\s\\n]+/)\r\n        setShownSubtitlesArr(shownSubtitlesArr)\r\n        setShowSubtitle(true)\r\n        /*\r\n        setTimeout(() => {\r\n          setShownSubtitles(null)\r\n          setShowSubtitle(false)\r\n        }, 5000)\r\n        */\r\n      }\r\n    }\r\n  }\r\n  ////handleSubmit ends\r\n\r\n  window.addEventListener('resize', (event) => {\r\n    event.preventDefault()\r\n    if(window.innerWidth < 415){\r\n      setWidth('310')\r\n    }else if(window.innerWidth < 668){\r\n      setWidth('400')\r\n    }else if(window.innerWidth > 668){\r\n      setWidth('640')\r\n    }\r\n  })\r\n\r\n  //opts starts\r\n  const opts = {\r\n    height: height,\r\n    width: width,\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      cc_lang_pref: 'sv',\r\n      autoplay: autoplay,\r\n      start: playingVideoTime,\r\n      cc_load_policy: 1,\r\n      enablejsapi: 1,\r\n    },\r\n  }\r\n  //opts ends\r\n\r\n\r\n\r\n  //onPlay starts\r\n  const onPlay = (event) => {\r\n    if(wholeText.length>0){\r\n      let theTextBetweenTwoStamps = tillTheNextStamp(playingVideoTime, firstTimeIndex, wholeText)\r\n      setShownSubtitles(theTextBetweenTwoStamps.text)\r\n      let shownSubtitlesArr = theTextBetweenTwoStamps.text.split(/[\\s\\n]+/)\r\n      setShownSubtitlesArr(shownSubtitlesArr)\r\n      setShowSubtitle(true)\r\n      let timeOut = theTextBetweenTwoStamps.timeDifference*1000\r\n      setTimeout(() => {\r\n        setShowSubtitle(false)\r\n      }, timeOut)\r\n    }\r\n  }\r\n  //onPlay ends\r\n\r\n  //handleBack starts\r\n  const handleBack = async(event) => {\r\n    event.preventDefault()\r\n    if(videoIndex >= 1){\r\n      setVideoIndex(videoIndex-1)\r\n      let videoId = youTubeLinks[videoIndex-1].id\r\n      setCurrentVideoId(videoId)\r\n      let time = youTubeLinks[videoIndex-1].time\r\n      setPlayingVideoTime(time)\r\n\r\n      if(videoId === currentVideoId && time === playingVideoTime){\r\n        if(width === '640'){\r\n          setWidth('640.1')\r\n        } else {\r\n          setWidth('640')\r\n        }\r\n      }\r\n\r\n      let currentWholeText = youTubeLinks[videoIndex-1].wholeText\r\n      setWholeText(currentWholeText)\r\n      let firstTimeIndex = youTubeLinks[videoIndex-1].firstTimeIndex\r\n      setFirstTimeIndex(firstTimeIndex)\r\n      setShowSubtitle(false)\r\n    }\r\n  }\r\n  //handleBack ends\r\n\r\n  //handleKÃ¶rOm starts\r\n  const handleKÃ¶rOm = async(event) => {\r\n    event.preventDefault()\r\n    setShowSubtitle(true)\r\n    if(width === '640'){\r\n      setWidth('640.1')\r\n    } else {\r\n      setWidth('640')\r\n    }\r\n  }\r\n  //handleKÃ¶rOm ends\r\n\r\n  //handleBack starts\r\n  const handleNext = async(event) => {\r\n    event.preventDefault()\r\n    if(videoIndex < (youTubeLinks.length-1)){\r\n      setVideoIndex(videoIndex+1)\r\n      let videoId = youTubeLinks[videoIndex+1].id\r\n      setCurrentVideoId(videoId)\r\n      let time = youTubeLinks[videoIndex+1].time\r\n      setPlayingVideoTime(time)\r\n\r\n      if(videoId === currentVideoId && time === playingVideoTime){\r\n        if(width === '640'){\r\n          setWidth('640.1')\r\n        } else {\r\n          setWidth('640')\r\n        }\r\n      }\r\n\r\n      let currentWholeText = youTubeLinks[videoIndex+1].wholeText\r\n      setWholeText(currentWholeText)\r\n      let firstTimeIndex = youTubeLinks[videoIndex+1].firstTimeIndex\r\n      setFirstTimeIndex(firstTimeIndex)\r\n      setShowSubtitle(false)\r\n    }\r\n  }\r\n  //handleBack ends\r\n\r\n  //handleBug starts\r\n  const handleBug = async(subtitleObject) => {\r\n    console.log(subtitleObject.videoId)\r\n    try {\r\n      let buggyLines = subtitleObject.buggyLines\r\n      const youTubeLink = youTubeLinks[videoIndex]\r\n      const timeStamp = youTubeLink.timeStamp\r\n      const hour = timeStamp.substring(0,2)\r\n      const minutes = timeStamp.substring(3,5)\r\n      const seconds = timeStamp.substring(6,8)\r\n      const mseconds = timeStamp.substring(9,12)\r\n      const bugId = `${youTubeLink.id}_${hour}${minutes}${seconds}${mseconds}`\r\n\r\n      //buggyLines = []\r\n\r\n      if(!buggyLines.find(bug => bug.bugId === bugId)){\r\n        //to clean the buggyLines of the subtitleObject disable from here to\r\n        buggyLines.push(\r\n          {\r\n            bugId: bugId,\r\n            buggyText: youTubeLink.lineText,\r\n            lineIndex: youTubeLink.lineIndex,\r\n            time: youTubeLink.time,\r\n            timeStamp: youTubeLink.timeStamp,\r\n            firstTimeIndex: youTubeLink.firstTimeIndex,\r\n            nextTimeStamp: youTubeLink.nextTimeStamp,\r\n            secondTimeIndex: youTubeLink.secondTimeIndex,\r\n            link: youTubeLink.youtubeLink })\r\n        //... to here\r\n        const newSubtitle = await subtitleService.reportBug({\r\n          //channelTitle: subtitleObject.channelTitle,\r\n          //videoId: subtitleObject.videoId,\r\n          videoId: subtitleObject.videoId,\r\n          buggyLines: buggyLines,\r\n          //text: subtitleObject.text\r\n        })\r\n      }else{\r\n        console.log('already reported')\r\n      }\r\n      console.log('handleBug worked')\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log('handleBug failed')\r\n    }\r\n  }\r\n  //handleBug ends\r\n\r\n  const handleShow = () => setShowSubtitle(true)\r\n  const handleHide = () => setShowSubtitle(false)\r\n\r\n  //Admin\r\n  //\r\n\r\n  const handleQueryVideoIdChange = (event) => setQueryVideoId(event.target.value)\r\n  const handleQueryBugIdChange = (event) => setBugId(event.target.value)\r\n\r\n  //find video by its id\r\n  const searchVideoById = async(event) => {\r\n    event.preventDefault()\r\n    try {\r\n      setWholeText([])\r\n      setFirstTimeIndex(0)\r\n      setPlayingVideoTime(0)\r\n      setAutoplay(0)\r\n      setShowStats(false)\r\n      setYouTubeLinks([])\r\n\r\n      if(subtitles.find( subtitle => subtitle.videoId === queryVideoId)){\r\n        setCurrentVideoId(queryVideoId)\r\n        setAdminMessage1(`${queryVideoId} found`)\r\n        setCurrentSubtitle(subtitles.find( subtitle => subtitle.videoId === queryVideoId))\r\n      }else {\r\n        setCurrentVideoId('5bfx6BNufdE')\r\n        setAdminMessage1('This subtitle is not in the db')\r\n        setBugId('')\r\n        setAdminMessage2('')\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n      setAdminMessage1('There was an error, check the console')\r\n      setWholeText([])\r\n      setFirstTimeIndex(0)\r\n      setPlayingVideoTime(0)\r\n      setAutoplay(0)\r\n      setShowStats(false)\r\n      setYouTubeLinks([])\r\n      setCurrentVideoId('5bfx6BNufdE')\r\n    }\r\n  }\r\n\r\n  const searchBugById = async(event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      if(currentSubtitle.buggyLines.find(bug => bug.bugId === bugId)){\r\n        setAdminMessage2(`${bugId} found`)\r\n        setBugId(bugId)\r\n        let buggyLine = currentSubtitle.buggyLines.find(bug => bug.bugId === bugId)\r\n        setPlayingVideoTime(buggyLine.time)\r\n        setAutoplay(1)\r\n        setShownSubtitles(false)\r\n      } else {\r\n        setAdminMessage2(`${bugId} not found`)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      setAdminMessage2(`There was an error, see the console, ${bugId} not found`)\r\n    }\r\n\r\n  }\r\n\r\n  //handleCorrect starts\r\n  const handleCorrect = async( subtitleObject, bugId ) => {\r\n    const buggyLine = subtitleObject.buggyLines.find(buggyLine => buggyLine.bugId === bugId)\r\n    console.log(buggyLine)\r\n    const confirmation = window.confirm(`Do you really want to remove the part from ${buggyLine.timeStamp} to ${buggyLine.nextTimeStamp}?`)\r\n    //const buggyLine = subtitleObject.buggyLines.find(buggyLine => buggyLine.bugId === bugId)\r\n\r\n    if(confirmation){\r\n      try {\r\n        const deleteFrom = buggyLine.firstTimeIndex\r\n        const deleteUpTo = buggyLine.secondTimeIndex\r\n        const deleteCount = deleteUpTo - deleteFrom\r\n        const buggyLines = subtitleObject.buggyLines.slice()\r\n        console.log(buggyLines)\r\n        const correctedBuggyLines = buggyLines.filter(buggyLine => buggyLine.bugId !== bugId)\r\n        console.log(correctedBuggyLines)\r\n        const correctedText = subtitleObject.text\r\n        correctedText.splice(deleteFrom, deleteCount)\r\n        const newSubtitle = await subtitleService.deleteBuggyLines({\r\n          //channelTitle: subtitleObject.channelTitle,\r\n          //videoId: subtitleObject.videoId,\r\n          id: subtitleObject.id,\r\n          buggyLines: correctedBuggyLines,\r\n          text: correctedText\r\n        })\r\n        setAdminMessage3(`${bugId} corrected`)\r\n      } catch (error) {\r\n        console.log(error)\r\n        setAdminMessage3('Correction failed, see the conssole')\r\n        //setAdminMessage('subtitle could not be corrected')\r\n      }\r\n    }else {\r\n      setAdminMessage3('Correction cancelled')\r\n    }\r\n\r\n  }\r\n  //handleCorrect ends\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <AdminBar\r\n        queryVideoId = {queryVideoId}\r\n        handleQueryVideoIdChange = {handleQueryVideoIdChange}\r\n        searchVideoById = {searchVideoById}\r\n        adminMessage1={adminMesssage1}\r\n        queryBugId={bugId}\r\n        handleQueryBugIdChange={handleQueryBugIdChange}\r\n        searchBugById={searchBugById}\r\n        adminMessage2={adminMessage2}\r\n        handleCorrect={() => handleCorrect(currentSubtitle, bugId)}\r\n        adminMessage3={adminMessage3}\r\n      />\r\n      <div className='container'>\r\n        <SearchBar\r\n          query={query}\r\n          handleQueryChange={handleQueryChange}\r\n          handleSubmit={handleSubmit}/>\r\n        <div className='player-all'>\r\n          <Player\r\n            videoId={currentVideoId}\r\n            opts={opts}\r\n            handleBack={handleBack}\r\n            handleKÃ¶rOm={handleKÃ¶rOm}\r\n            handleNext={handleNext}\r\n            onPlay={onPlay}\r\n            showStats={showStats}\r\n            videoIndex={videoIndex+1}\r\n            length={youTubeLinks.length}\r\n            handleBug={() => handleBug(subtitles.find(subtitle => subtitle.videoId === currentVideoId))}\r\n          />\r\n        </div>\r\n        <Subtitle\r\n          showSubtitle={showSubtitle}\r\n          shownSubtitles={shownSubtitles}\r\n          shownSubtitlesArr={shownSubtitlesArr}\r\n          handleShow={handleShow}\r\n          handleHide={handleHide}\r\n          query={query}\r\n        />\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCopy\r\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport AppCopy from './AppCopy'\nimport ComingSoon from './ComingSoon'\n\n\nReactDOM.render(\n  <AppCopy />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}