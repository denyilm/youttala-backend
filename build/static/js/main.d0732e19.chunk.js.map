{"version":3,"sources":["services/subtitles.js","functions/contains.js","functions/buildYouTubeLinkArray.js","functions/tillTheNextStamp.js","components/Header.js","components/SearchBar.js","components/Player.js","components/Subtitle.js","components/Footer.js","components/AdminBar.js","components/About.js","AppCopy2.js","index.js"],"names":["baseUrl","getAll","axios","get","then","response","data","getOne","videoId","a","url","getResults","query","console","log","reportBug","subtitleToBeModified","put","deleteBuggyLines","id","contains","wholeText","puncReg","regex","RegExp","source","returnThis","forEach","line","split","ord","test","push","length","convertArrayTimeIntoSeconds","arr","parseInt","findTimeInVideo","lineIndex","timeStamp","index","hour","minutes","seconds","i","includes","substring","findNextTime","firstTimeIndex","nextTimeStamp","secondTimeIndex","shuffle","copyArr","pickedNumbers","number","Math","floor","random","indexOf","tillTheNextStamp","firstTime","slice","reduce","sub","join","getSubtitleBetweenTwoStamps","buildYouTubeLinkArray","idArr","database","theList","copyIdArr","filter","subtitle","text","l","time","uTubeLink","videoID","buildLink","timeDifference","Header","props","className","onClick","logo","home","about","SearchBar","onSubmit","handleSubmit","autoFocus","value","type","placeholder","onChange","handleQueryChange","Player","showWhenVisible","display","showStats","showWhenNotVisible","opts","onPlay","title","handleBack","size","handleKörOm","handleNext","style","videoIndex","handleBug","Subtitle","shownSubtitles","shownSubtitlesArr","showSubtitle","handleShow","handleHide","hideWhenVisible","copy","event","preventDefault","copyText","document","getElementById","innerText","navigator","clipboard","writeText","clipText","map","word","color","Footer","useState","href","AdminBar","border","borderWidth","searchVideoById","queryVideoId","handleQueryVideoIdChange","adminMessage1","searchBugById","queryBugId","handleQueryBugIdChange","adminMessage2","handleCorrect","adminMessage3","About","showGuide","setShowGuide","handleKörBara","AppCopy2","subtitles","setSubtitles","setQuery","youTubeLinks","setYouTubeLinks","setVideoIndex","currentVideoId","setCurrentVideoId","setShownSubtitles","setShownSubtitlesArr","setShowSubtitle","setShowStats","playingVideoTime","setPlayingVideoTime","width","setWidth","height","setHeight","youTubeContainerClassName","autoplay","setAutoplay","setFirstTimeIndex","setAbout","appReady","setAppReady","setQueryVideoId","bugId","setBugId","adminMesssage1","setAdminMessage1","currentSubtitle","setCurrentSubtitle","setAdminMessage2","setAdminMessage3","randomWords","useEffect","subtitleService","window","innerWidth","addEventListener","updateWidth","target","setAfterSearch","youTubeLinkList","resetApp","shownText","videoIDsThatContain","error","playerVars","cc_lang_pref","start","cc_load_policy","enablejsapi","youTubeLink","theTextBetweenTwoStamps","timeOut","setTimeout","subtitleObject","buggyLines","mseconds","find","bug","buggyText","lineText","link","youtubeLink","confirm","buggyLine","deleteFrom","deleteUpTo","deleteCount","correctedBuggyLines","correctedText","splice","handleHome","containerClassName","ReactDOM","render"],"mappings":"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","file":"static/js/main.d0732e19.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/subtitles'\r\nconst baseUrl = '/api/subtitles'\r\n// eslint-disable-next-line linebreak-style\r\nconst aboutUrl = '/api/about'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getOne = async(videoId) => {\r\n  const url = `${baseUrl}/${videoId}`\r\n  const response = await axios.get(url)\r\n  return response.data\r\n}\r\n\r\nconst getResults = async(query) => {\r\n  const url = `${baseUrl}/results/${query}`\r\n  console.log(url)\r\n  const response = await axios.get(url)\r\n  return response.data\r\n}\r\n\r\nconst reportBug = async(subtitleToBeModified) => {\r\n  const url = `${baseUrl}/${subtitleToBeModified.videoId}`\r\n  const response = await axios.put(url, subtitleToBeModified)\r\n  return response.data\r\n}\r\n\r\nconst deleteBuggyLines = async(subtitleToBeModified) => {\r\n  const url = `${baseUrl}/${subtitleToBeModified.id}`\r\n  const response = await axios.put(url, subtitleToBeModified)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  getOne,\r\n  getResults,\r\n  reportBug,\r\n  deleteBuggyLines\r\n}","function contains(query, wholeText){\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n        puncReg.source +\r\n        word +\r\n        puncReg.source +\r\n        endReg.source , 'i' )\r\n\r\n  let returnThis = []\r\n  wholeText.forEach( function(line){\r\n    let lineArr = line.split(' ')\r\n    lineArr.forEach(function(ord){\r\n      if(regex.test(ord)){\r\n        //console.log( `\"${word}\" is found`);\r\n        returnThis.push(line)\r\n      }\r\n    })\r\n  })\r\n  return returnThis.length !== 0\r\n}\r\n\r\nexport default contains","/* eslint-disable no-unused-vars */\r\nfunction convertArrayTimeIntoSeconds(arr){\r\n  return parseInt(arr[0])*3600 + parseInt(arr[1])*60 + parseInt(arr[2])\r\n}\r\n\r\nfunction findTimeInVideo(lineIndex, wholeText){\r\n  let timeStamp\r\n  let hour = ''\r\n  let minutes = ''\r\n  let seconds = ''\r\n  let index\r\n\r\n  for(let i = lineIndex ; i > 0 ; i--){\r\n    if(wholeText[i].includes('-->')){\r\n      timeStamp = wholeText[i]\r\n      hour = wholeText[i].substring(0,2)\r\n      //console.log(hour);\r\n      minutes = wholeText[i].substring(3,5)\r\n      //console.log(minutes);\r\n      seconds = wholeText[i].substring(6,8)\r\n      //console.log(seconds);\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n\r\n  return { 'timeStamp': timeStamp, 'time': convertArrayTimeIntoSeconds([hour, minutes, seconds]), 'firstTimeIndex': index }\r\n}\r\n\r\nfunction findNextTime(firstTimeIndex, wholeText){\r\n  let nextTimeStamp\r\n  let secondTimeIndex\r\n\r\n  for(let i = firstTimeIndex + 1 ; i < wholeText.length - 1 ; i++){\r\n    if(wholeText[i].includes('-->')){\r\n      nextTimeStamp = wholeText[i]\r\n      //console.log(seconds);\r\n      secondTimeIndex = i\r\n      //console.log('secondTimeIndex:', secondTimeIndex)\r\n      break\r\n    }\r\n  }\r\n\r\n  return { 'nextTimeStamp': nextTimeStamp, 'secondTimeIndex': secondTimeIndex }\r\n}\r\n\r\n//shuffle an Array\r\nfunction shuffle(arr){\r\n  let copyArr = []\r\n  let pickedNumbers = []\r\n  let length = arr.length\r\n  let i = 0\r\n\r\n  while(i<length){\r\n    let number = Math.floor(Math.random()*length)\r\n    if(pickedNumbers.indexOf(number)===-1){\r\n      i++\r\n      pickedNumbers.push(number)\r\n      copyArr.push(arr[number])\r\n    }\r\n  }\r\n  return copyArr\r\n}\r\n\r\nfunction buildLink(videoID, time){\r\n  return `https://www.youtube.com/embed/${videoID}?start=${time}&autoplay=1&cc_load_policy=1&cc_lang_pref=sv`\r\n}\r\n\r\n\r\n//function buildYouTubeLinkArray(query, idArr, database){\r\n//let word = query\r\n//let puncReg = /[.,\"'?!;:]*/\r\n/*\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n        puncReg.source +\r\n        word +\r\n        puncReg.source +\r\n        endReg.source , 'i' )\r\n\r\n  //copy this into the global youtube link array\r\n  let theList = []\r\n\r\n  idArr.forEach(function(id){\r\n    let wholeText = database.filter( subtitle => subtitle.videoId === id )[0].text\r\n    let l = wholeText.length\r\n\r\n    for(let i = 0; i < l - 1 ; i++){\r\n      let time\r\n      let timeStamp\r\n      let firstTimeIndex\r\n      let uTubeLink = ''\r\n      let wordArr = wholeText[i].split(' ')\r\n      wordArr.forEach(function(ord){\r\n        if(regex.test(ord)){\r\n          time = findTimeInVideo(i,wholeText).time\r\n          timeStamp = findTimeInVideo(i, wholeText).timeStamp\r\n          firstTimeIndex = findTimeInVideo(i, wholeText).firstTimeIndex\r\n          uTubeLink = buildLink(id,time)\r\n          theList.push({\r\n            'youtubeLink': uTubeLink,\r\n            'id': id,\r\n            'time': time,\r\n            'timeStamp': timeStamp,\r\n            'firstTimeIndex': firstTimeIndex,\r\n            'nextTimeStamp': findNextTime(firstTimeIndex, wholeText).nextTimeStamp,\r\n            'secondTimeIndex': findNextTime(firstTimeIndex, wholeText).secondTimeIndex,\r\n            'lineIndex': i,\r\n            'wholeText': wholeText,\r\n            'lineText': wholeText[i]\r\n          })\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n  return shuffle(theList)\r\n}\r\n*/\r\n\r\n//getSubtitleBetweenTwoStamps starts\r\nfunction getSubtitleBetweenTwoStamps(wholeText, firstTimeIndex, secondTimeIndex) {\r\n  let subtitleBetweenTwoStamps = wholeText.slice(firstTimeIndex + 1 , secondTimeIndex)\r\n  //console.log(subtitleBetweenTwoStamps)\r\n  let returnThis = subtitleBetweenTwoStamps.reduce(function( sub, line) {\r\n    return sub + line + '\\n'\r\n  }, '' )\r\n  return returnThis.split('\\n').slice(0, -1).join('\\n')\r\n}\r\n//getSubtitleBetweenTwoStamps starts\r\n\r\n//Must return the text between two time stamps ( which includes -->) and the time difference between the two\r\n//tillTheNextStamp starts\r\nfunction tillTheNextStamp(firstTime, firstTimeIndex, wholeText) {\r\n  var hour = ''\r\n  var minutes = ''\r\n  var seconds = ''\r\n  //var nextTimeStamp\r\n  var secondTimeIndex\r\n  var textBetweenTwoStamps\r\n\r\n  //console.log('firstTime', firstTime)\r\n  //console.log('firstTimeIndex', firstTimeIndex)\r\n\r\n  //console.log('firstTime:', firstTime)\r\n  //console.log('firstTimeIndex:', firstTimeIndex)\r\n\r\n\r\n  for(let i = firstTimeIndex + 1 ; i < wholeText.length - 1 ; i++){\r\n    if(wholeText[i].includes('-->') || i === wholeText.length - 1  ){\r\n      //nextTimeStamp = wholeText[i]\r\n      //console.log(seconds);\r\n      secondTimeIndex = i\r\n      //console.log('secondTimeIndex:', secondTimeIndex)\r\n      break\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //console.log(nextTimeStamp)\r\n  //For the time difference\r\n  let amk = wholeText[firstTimeIndex]\r\n  let timeStamp = amk.split(' --> ')\r\n  //console.log(timeStamp)\r\n  let subtitleEndHour = timeStamp[1].substring(0,2)\r\n  let subtitleEndMinutes = timeStamp[1].substring(3,5)\r\n  let subtitleEndSeconds = timeStamp[1].substring(6,8)\r\n  let secondTime = convertArrayTimeIntoSeconds([subtitleEndHour, subtitleEndMinutes, subtitleEndSeconds])\r\n\r\n  let difference = secondTime - firstTime\r\n  //console.log(difference)\r\n\r\n  textBetweenTwoStamps = getSubtitleBetweenTwoStamps(wholeText, firstTimeIndex, secondTimeIndex)\r\n  //console.log(textBetweenTwoStamps)\r\n  return { 'timeDifference': difference, 'text': textBetweenTwoStamps }\r\n  //'nextTimeStamp': nextTimeStamp }\r\n}\r\n//tillTheNextStamp ends\r\n\r\n\r\n\r\n//S-buildYouTubeLinkArray\r\nfunction buildYouTubeLinkArray(query, idArr, database){\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n        puncReg.source +\r\n        word +\r\n        puncReg.source +\r\n        endReg.source , 'i' )\r\n\r\n  //copy this into the global youtube link array\r\n  let theList = []\r\n  let copyIdArr = shuffle(idArr)\r\n\r\n  //idArr.forEach(function(id){\r\n  for(let index = 0 ; index < idArr.length - 1 ; index++){\r\n    let id = copyIdArr[index]\r\n    let wholeText = database.filter( subtitle => subtitle.videoId === id )[0].text\r\n    let l = wholeText.length\r\n\r\n    for(let i = 0; i < l - 1 ; i++){\r\n      let time\r\n      let timeStamp\r\n      let firstTimeIndex\r\n      let uTubeLink = ''\r\n      let wordArr = wholeText[i].split(' ')\r\n\r\n      wordArr.forEach(function(ord){\r\n        if(regex.test(ord)){\r\n          time = findTimeInVideo(i,wholeText).time\r\n          timeStamp = findTimeInVideo(i, wholeText).timeStamp\r\n          firstTimeIndex = findTimeInVideo(i, wholeText).firstTimeIndex\r\n          uTubeLink = buildLink(id,time)\r\n          theList.push({\r\n            'youtubeLink': uTubeLink,\r\n            'videoId': id,\r\n            'time': time,\r\n            'timeStamp': timeStamp,\r\n            'firstTimeIndex': firstTimeIndex,\r\n            'nextTimeStamp': findNextTime(firstTimeIndex, wholeText).nextTimeStamp,\r\n            'secondTimeIndex': findNextTime(firstTimeIndex, wholeText).secondTimeIndex,\r\n            'lineIndex': i,\r\n            //'wholeText': wholeText,\r\n            'shownSubtitles': tillTheNextStamp(time, firstTimeIndex, wholeText).text,\r\n            'timeDifference': tillTheNextStamp(time, firstTimeIndex, wholeText).timeDifference,\r\n            'lineText': wholeText[i]\r\n          })\r\n        }\r\n      })\r\n\r\n    }\r\n    if(theList.length > 1000){\r\n      break\r\n    }\r\n  //})\r\n  }\r\n\r\n\r\n  return shuffle(theList)\r\n}\r\n//E-buildYouTubeLinkArray\r\n\r\n\r\n\r\nexport default buildYouTubeLinkArray\r\n//module.exports = buildYouTubeLinkArray\r\n\r\n","/* eslint-disable no-unused-vars */\r\nfunction convertArrayTimeIntoSeconds(arr){\r\n  return parseInt(arr[0])*3600 + parseInt(arr[1])*60 + parseInt(arr[2])\r\n}\r\n\r\n//Must return the text between two time stamps ( which includes -->) and the time difference between the two\r\nfunction tillTheNextStamp(firstTime, firstTimeIndex, wholeText) {\r\n  var hour = ''\r\n  var minutes = ''\r\n  var seconds = ''\r\n  var nextTimeStamp\r\n  var secondTimeIndex\r\n  var textBetweenTwoStamps\r\n\r\n  //console.log('firstTime:', firstTime)\r\n  //console.log('firstTimeIndex:', firstTimeIndex)\r\n\r\n  for(let i = firstTimeIndex + 1 ; i < wholeText.length - 1 ; i++){\r\n    if(wholeText[i].includes('-->')){\r\n      nextTimeStamp = wholeText[i]\r\n      //console.log(seconds);\r\n      secondTimeIndex = i\r\n      //console.log('secondTimeIndex:', secondTimeIndex)\r\n      break\r\n    }\r\n  }\r\n\r\n  //For the time difference\r\n  let timeStamp = nextTimeStamp.split(' --> ')\r\n  let subtitleEndHour = timeStamp[0].substring(0,2)\r\n  let subtitleEndMinutes = timeStamp[0].substring(3,5)\r\n  let subtitleEndSeconds = timeStamp[0].substring(6,8)\r\n  let secondTime = convertArrayTimeIntoSeconds([subtitleEndHour, subtitleEndMinutes, subtitleEndSeconds])\r\n\r\n  let difference = secondTime - firstTime\r\n\r\n  textBetweenTwoStamps = getSubtitleBetweenTwoStamps(wholeText, firstTimeIndex, secondTimeIndex)\r\n  return { 'timeDifference': difference, 'text': textBetweenTwoStamps, 'nextTimeStamp': nextTimeStamp }\r\n}\r\n\r\nfunction getSubtitleBetweenTwoStamps(wholeText, firstTimeIndex, secondTimeIndex) {\r\n  let subtitleBetweenTwoStamps = wholeText.slice(firstTimeIndex + 1 , secondTimeIndex)\r\n  //console.log(subtitleBetweenTwoStamps)\r\n  let returnThis = subtitleBetweenTwoStamps.reduce(function( sub, line) {\r\n    return sub + line + '\\n'\r\n  }, '' )\r\n  return returnThis.split('\\n').slice(0, -1).join('\\n')\r\n}\r\n\r\nexport default tillTheNextStamp","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"main-header\">\r\n      <a onClick={props.logo} className=\"brand-logo\">\r\n        <div className=\"brand-logo-name\">youttala</div>\r\n      </a>\r\n      <div className=\"main-nav\">\r\n        <ul>\r\n          <li><a className='header-button' onClick={props.home}>home</a></li>\r\n          <li><a className='header-button' onClick={props.about}>about</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","/* eslint-disable linebreak-style */\r\n// eslint-disable-next-line linebreak-style\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\n\r\nconst SearchBar = (props) => {\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit = {props.handleSubmit}>\r\n        <input autoFocus className=\"searchbar\" value={props.query} type='text' placeholder='how to pronounce...' onChange={props.handleQueryChange}></input>\r\n        <button className=\"search-button\" type='submit'>search</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport YouTube from 'react-youtube'\r\nimport { FaBackward } from 'react-icons/fa'\r\nimport { FaForward } from 'react-icons/fa'\r\nimport { FaRedo } from 'react-icons/fa'\r\nimport { FaExclamationCircle } from 'react-icons/fa'\r\n\r\nconst Player = (props) => {\r\n\r\n  const showWhenVisible = { display: props.showStats ? '' : 'none' }\r\n  const showWhenNotVisible = { display: props.showStats ? 'none' : '' }\r\n\r\n  return (\r\n    <div className='player'>\r\n      <div className=\"video\">\r\n        <YouTube videoId={props.videoId} opts={props.opts} onPlay={props.onPlay}></YouTube>\r\n      </div>\r\n      <div className=\"player-bar\">\r\n        <div className=\"empty\">\r\n\r\n        </div>\r\n        <div className=\"button-set\">\r\n          <div>\r\n            <button className=\"button\" title='Previous video' id='back-button' onClick={props.handleBack}><FaBackward size= {23}/></button>\r\n          </div>\r\n          <div>\r\n            <button className=\"button\" id='restart-button' title='replay' onClick={props.handleKörOm}><FaRedo size= {23}/></button>\r\n          </div>\r\n          <div>\r\n            <button className=\"button\" id='next-button' title='next video' onClick={props.handleNext}><FaForward size= {23}/></button>\r\n          </div>\r\n        </div>\r\n        <div className=\"extras\">\r\n          <span style={showWhenVisible}> {props.videoIndex} of {props.length}</span>\r\n          <span style={showWhenNotVisible}></span>\r\n          <button style={showWhenVisible} className=\"button\" id='bug-button' title='report a bug' onClick={props.handleBug}><FaExclamationCircle size= {13}/></button>\r\n          <span style={showWhenNotVisible}></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { FaCopy } from 'react-icons/fa'\r\nimport { FaEye } from 'react-icons/fa'\r\n\r\nconst Subtitle = ({ shownSubtitles, shownSubtitlesArr, showSubtitle, handleShow, handleHide, query }) => {\r\n\r\n  const hideWhenVisible = { display: showSubtitle ? 'none' : '' }\r\n  const showWhenVisible = { display: showSubtitle ? '' : 'none' }\r\n\r\n  let word = query\r\n  let puncReg = /[.,\"'?!;:]*/\r\n  let startReg = /^/\r\n  let endReg = /$/\r\n  let regex = new RegExp(startReg.source +\r\n        puncReg.source +\r\n        word +\r\n        puncReg.source +\r\n        endReg.source , 'i' )\r\n\r\n  const beforeSearch = () => (\r\n    <div className=\"first-subtitle\">\r\n      <div className=\"yarrak\">\r\n        you can find your search result here!\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const afterSearch = () => (\r\n    <div>\r\n      <div style={showWhenVisible}>\r\n        <span>{shownSubtitles}</span>\r\n        <button>copy</button>\r\n        <button onClick={handleHide}>hide</button>\r\n      </div>\r\n      <div style={hideWhenVisible}>\r\n        <span>See your search result!</span>\r\n        <button onClick={handleShow}>show</button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const copy = (event) => {\r\n    event.preventDefault()\r\n    var copyText = document.getElementById('shownSubtitles').innerText\r\n\r\n    /* Copy the text inside the text field */\r\n    navigator.clipboard.writeText(copyText).then(clipText => copyText += clipText)\r\n\r\n    /* Alert the copied text */\r\n    //alert('Copied the text: ' + copyText.value)\r\n  }\r\n\r\n  const afterSearchXd = () => (\r\n    <div>\r\n      <div className=\"subtitle\" style={showWhenVisible}>\r\n        <div className=\"subtitle-buttons\">\r\n          <button style ={{ display: '' }} className=\"button\" onClick={copy}><FaCopy size= {13}/></button>\r\n          <button className=\"button\" title='hide the search result' onClick={handleHide}><FaEye size={13}/></button>\r\n        </div>\r\n        <div className=\"subtitle-subtitle\" >\r\n          <p className=\"paragraph\" id=\"shownSubtitles\">\r\n            {shownSubtitlesArr.map( (word, i=0) =>\r\n              <span\r\n                style={{ color: regex.test(word) ? 'red' : 'black' }}\r\n                key={word + i+1}>{`${word} `}</span>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"hidden-subtitle\" style={hideWhenVisible}>\r\n        <div id=\"three-dots\">\r\n          <span></span>\r\n        </div>\r\n        <div id=\"show-button-bar\">\r\n          <button className=\"button\" title='show the search result' onClick={handleShow}><FaEye size={13}/></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n  /*\r\n  const afterSearchXd = () => (\r\n    <div>\r\n      <div style={showWhenVisible}>\r\n        {shownSubtitlesArr.map( (word, i=0) =>\r\n          <span\r\n            style={{ color: regex.test(word) ? 'red' : 'black' }}\r\n            key={word + i+1}>{word}&nbsp;</span>\r\n        )}\r\n        <button>copy</button>\r\n        <button onClick={handleHide}>hide</button>\r\n      </div>\r\n      <div style={hideWhenVisible}>\r\n        <span>See your search result!</span>\r\n        <button onClick={handleShow}>show</button>\r\n      </div>\r\n    </div>\r\n  )\r\n  */\r\n\r\n\r\n  return (\r\n    <div>\r\n      {shownSubtitles === null ? beforeSearch() : afterSearchXd() }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Subtitle\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { FaRegPaperPlane } from 'react-icons/fa'\r\n\r\nconst Footer = () => {\r\n  const [showMail, setShowMail] = useState(false)\r\n\r\n  /*\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <nav className=\"footer-nav\">\r\n        <ul>\r\n          <li><a href=\"#\">&#169;2020 youttala.</a></li>\r\n          <li><a href=\"#\">e-mail</a></li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n  */\r\n  return (\r\n    <div className=\"main-footer\">\r\n      <span id='copyright'>&#169; 2021, youttala. all rights reserved.</span>\r\n      <span title='contact' id='contact'>info@youttala.com <a id='e-mail-a' href=\"mailto:info@youttala.com\"><FaRegPaperPlane/></a></span>\r\n      <span title='contact' id='contact-small'><a id='e-mail-a' href=\"mailto:info@youttala.com\"><FaRegPaperPlane/></a></span>\r\n    </div>\r\n  )\r\n/*\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <ul>\r\n          <li>license</li>\r\n          <li>e-mail</li>\r\n        </ul>\r\n      </footer>\r\n    </div>\r\n  )\r\n*/\r\n}\r\n\r\nexport default Footer","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\n\r\n//Will be hidden with CSS style, be used to correct buggy lines.\r\nconst AdminBar = (props) => {\r\n\r\n  //Change display to '' to be be eligible to correct the buggyLines\r\n  const style = {\r\n    display: 'none' ,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n  }\r\n\r\n  /*\r\n  <span>{props.adminMessage}</span>\r\n  <br></br>\r\n  Query bugId:\r\n  <input value={props.queryBugId} type='text' onChange={props.handleQueryBugIdChange}></input>\r\n  <button onClick={props.handleCorrect}>correct</button>\r\n  <span>{props.adminMessage}</span>\r\n  */\r\n\r\n  return (\r\n    <div style={style}>\r\n        admin bar, correct buggy lines!\r\n      <br></br>\r\n        OBS! dont forget to enable the correct put route and disable the other one in backend!\r\n      <br></br>\r\n        Search by videoId, once found search by bugId, once found remove it\r\n      <form onSubmit = {props.searchVideoById}>\r\n        Query videoId:\r\n        <input value={props.queryVideoId} type='text' onChange={props.handleQueryVideoIdChange}></input>\r\n        <button type='submit'>search by id</button>\r\n      </form>\r\n      <span>{props.adminMessage1}</span>\r\n      <br></br>\r\n      <form onSubmit={props.searchBugById}>\r\n        Query bugId:\r\n        <input value={props.queryBugId} type='text' onChange={props.handleQueryBugIdChange}></input>\r\n        <button type='submit'>search bug</button>\r\n      </form>\r\n      <span>{props.adminMessage2}</span>\r\n      <br></br>\r\n      <button onClick={props.handleCorrect}>remove the buggy part</button>\r\n      <br></br>\r\n      <span>{props.adminMessage3}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminBar\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport { FaHeadphones } from 'react-icons/fa'\r\nimport { FaExclamationCircle, FaAngleDown, FaAngleUp, FaSpinner } from 'react-icons/fa'\r\n\r\nconst About = (props) => {\r\n  const [showGuide, setShowGuide] = useState(false)\r\n\r\n  const handleShow = async(event) => {\r\n    event.preventDefault()\r\n    setShowGuide(!showGuide)\r\n  }\r\n\r\n\r\n  return (\r\n    <div id='about-container'>\r\n      <h1 id='about-title'>Hej!</h1>\r\n      <div id='about-description'>\r\n        Welcome to youttala!\r\n        <br></br>\r\n        <br></br>\r\n        youttala is a web application where Swedish learners can instantly learn how\r\n        Swedish words are actually pronounced by watching YouTube!\r\n        In youttala, you can hear the pronunciation of a word from real Swedish speakers in real use cases!\r\n        Just type the word you want to hear and search.\r\n        <br></br>\r\n        <br></br>\r\n         We hope that youttala would be a useful tool and wish you good luck in the learning journey!\r\n        <br></br>\r\n        <br></br>\r\n        <span>Before we start, please take a look at the quick guideline!<a className='angle' style={{ display: showGuide ? 'none' : '' }} onClick={handleShow}><FaAngleDown size={13}/></a><a className='angle' style={{ display: showGuide ? '' : 'none' }} onClick={handleShow}><FaAngleUp size={13}/></a></span>\r\n        <div id='guideline' style={{ display: showGuide ? '' : 'none' }}>\r\n          <div id='guideline-content'>\r\n            <FaSpinner className='spinner' size={10}/> For now, it is only possible to search a word,\r\n         so if you try to search a particle verb or a sentence, it would not work.\r\n            <br></br>\r\n            <br></br>\r\n            <FaSpinner className='spinner' size={10}/> We would be very happy if you help us and other learners by reporting bugs by clicking on\r\n        this sign <FaExclamationCircle size={10}/> that is located in the right-bottom corner of the player console.\r\n            <br></br>\r\n            <br></br>\r\n            <FaSpinner className='spinner' size={10}/> By bugs, we mean unmatching subtitles. Sometimes,\r\n        the piece of subtitle could be a paraphrased version of what is said rather than word by word captions.\r\n        We would like to identify and remove those instances to provide you a better experience!\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n        <a onClick={props.handleKörBara} style={{ display: showGuide ? 'none' : '' }} id='kör-bara'>Nu kör vi! <FaHeadphones size={17}/></a>\r\n        <div className='complete'></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react'\r\nimport subtitleService from './services/subtitles'\r\nimport contains from './functions/contains'\r\nimport buildYouTubeLinkArray from './functions/buildYouTubeLinkArray'\r\nimport tillTheNextStamp from './functions/tillTheNextStamp'\r\nimport Header from './components/Header'\r\nimport SearchBar from './components/SearchBar'\r\nimport Player from './components/Player'\r\nimport Subtitle from './components/Subtitle'\r\nimport Footer from './components/Footer'\r\nimport AdminBar from './components/AdminBar'\r\nimport About from './components/About'\r\n\r\nconst AppCopy2 = () => {\r\n  const [subtitles, setSubtitles] = useState([])\r\n  const [query, setQuery] = useState('')\r\n  const [youTubeLinks, setYouTubeLinks] = useState([])\r\n  const [videoIndex, setVideoIndex] = useState(0)\r\n  const [currentVideoId, setCurrentVideoId] = useState('vfQU6pI51ww')\r\n  //const [wholeText, setWholeText] = useState([]) //the text part of the playing subtitle\r\n  const [shownSubtitles, setShownSubtitles] = useState(null)\r\n  const [shownSubtitlesArr, setShownSubtitlesArr] = useState([])\r\n  const [showSubtitle ,setShowSubtitle] = useState(false)\r\n  const [showStats, setShowStats] = useState(false)\r\n  const [playingVideoTime, setPlayingVideoTime] = useState(0)\r\n  const [windowWidth, setWindowWidth] = useState(0)\r\n  const [windowHeight, setWindowHeight] = useState(0)\r\n  const [width, setWidth] = useState()\r\n  const [height, setHeight] = useState()\r\n  const [youTubeContainerClassName, setYouTubeContainerClassName] = useState('iFrame')\r\n  const [autoplay, setAutoplay] = useState(0)\r\n  const [firstTimeIndex, setFirstTimeIndex] = useState(0)\r\n  const [about, setAbout] = useState(false)\r\n  const [showGuide, setShowGuide] = useState(false)\r\n  const [appReady, setAppReady] = useState(false)\r\n  //for admin to manage removing buggy lines\r\n  const [queryVideoId, setQueryVideoId] = useState('')\r\n  const [bugId, setBugId] = useState('')\r\n  const [adminMesssage1, setAdminMessage1] = useState('')\r\n  const [currentSubtitle, setCurrentSubtitle] = useState(null)\r\n  const [adminMessage2, setAdminMessage2] = useState('')\r\n  const [adminMessage3, setAdminMessage3] = useState('')\r\n\r\n  const randomWords = [\r\n    'skillnad', 'stark', 'tycker',\r\n    'också', 'någon', 'någonsin',\r\n    'älskar' , 'skämtar', 'kör',\r\n    'gör', 'gjorde', 'gjort',\r\n    'sig', 'dig', 'mig',\r\n    'skönt', 'bygger', 'dagen',\r\n    'roligt', 'kul', 'jättekul',\r\n    'härifrån', 'åtminstone', 'därifrån',\r\n    'läskigt', 'försvinner', 'väldigt',\r\n    'längesen', 'själv', 'självklart',\r\n    'försiktig', 'allvarligt', 'läget'\r\n  ]\r\n\r\n  //iPhone 5/SE 320x568\r\n  //iPhone 6/7/8 375x667\r\n  //iPhone 6/7/8 Plus 414x736\r\n  //iPhone X 375x812\r\n  //iPad 768x1024\r\n  //iPad Pro 1024x1366\r\n\r\n  useEffect(() => {\r\n    subtitleService\r\n      .getAll()\r\n      .then(subtitles => {\r\n        setSubtitles(subtitles)\r\n        setAppReady(true)\r\n      })\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if(window.innerWidth < 415){\r\n      //iPhone 5/SE/6/7/8\r\n      setWidth('320')\r\n      setHeight('200')\r\n    }else if(window.innerWidth < 668){\r\n      //iPhone 6/7/8 Plus\r\n      setWidth('400')\r\n      setHeight('300')\r\n    }else if(window.innerWidth > 668){\r\n      //iPad and PC\r\n      setWidth('640')\r\n      setHeight('360')\r\n    }\r\n  },[])\r\n\r\n  window.addEventListener('resize', (event) => {\r\n    event.preventDefault()\r\n    if(window.innerWidth < 415){\r\n      setWidth('310')\r\n      setHeight('200')\r\n    }else if(window.innerWidth < 668){\r\n      setWidth('400')\r\n      setHeight('300')\r\n    }else if(window.innerWidth > 668){\r\n      setWidth('640')\r\n      setHeight('360')\r\n    }\r\n  })\r\n\r\n  let updateWidth = () => {\r\n    switch (width) {\r\n    case '640':\r\n      setWidth('640.1')\r\n      break\r\n    case '640.1':\r\n      setWidth('640')\r\n      break\r\n    case '400':\r\n      setWidth('400.1')\r\n      break\r\n    case '400.1':\r\n      setWidth('400')\r\n      break\r\n    case '310':\r\n      setWidth('310.1')\r\n      break\r\n    case '310.1':\r\n      setWidth('310')\r\n      break\r\n    }\r\n  }\r\n\r\n  //hide/show starts\r\n  const showWhenVisible = { display: showSubtitle ? '' : 'none' }\r\n  const showStatsWhenVisible = { display: showStats ? '' : 'none' }\r\n  //hide/shoe ends\r\n\r\n  //handleQueryChange starts\r\n  const handleQueryChange = (event) => setQuery(event.target.value)\r\n  //handleQueryChange starts\r\n\r\n  //S-setAfterSearch\r\n  const setAfterSearch = (youTubeLinkList) => {\r\n    setYouTubeLinks(youTubeLinkList)\r\n    setVideoIndex(0)\r\n    let videoId = youTubeLinkList[0].videoId\r\n    setCurrentVideoId(videoId)\r\n    let time = youTubeLinkList[0].time\r\n    setPlayingVideoTime(time)\r\n\r\n    if(videoId === currentVideoId && time === playingVideoTime){\r\n      updateWidth()\r\n    }\r\n\r\n    let firstTimeIndex = youTubeLinkList[0].firstTimeIndex\r\n    setFirstTimeIndex(firstTimeIndex)\r\n    setAutoplay(1)\r\n    setShowSubtitle(false)\r\n    setShowStats(true)\r\n  }\r\n  //E-setAfterSearch\r\n\r\n  //s-resetApp\r\n  const resetApp = ( query, text ) => {\r\n    setCurrentVideoId('vfQU6pI51ww')\r\n    //setWholeText([])\r\n    setFirstTimeIndex(0)\r\n    setPlayingVideoTime(0)\r\n    setAutoplay(0)\r\n    setShowStats(false)\r\n    setYouTubeLinks([])\r\n    let length = randomWords.length - 1\r\n    let word = randomWords[[Math.floor(Math.random()*length)]]\r\n    let shownText = `${text}${query}, try '${word}'`\r\n    setShownSubtitles(shownText)\r\n    let shownSubtitlesArr = shownText.split(/[\\s\\n]+/)\r\n    setShownSubtitlesArr(shownSubtitlesArr)\r\n    setShowSubtitle(true)\r\n  }\r\n  //e-resetApp\r\n\r\n  //handleSubmit starts\r\n  const handleSubmit = async(event) => {\r\n    event.preventDefault()\r\n    //console.log(query)\r\n    let youTubeLinkList = []\r\n    let videoIDsThatContain = []\r\n    if(query !== ''){\r\n      try {\r\n        if(appReady){\r\n          subtitles.forEach(subtitle => {\r\n            if(contains(query, subtitle.text)){\r\n              videoIDsThatContain.push(subtitle.videoId)\r\n            }\r\n          })\r\n          youTubeLinkList = buildYouTubeLinkArray(query, videoIDsThatContain, subtitles)\r\n          setAfterSearch(youTubeLinkList)\r\n          //console.log('done from frontend')\r\n        } else {\r\n          subtitleService.getResults(query)\r\n            .then(response => {\r\n              youTubeLinkList = response.youTubeLinkList\r\n              //console.log(youTubeLinkList.length)\r\n              videoIDsThatContain = response.videoIDsThatContain\r\n              if(videoIDsThatContain.length === 0){\r\n                resetApp( query, 'nothing found for ' )\r\n              } else {\r\n                setAfterSearch(youTubeLinkList)\r\n              }\r\n              //console.log('done from backend')\r\n            })\r\n        }\r\n      } catch (error) {\r\n        if(videoIDsThatContain.length === 0) {\r\n          resetApp( query, 'nothing found for ' )\r\n        }\r\n      }\r\n    } else {\r\n      resetApp( query, 'please type something' )\r\n    }\r\n  }\r\n  ////handleSubmit ends\r\n\r\n\r\n  //opts starts\r\n  const opts = {\r\n    height: height,\r\n    width: width,\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      cc_lang_pref: 'sv',\r\n      autoplay: autoplay,\r\n      start: playingVideoTime,\r\n      cc_load_policy: autoplay,\r\n      enablejsapi: 1,\r\n    },\r\n  }\r\n  //opts ends\r\n\r\n  //onPlay starts\r\n  const onPlay = (event) => {\r\n    let youTubeLink = youTubeLinks[videoIndex]\r\n    //console.log(youTubeLink)\r\n    let theTextBetweenTwoStamps = youTubeLink.shownSubtitles\r\n    //console.log(theTextBetweenTwoStamps)\r\n    setShownSubtitles(theTextBetweenTwoStamps)\r\n    let shownSubtitlesArr = theTextBetweenTwoStamps.split(/[\\s\\n]+/)\r\n    setShownSubtitlesArr(shownSubtitlesArr)\r\n    setShowSubtitle(true)\r\n    let timeOut = youTubeLink.timeDifference*1000 + 300\r\n    setTimeout(() => {\r\n      setShowSubtitle(false)\r\n    }, timeOut)\r\n  }\r\n  //onPlay ends\r\n\r\n  //handleBack starts\r\n  const handleBack = async(event) => {\r\n    event.preventDefault()\r\n    if(videoIndex >= 1){\r\n      setVideoIndex(videoIndex-1)\r\n      let videoId = youTubeLinks[videoIndex-1].videoId\r\n      setCurrentVideoId(videoId)\r\n      let time = youTubeLinks[videoIndex-1].time\r\n      setPlayingVideoTime(time)\r\n\r\n      if(videoId === currentVideoId && time === playingVideoTime){\r\n        updateWidth()\r\n      }\r\n      //let currentWholeText = youTubeLinks[videoIndex-1].wholeText\r\n      //setWholeText(currentWholeText)\r\n      let firstTimeIndex = youTubeLinks[videoIndex-1].firstTimeIndex\r\n      setFirstTimeIndex(firstTimeIndex)\r\n      setShowSubtitle(false)\r\n    }\r\n  }\r\n  //handleBack ends\r\n\r\n  //handleKörOm starts\r\n  const handleKörOm = async(event) => {\r\n    event.preventDefault()\r\n    setShowSubtitle(true)\r\n    updateWidth()\r\n  }\r\n  //handleKörOm ends\r\n\r\n  //handleBack starts\r\n  const handleNext = async(event) => {\r\n    event.preventDefault()\r\n    if(videoIndex < (youTubeLinks.length-1)){\r\n      setVideoIndex(videoIndex+1)\r\n      let videoId = youTubeLinks[videoIndex+1].videoId\r\n      setCurrentVideoId(videoId)\r\n      let time = youTubeLinks[videoIndex+1].time\r\n      setPlayingVideoTime(time)\r\n      updateWidth()\r\n      //let currentWholeText = youTubeLinks[videoIndex+1].wholeText\r\n      //setWholeText(currentWholeText)\r\n      let firstTimeIndex = youTubeLinks[videoIndex+1].firstTimeIndex\r\n      setFirstTimeIndex(firstTimeIndex)\r\n      setShowSubtitle(false)\r\n    }\r\n  }\r\n  //handleBack ends\r\n\r\n  //handleBug starts\r\n  const handleBug = async(videoId) => {\r\n    console.log(videoId)\r\n    let subtitleObject = {}\r\n    try {\r\n      subtitleObject = await subtitleService.getOne(videoId)\r\n        .then(response => response\r\n        )\r\n      //console.log(subtitleObject)\r\n      let buggyLines = subtitleObject.buggyLines\r\n      //console.log(subtitleObject.buggyLines)\r\n      const youTubeLink = youTubeLinks[videoIndex]\r\n      const timeStamp = youTubeLink.timeStamp\r\n      const hour = timeStamp.substring(0,2)\r\n      const minutes = timeStamp.substring(3,5)\r\n      const seconds = timeStamp.substring(6,8)\r\n      const mseconds = timeStamp.substring(9,12)\r\n      const bugId = `${youTubeLink.videoId}_${hour}${minutes}${seconds}${mseconds}`\r\n\r\n      //buggyLines = []\r\n\r\n      if(!buggyLines.find(bug => bug.bugId === bugId)){\r\n        //to clean the buggyLines of the subtitleObject disable from here to\r\n        buggyLines.push(\r\n          {\r\n            bugId: bugId,\r\n            buggyText: youTubeLink.lineText,\r\n            lineIndex: youTubeLink.lineIndex,\r\n            time: youTubeLink.time,\r\n            timeStamp: youTubeLink.timeStamp,\r\n            firstTimeIndex: youTubeLink.firstTimeIndex,\r\n            nextTimeStamp: youTubeLink.nextTimeStamp,\r\n            secondTimeIndex: youTubeLink.secondTimeIndex,\r\n            link: youTubeLink.youtubeLink })\r\n        //... to here\r\n        const newSubtitle = await subtitleService.reportBug({\r\n          //channelTitle: subtitleObject.channelTitle,\r\n          //videoId: subtitleObject.videoId,\r\n          videoId: subtitleObject.videoId,\r\n          buggyLines: buggyLines,\r\n          //text: subtitleObject.text\r\n        })\r\n      }else{\r\n        console.log('already reported')\r\n      }\r\n      //console.log('handleBug worked')\r\n      window.confirm('You found and reported a bug! Thank you for helping us and other learners!')\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log('handleBug failed')\r\n    }\r\n  }\r\n  //handleBug ends\r\n\r\n  const handleShow = () => setShowSubtitle(true)\r\n  const handleHide = () => setShowSubtitle(false)\r\n\r\n  //Admin\r\n  //\r\n\r\n  const handleQueryVideoIdChange = (event) => setQueryVideoId(event.target.value)\r\n  const handleQueryBugIdChange = (event) => setBugId(event.target.value)\r\n\r\n  //S-searchVideoById\r\n  const searchVideoById = async(event) => {\r\n    event.preventDefault()\r\n    try {\r\n      //setWholeText([])\r\n      setFirstTimeIndex(0)\r\n      setPlayingVideoTime(0)\r\n      setAutoplay(0)\r\n      setShowStats(false)\r\n      setYouTubeLinks([])\r\n\r\n      if(subtitles.find( subtitle => subtitle.videoId === queryVideoId)){\r\n        setCurrentVideoId(queryVideoId)\r\n        setAdminMessage1(`${queryVideoId} found`)\r\n        setCurrentSubtitle(subtitles.find( subtitle => subtitle.videoId === queryVideoId))\r\n      }else {\r\n        setCurrentVideoId('5bfx6BNufdE')\r\n        setAdminMessage1('This subtitle is not in the db')\r\n        setBugId('')\r\n        setAdminMessage2('')\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n      setAdminMessage1('There was an error, check the console')\r\n      //setWholeText([])\r\n      setFirstTimeIndex(0)\r\n      setPlayingVideoTime(0)\r\n      setAutoplay(0)\r\n      setShowStats(false)\r\n      setYouTubeLinks([])\r\n      setCurrentVideoId('5bfx6BNufdE')\r\n    }\r\n  }\r\n  //E-searchVideoById\r\n\r\n  //S-searchBugById\r\n  const searchBugById = async(event) => {\r\n    event.preventDefault()\r\n    try {\r\n      if(currentSubtitle.buggyLines.find(bug => bug.bugId === bugId)){\r\n        setAdminMessage2(`${bugId} found`)\r\n        setBugId(bugId)\r\n        let buggyLine = currentSubtitle.buggyLines.find(bug => bug.bugId === bugId)\r\n        setPlayingVideoTime(buggyLine.time)\r\n        setAutoplay(1)\r\n        setShownSubtitles(false)\r\n      } else {\r\n        setAdminMessage2(`${bugId} not found`)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      setAdminMessage2(`There was an error, see the console, ${bugId} not found`)\r\n    }\r\n  }\r\n  //E-searchBugById\r\n\r\n  //handleCorrect starts\r\n  const handleCorrect = async( subtitleObject, bugId ) => {\r\n    const buggyLine = subtitleObject.buggyLines.find(buggyLine => buggyLine.bugId === bugId)\r\n    console.log(buggyLine)\r\n    const confirmation = window.confirm(`Do you really want to remove the part from ${buggyLine.timeStamp} to ${buggyLine.nextTimeStamp}?`)\r\n    //const buggyLine = subtitleObject.buggyLines.find(buggyLine => buggyLine.bugId === bugId)\r\n\r\n    if(confirmation){\r\n      try {\r\n        const deleteFrom = buggyLine.firstTimeIndex\r\n        const deleteUpTo = buggyLine.secondTimeIndex\r\n        const deleteCount = deleteUpTo - deleteFrom\r\n        const buggyLines = subtitleObject.buggyLines.slice()\r\n        console.log(buggyLines)\r\n        const correctedBuggyLines = buggyLines.filter(buggyLine => buggyLine.bugId !== bugId)\r\n        console.log(correctedBuggyLines)\r\n        const correctedText = subtitleObject.text\r\n        correctedText.splice(deleteFrom, deleteCount)\r\n        const newSubtitle = await subtitleService.deleteBuggyLines({\r\n          //channelTitle: subtitleObject.channelTitle,\r\n          //videoId: subtitleObject.videoId,\r\n          id: subtitleObject.id,\r\n          buggyLines: correctedBuggyLines,\r\n          text: correctedText\r\n        })\r\n        setAdminMessage3(`${bugId} corrected`)\r\n      } catch (error) {\r\n        console.log(error)\r\n        setAdminMessage3('Correction failed, see the conssole')\r\n        //setAdminMessage('subtitle could not be corrected')\r\n      }\r\n    }else {\r\n      setAdminMessage3('Correction cancelled')\r\n    }\r\n\r\n  }\r\n  //handleCorrect ends\r\n\r\n  //S-handleHome\r\n  const handleHome = async(event) => {\r\n    event.preventDefault()\r\n    updateWidth()\r\n    setAbout(false)\r\n  }\r\n  //E-handleHome\r\n\r\n  //S-aboutPage\r\n  const aboutPage = () => (\r\n    <div>\r\n      <Header\r\n        about ={() => setAbout(true)}\r\n        home = {() => setAbout(false)}\r\n      />\r\n      <div id='main-container-about' className='container'>\r\n        <About handleKörBara={() => setAbout(false)}/>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n  //E-aboutPage\r\n\r\n  //S-appItself\r\n  const appItself = () => (\r\n    <div>\r\n      <Header\r\n        about ={() => setAbout(true)}\r\n        home = {handleHome}\r\n      />\r\n      <AdminBar\r\n        queryVideoId = {queryVideoId}\r\n        handleQueryVideoIdChange = {handleQueryVideoIdChange}\r\n        searchVideoById = {searchVideoById}\r\n        adminMessage1={adminMesssage1}\r\n        queryBugId={bugId}\r\n        handleQueryBugIdChange={handleQueryBugIdChange}\r\n        searchBugById={searchBugById}\r\n        adminMessage2={adminMessage2}\r\n        handleCorrect={() => handleCorrect(currentSubtitle, bugId)}\r\n        adminMessage3={adminMessage3}\r\n      />\r\n      <div>\r\n        <div className='container'>\r\n          <SearchBar\r\n            query={query}\r\n            handleQueryChange={handleQueryChange}\r\n            handleSubmit={handleSubmit}/>\r\n          <div className='player-all'>\r\n            <Player\r\n              videoId={currentVideoId}\r\n              opts={opts}\r\n              containerClassName={youTubeContainerClassName}\r\n              handleBack={handleBack}\r\n              handleKörOm={handleKörOm}\r\n              handleNext={handleNext}\r\n              onPlay={onPlay}\r\n              showStats={showStats}\r\n              videoIndex={videoIndex+1}\r\n              length={youTubeLinks.length}\r\n              handleBug={() => handleBug(currentVideoId)}\r\n            />\r\n          </div>\r\n          <Subtitle\r\n            showSubtitle={showSubtitle}\r\n            shownSubtitles={shownSubtitles}\r\n            shownSubtitlesArr={shownSubtitlesArr}\r\n            handleShow={handleShow}\r\n            handleHide={handleHide}\r\n            query={query}\r\n          />\r\n        </div>\r\n        <Footer/>\r\n      </div>\r\n    </div>\r\n  )\r\n  //E-appItself\r\n\r\n  return (\r\n    <div>\r\n      {about ? aboutPage() : appItself()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppCopy2\r\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport AppCopy from './AppCopy'\nimport ComingSoon from './ComingSoon'\nimport AppCopy1 from './AppCopy1'\nimport AppCopy2 from './AppCopy2'\nimport UnderMaintenance from './UnderMaintenance'\n\n\n\n\nReactDOM.render(\n  <AppCopy2 />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}